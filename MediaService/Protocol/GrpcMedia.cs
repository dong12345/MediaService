// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GrpcMedia.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GrpcMediaService {

  /// <summary>Holder for reflection information generated from GrpcMedia.proto</summary>
  public static partial class GrpcMediaReflection {

    #region Descriptor
    /// <summary>File descriptor for GrpcMedia.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GrpcMediaReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9HcnBjTWVkaWEucHJvdG8SEEdycGNNZWRpYVNlcnZpY2UihgQKEEZvcm1Q",
            "dWJsaWNTdHJ1Y3QSCgoCaWQYASABKAkSEQoJY29tcGFueUlkGAIgASgJEhUK",
            "DWNvbXBhbnlOYW1lQ24YAyABKAkSFQoNY29tcGFueU5hbWVFbhgEIAEoCRIP",
            "CgdhZGRyZXNzGAUgASgJEhEKCWFkZHJlc3NFbhgGIAEoCRIRCgl0ZWxlcGhv",
            "bmUYByABKAkSCwoDZmF4GAggASgJEg0KBWVtYWlsGAkgASgJEg8KB3dlYnNp",
            "dGUYCiABKAkSFgoOcGF2aWxpb25OdW1iZXIYCyABKAkSEwoLYm9vdGhOdW1i",
            "ZXIYDCABKAkSDgoGb3B0aW9uGA0gASgJEhMKC2Rlc2NyaXB0aW9uGA4gASgJ",
            "EhUKDWRlc2NyaXB0aW9uRW4YDyABKAkSFwoPc25lY0xvZ29XZWJzaXRlGBAg",
            "ASgJEgwKBGxvZ28YESABKAkSEgoKdXBkYXRlZF9hdBgSIAEoCRISCgpjcmVh",
            "dGVkX2F0GBMgASgJEg8KB293bmVySWQYFCABKAkSEQoJb3duZXJOYW1lGBUg",
            "ASgJEg0KBWlzUGF5GBYgASgIEhIKCmlzSGF2ZUxvZ28YFyABKAgSFgoOY29u",
            "dHJhY3ROdW1iZXIYGCABKAkSFQoNZXhiQ29udHJhY3RJZBgZIAEoCRITCgtw",
            "cm9kdWN0VHlwZRgaIAEoCSItChRFeGJDb250cmFjdElkUmVxdWVzdBIVCg1l",
            "eGJDb250cmFjdElkGAEgASgJIlUKDkZvcm1QdWJsaWNMaXN0EjQKCGxpc3Rk",
            "YXRhGAEgAygLMiIuR3JwY01lZGlhU2VydmljZS5Gb3JtUHVibGljU3RydWN0",
            "Eg0KBXRvdGFsGAIgASgFInQKF1BhZ2luYXRpb25SZXF1ZXN0U2VhcmNoEgoK",
            "AmlkGAEgASgFEg4KBm9mZnNldBgCIAEoBRINCgVsaW1pdBgDIAEoBRIuCgZz",
            "ZWFyY2gYBCABKAsyHi5HcnBjTWVkaWFTZXJ2aWNlLlNlYXJjaFN0cnVjdCLI",
            "AgoNRXhwcmVzc1N0cnVjdBIKCgJpZBgBIAEoCRIRCgljb21wYW55SWQYAiAB",
            "KAkSEgoKZXhwcmVzc051bRgDIAEoCRIQCghzZW50RGF0ZRgEIAEoCRIQCghz",
            "ZW5kZXJJZBgFIAEoCRIOCgZzZW5kZXIYBiABKAkSFQoNcmVjaXBpZW50VW5p",
            "dBgHIAEoCRIPCgdhZGRyZXNzGAggASgJEhEKCXJlY2lwaWVudBgJIAEoCRIL",
            "CgN0ZWwYCiABKAkSFgoOZXhwcmVzc0NvbnRlbnQYCyABKAkSDQoFcHJpY2UY",
            "DCABKAkSFgoOZXhwcmVzc0NvbXBhbnkYDSABKAkSEQoJaXNFeGFtaW5lGA4g",
            "ASgIEg4KBmlzU2VuZBgPIAEoCBISCgpjcmVhdGVkX2F0GBAgASgJEhIKCnVw",
            "ZGF0ZWRfYXQYESABKAkiTwoLRXhwcmVzc0xpc3QSMQoIbGlzdGRhdGEYASAD",
            "KAsyHy5HcnBjTWVkaWFTZXJ2aWNlLkV4cHJlc3NTdHJ1Y3QSDQoFdG90YWwY",
            "AiABKAUiwAEKFENhdGFsb2d1ZUJvb2tzU3RydWN0EgoKAmlkGAEgASgJEgwK",
            "BG5hbWUYAiABKAkSDwoHY291bnRyeRgDIAEoBRIPCgdhZGRyZXNzGAQgASgJ",
            "EgsKA3RlbBgFIAEoCRINCgVlbWFpbBgGIAEoCRINCgVjb3VudBgHIAEoBRIL",
            "CgNkZXMYCCABKAkSDAoEdHlwZRgJIAEoCRISCgpjcmVhdGVkX2F0GAogASgJ",
            "EhIKCnVwZGF0ZWRfYXQYCyABKAkiXQoSQ2F0YWxvZ3VlQm9va3NMaXN0EjgK",
            "CGxpc3RkYXRhGAEgAygLMiYuR3JwY01lZGlhU2VydmljZS5DYXRhbG9ndWVC",
            "b29rc1N0cnVjdBINCgV0b3RhbBgCIAEoBSK6AgoPSW50ZXJ2aWV3U3RydWN0",
            "EgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSDgoGbmFtZUVuGAMgASgJEhAK",
            "CGpvYlRpdGxlGAQgASgJEhIKCmpvYlRpdGxlRW4YBSABKAkSDQoFcGhvdG8Y",
            "BiABKAkSFAoMaW50cm9kdWN0aW9uGAcgASgJEhUKDWludGVydmlld1RpbWUY",
            "CCABKAkSEQoJbWVkaWFOYW1lGAkgASgJEhAKCG1lbWJlcklkGAogASgJEhMK",
            "C2NvbXBhbnlOYW1lGAsgASgJEhUKDWNvbXBhbnlOYW1lRW4YDCABKAkSDwoH",
            "b3duZXJJZBgNIAEoCRIRCglvd25lck5hbWUYDiABKAkSEgoKY3JlYXRlZF9h",
            "dBgPIAEoCRISCgp1cGRhdGVkX2F0GBAgASgJIlMKDUludGVydmlld0xpc3QS",
            "MwoIbGlzdGRhdGEYASADKAsyIS5HcnBjTWVkaWFTZXJ2aWNlLkludGVydmll",
            "d1N0cnVjdBINCgV0b3RhbBgCIAEoBSLpAwoUSGlnaGxpZ2h0c0luZm9TdHJ1",
            "Y3QSCgoCSWQYASABKAkSEAoITERuYW1lQ24YAiABKAkSEAoITERuYW1lRW4Y",
            "AyABKAkSFAoMTERkZXNjcmliZUNuGAQgASgJEhQKDExEZGVzY3JpYmVFbhgF",
            "IAEoCRIPCgdMRGltYWdlGAYgASgJEg4KBkxEbG9nbxgHIAEoCRIOCgZZSm5h",
            "bWUYCCABKAkSEAoIWUpuYW1lRW4YCSABKAkSEgoKWUpQb3NpdGlvbhgKIAEo",
            "CRIUCgxZSlBvc2l0aW9uRW4YCyABKAkSFgoOWUpJbnRyb2R1Y3Rpb24YDCAB",
            "KAkSDwoHWUpQaG90bxgNIAEoCRIPCgdTaG93V2F5GA4gASgJEhAKCENvbnRy",
            "YWN0GA8gASgJEhcKD0NvbnRyYWN0Q29tcGFueRgQIAEoCRIZChFDb250cmFj",
            "dENvbXBhbnlFbhgRIAEoCRILCgNUZWwYEiABKAkSDgoGTW9iaWxlGBMgASgJ",
            "Eg0KBUVtYWlsGBQgASgJEhAKCE1lbWJlcklkGBUgASgJEg8KB093bmVySWQY",
            "FiABKAkSEQoJT3duZXJOYW1lGBcgASgJEhIKCkNyZWF0ZWRfYXQYGCABKAkS",
            "EgoKVXBkYXRlZF9hdBgZIAEoCSJdChJIaWdobGlnaHRzSW5mb0xpc3QSOAoI",
            "bGlzdGRhdGEYASADKAsyJi5HcnBjTWVkaWFTZXJ2aWNlLkhpZ2hsaWdodHNJ",
            "bmZvU3RydWN0Eg0KBXRvdGFsGAIgASgFIiEKDkhvdGVsSWRSZXF1ZXN0Eg8K",
            "B2hvdGVsSWQYASABKAkimQMKC0hvdGVsU3RydWN0Eg8KB0hvdGVsSWQYASAB",
            "KAkSEQoJSG90ZWxDb2RlGAIgASgJEhEKCUhvdGVsTmFtZRgDIAEoCRITCgtI",
            "b3RlbE5hbWVFbhgEIAEoCRIUCgxIb3RlbEFkZHJlc3MYBSABKAkSFgoOSG90",
            "ZWxBZGRyZXNzRW4YBiABKAkSDwoHQ291bnRyeRgHIAEoCRIPCgdLZXlXb3Jk",
            "GAggASgJEhIKCkhvdGVsRW1haWwYCSABKAkSEAoISG90ZWxUZWwYCiABKAkS",
            "EgoKSG90ZWxMZXZlbBgLIAEoBRIZChFIb3RlbEludHJvZHVjdGlvbhgMIAEo",
            "CRIbChNIb3RlbEludHJvZHVjdGlvbkVuGA0gASgJEhAKCEJhbmtJbmZvGA4g",
            "ASgJEhIKCkJhbmtJbmZvRW4YDyABKAkSDgoGUmVtYXJrGBAgASgJEhAKCFJl",
            "bWFya0VuGBEgASgJEgwKBFNvcnQYEiABKAUSEgoKQ3JlYXRlZF9hdBgTIAEo",
            "CRISCgpVcGRhdGVkX2F0GBQgASgJItQDCgdIb3RlbFZNEg8KB0hvdGVsSWQY",
            "ASABKAkSEQoJSG90ZWxDb2RlGAIgASgJEhEKCUhvdGVsTmFtZRgDIAEoCRIT",
            "CgtIb3RlbE5hbWVFbhgEIAEoCRIUCgxIb3RlbEFkZHJlc3MYBSABKAkSFgoO",
            "SG90ZWxBZGRyZXNzRW4YBiABKAkSDwoHQ291bnRyeRgHIAEoCRIPCgdLZXlX",
            "b3JkGAggASgJEhIKCkhvdGVsRW1haWwYCSABKAkSEAoISG90ZWxUZWwYCiAB",
            "KAkSEgoKSG90ZWxMZXZlbBgLIAEoBRIZChFIb3RlbEludHJvZHVjdGlvbhgM",
            "IAEoCRIbChNIb3RlbEludHJvZHVjdGlvbkVuGA0gASgJEhAKCEJhbmtJbmZv",
            "GA4gASgJEhIKCkJhbmtJbmZvRW4YDyABKAkSDgoGUmVtYXJrGBAgASgJEhAK",
            "CFJlbWFya0VuGBEgASgJEgwKBFNvcnQYEiABKAUSEgoKQ3JlYXRlZF9hdBgT",
            "IAEoCRISCgpVcGRhdGVkX2F0GBQgASgJEj0KDkhvdGVsUm9vbVR5cGVzGBUg",
            "AygLMiUuR3JwY01lZGlhU2VydmljZS5Ib3RlbFJvb21UeXBlU3RydWN0IkcK",
            "CUhvdGVsTGlzdBIrCghsaXN0ZGF0YRgBIAMoCzIZLkdycGNNZWRpYVNlcnZp",
            "Y2UuSG90ZWxWTRINCgV0b3RhbBgCIAEoBSIxChZIb3RlbFJvb21UeXBlSWRS",
            "ZXF1ZXN0EhcKD2hvdGVsUm9vbVR5cGVJZBgBIAEoCSKTAgoTSG90ZWxSb29t",
            "VHlwZVN0cnVjdBIXCg9Ib3RlbFJvb21UeXBlSWQYASABKAkSDwoHSG90ZWxJ",
            "ZBgCIAEoCRIQCghUeXBlTmFtZRgDIAEoCRISCgpUeXBlTmFtZUVuGAQgASgJ",
            "Eg8KB0JlZFR5cGUYBSABKAkSEQoJQmVkVHlwZUVuGAYgASgJEhAKCE1heENv",
            "dW50GAcgASgFEg0KBVByaWNlGAggASgJEgsKA1RheBgJIAEoCRITCgtJc0Jy",
            "ZWFrZmFzdBgKIAEoCBINCgVJc05ldBgLIAEoCBIOCgZJc1VzZWQYDCABKAgS",
            "EgoKQ3JlYXRlZF9hdBgNIAEoCRISCgpVcGRhdGVkX2F0GA4gASgJIlsKEUhv",
            "dGVsUm9vbVR5cGVMaXN0EjcKCGxpc3RkYXRhGAEgAygLMiUuR3JwY01lZGlh",
            "U2VydmljZS5Ib3RlbFJvb21UeXBlU3RydWN0Eg0KBXRvdGFsGAIgASgFIiMK",
            "D01lbWJlcklkUmVxdWVzdBIQCghtZW1iZXJJZBgBIAEoCSL0BwoVSG90ZWxC",
            "b29rUmVjb3JkU3RydWN0EgoKAklkGAEgASgJEhAKCE1lbWJlcklkGAIgASgJ",
            "EhUKDU1lbWJlckNvbXBhbnkYAyABKAkSFwoPTWVtYmVyQ29tcGFueUVuGAQg",
            "ASgJEg8KB0hvdGVsSWQYBSABKAkSFwoPSG90ZWxSb29tVHlwZUlkGAYgASgJ",
            "EhAKCEJvb2tUaW1lGAcgASgJEhMKC0NoZWNrSW5UaW1lGAggASgJEhQKDENo",
            "ZWNrT3V0VGltZRgJIAEoCRISCgpJc0NhbmNlbGVkGAogASgIEhEKCUlzQ2hl",
            "Y2tlZBgLIAEoBRISCgpQcmljZUNvdW50GAwgASgJEg4KBlJlbWFyaxgNIAEo",
            "CRIMCgREYXlzGA4gASgFEhQKDEFycml2ZUZsaWdodBgPIAEoCRITCgtMZWF2",
            "ZUZsaWdodBgQIAEoCRIPCgdJc1Ntb2tlGBEgASgIEhgKEExpbmtNYW5GaXJz",
            "dE5hbWUYEiABKAkSFwoPTGlua01hbkxhc3ROYW1lGBMgASgJEhIKCkxpbmtN",
            "YW5UZWwYFCABKAkSFAoMTGlua01hbkVtYWlsGBUgASgJEhQKDExpbmtNYW5U",
            "aXRsZRgWIAEoCRIWCg5MaW5rTWFuQ291bnRyeRgXIAEoCRITCgtMaW5rTWFu",
            "Q2l0eRgYIAEoCRISCgpMaW5rTWFuRmF4GBkgASgJEhkKEUxpbmtNYW5JZENh",
            "cmRUeXBlGBogASgJEhsKE0xpbmtNYW5JZENhcmROdW1iZXIYGyABKAkSFgoO",
            "TGlua01hbkNvbXBhbnkYHCABKAkSFQoNTGlua01hbk1vYmlsZRgdIAEoCRIU",
            "CgxMaW5rTWFuQmlydGgYHiABKAkSEQoJT3RoZXJOYW1lGB8gASgJEhIKCk90",
            "aGVyVGl0bGUYICABKAkSEgoKT3RoZXJFbWFpbBghIAEoCRITCgtPdGhlck1v",
            "YmlsZRgiIAEoCRIUCgxPdGhlckNvbXBhbnkYIyABKAkSEgoKQ2FyZFBlcnNv",
            "bhgkIAEoCRIQCghDYXJkVHlwZRglIAEoCRISCgpDYXJkTnVtYmVyGCYgASgJ",
            "EhAKCENhcmREYXRlGCcgASgJEg0KBVBheWVyGCggASgJEg8KB1BheVR5cGUY",
            "KSABKAkSFQoNTGlua01hbkVtYWlsMhgqIAEoCRISCgpDcmVhdGVkX2F0GCsg",
            "ASgJEhIKClVwZGF0ZWRfYXQYLCABKAkSEQoJSXNXZWJzaXRlGC0gASgIEhMK",
            "C09yZGVyTnVtYmVyGC4gASgJEhMKC01lbWJlckVtYWlsGC8gASgJEhIKCk1l",
            "bWJlck5hbWUYMCABKAki6ggKF0hvdGVsQm9va1JlY29yZFN0cnVjdFZNEgoK",
            "AklkGAEgASgJEhAKCE1lbWJlcklkGAIgASgJEhUKDU1lbWJlckNvbXBhbnkY",
            "AyABKAkSFwoPTWVtYmVyQ29tcGFueUVuGAQgASgJEg8KB0hvdGVsSWQYBSAB",
            "KAkSFwoPSG90ZWxSb29tVHlwZUlkGAYgASgJEhAKCEJvb2tUaW1lGAcgASgJ",
            "EhMKC0NoZWNrSW5UaW1lGAggASgJEhQKDENoZWNrT3V0VGltZRgJIAEoCRIS",
            "CgpJc0NhbmNlbGVkGAogASgIEhEKCUlzQ2hlY2tlZBgLIAEoBRISCgpQcmlj",
            "ZUNvdW50GAwgASgJEg4KBlJlbWFyaxgNIAEoCRIMCgREYXlzGA4gASgFEhQK",
            "DEFycml2ZUZsaWdodBgPIAEoCRITCgtMZWF2ZUZsaWdodBgQIAEoCRIPCgdJ",
            "c1Ntb2tlGBEgASgIEhgKEExpbmtNYW5GaXJzdE5hbWUYEiABKAkSFwoPTGlu",
            "a01hbkxhc3ROYW1lGBMgASgJEhIKCkxpbmtNYW5UZWwYFCABKAkSFAoMTGlu",
            "a01hbkVtYWlsGBUgASgJEhQKDExpbmtNYW5UaXRsZRgWIAEoCRIWCg5MaW5r",
            "TWFuQ291bnRyeRgXIAEoCRITCgtMaW5rTWFuQ2l0eRgYIAEoCRISCgpMaW5r",
            "TWFuRmF4GBkgASgJEhkKEUxpbmtNYW5JZENhcmRUeXBlGBogASgJEhsKE0xp",
            "bmtNYW5JZENhcmROdW1iZXIYGyABKAkSFgoOTGlua01hbkNvbXBhbnkYHCAB",
            "KAkSFQoNTGlua01hbk1vYmlsZRgdIAEoCRIUCgxMaW5rTWFuQmlydGgYHiAB",
            "KAkSEQoJT3RoZXJOYW1lGB8gASgJEhIKCk90aGVyVGl0bGUYICABKAkSEgoK",
            "T3RoZXJFbWFpbBghIAEoCRITCgtPdGhlck1vYmlsZRgiIAEoCRIUCgxPdGhl",
            "ckNvbXBhbnkYIyABKAkSEgoKQ2FyZFBlcnNvbhgkIAEoCRIQCghDYXJkVHlw",
            "ZRglIAEoCRISCgpDYXJkTnVtYmVyGCYgASgJEhAKCENhcmREYXRlGCcgASgJ",
            "Eg0KBVBheWVyGCggASgJEg8KB1BheVR5cGUYKSABKAkSFQoNTGlua01hbkVt",
            "YWlsMhgqIAEoCRISCgpDcmVhdGVkX2F0GCsgASgJEhIKClVwZGF0ZWRfYXQY",
            "LCABKAkSEQoJSXNXZWJzaXRlGC0gASgIEjAKCUhvdGVsSXRlbRguIAEoCzId",
            "LkdycGNNZWRpYVNlcnZpY2UuSG90ZWxTdHJ1Y3QSQAoRSG90ZWxSb29tVHlw",
            "ZUl0ZW0YLyABKAsyJS5HcnBjTWVkaWFTZXJ2aWNlLkhvdGVsUm9vbVR5cGVT",
            "dHJ1Y3QSEwoLT3JkZXJOdW1iZXIYMCABKAkSEwoLTWVtYmVyRW1haWwYMSAB",
            "KAkSEgoKTWVtYmVyTmFtZRgyIAEoCSJhChNIb3RlbEJvb2tSZWNvcmRMaXN0",
            "EjsKCGxpc3RkYXRhGAEgAygLMikuR3JwY01lZGlhU2VydmljZS5Ib3RlbEJv",
            "b2tSZWNvcmRTdHJ1Y3RWTRINCgV0b3RhbBgCIAEoBSJlChFPcmRlclBlcnNv",
            "blN0cnVjdBIQCghNZW1iZXJJZBgBIAEoCRITCgtNZW1iZXJFbWFpbBgCIAEo",
            "CRIVCg1NZW1iZXJDb21wYW55GAMgASgJEhIKCk1lbWJlck5hbWUYBCABKAki",
            "VwoPT3JkZXJQZXJzb25MaXN0EjUKCGxpc3RkYXRhGAEgAygLMiMuR3JwY01l",
            "ZGlhU2VydmljZS5PcmRlclBlcnNvblN0cnVjdBINCgV0b3RhbBgCIAEoBSIH",
            "CgVFbXB0eSIXCglJZFJlcXVlc3QSCgoCaWQYASABKAkiQwoLTW9kaWZ5UmVw",
            "bHkSDwoHc3VjY2VzcxgBIAEoCBIWCg5tb2RpZmllZF9jb3VudBgCIAEoBRIL",
            "CgNtc2cYAyABKAkinwMKDFNlYXJjaFN0cnVjdBITCgtjb21wYW55TmFtZRgB",
            "IAEoCRIWCg5jb250cmFjdE51bWJlchgCIAEoCRIWCg5wYXZpbGlvbk51bWJl",
            "chgDIAEoCRITCgtib290aE51bWJlchgEIAEoCRIPCgdvd25lcklkGAUgASgJ",
            "Eg0KBWlzUGF5GAYgASgJEhIKCmlzSGF2ZUxvZ28YByABKAkSEgoKYmVnaW5f",
            "ZGF0ZRgIIAEoCRIQCghlbmRfZGF0ZRgJIAEoCRISCgpleHByZXNzTnVtGAog",
            "ASgJEg4KBnNlbmRlchgLIAEoCRIRCglyZWNpcGllbnQYDCABKAkSFQoNcmVj",
            "aXBpZW50VW5pdBgNIAEoCRIPCgdob3RlbElkGA4gASgJEhcKD2hvdGVsUm9v",
            "bVR5cGVJZBgPIAEoCRISCgppc0NhbmNlbGVkGBAgASgJEhEKCWlzQ2hlY2tl",
            "ZBgRIAEoCRIRCglpc1dlYnNpdGUYEiABKAkSDAoEdHlwZRgTIAEoCRINCgVl",
            "bWFpbBgUIAEoCRIMCgRuYW1lGBUgASgJMr4iChJNZWRpYVNlcnZpY2VUb0dy",
            "cGMSWwoUY3JlYXRlRm9ybVB1YmxpY0luZm8SIi5HcnBjTWVkaWFTZXJ2aWNl",
            "LkZvcm1QdWJsaWNTdHJ1Y3QaHS5HcnBjTWVkaWFTZXJ2aWNlLk1vZGlmeVJl",
            "cGx5IgASWwoUdXBkYXRlRm9ybVB1YmxpY0luZm8SIi5HcnBjTWVkaWFTZXJ2",
            "aWNlLkZvcm1QdWJsaWNTdHJ1Y3QaHS5HcnBjTWVkaWFTZXJ2aWNlLk1vZGlm",
            "eVJlcGx5IgASWAoYZGVsZXRlRm9ybVB1YmxpY0luZm9CeUlkEhsuR3JwY01l",
            "ZGlhU2VydmljZS5JZFJlcXVlc3QaHS5HcnBjTWVkaWFTZXJ2aWNlLk1vZGlm",
            "eVJlcGx5IgASVAoVZ2V0Rm9ybVB1YmxpY0luZm9MaXN0EhcuR3JwY01lZGlh",
            "U2VydmljZS5FbXB0eRogLkdycGNNZWRpYVNlcnZpY2UuRm9ybVB1YmxpY0xp",
            "c3QiABJaChVnZXRGb3JtUHVibGljSW5mb0J5SWQSGy5HcnBjTWVkaWFTZXJ2",
            "aWNlLklkUmVxdWVzdBoiLkdycGNNZWRpYVNlcnZpY2UuRm9ybVB1YmxpY1N0",
            "cnVjdCIAEmIKEWdldEZvcm1QdWJsaWNMaXN0EikuR3JwY01lZGlhU2Vydmlj",
            "ZS5QYWdpbmF0aW9uUmVxdWVzdFNlYXJjaBogLkdycGNNZWRpYVNlcnZpY2Uu",
            "Rm9ybVB1YmxpY0xpc3QiABJwCiBnZXRGb3JtUHVibGljSW5mb0J5RXhiQ29u",
            "dHJhY3RJZBImLkdycGNNZWRpYVNlcnZpY2UuRXhiQ29udHJhY3RJZFJlcXVl",
            "c3QaIi5HcnBjTWVkaWFTZXJ2aWNlLkZvcm1QdWJsaWNTdHJ1Y3QiABJrCiRv",
            "cGVyYXRlRm9ybVB1YmxpY0luZm9CeUV4YkNvbnRyYWN0SWQSIi5HcnBjTWVk",
            "aWFTZXJ2aWNlLkZvcm1QdWJsaWNTdHJ1Y3QaHS5HcnBjTWVkaWFTZXJ2aWNl",
            "Lk1vZGlmeVJlcGx5IgASVQoRY3JlYXRlRXhwcmVzc0luZm8SHy5HcnBjTWVk",
            "aWFTZXJ2aWNlLkV4cHJlc3NTdHJ1Y3QaHS5HcnBjTWVkaWFTZXJ2aWNlLk1v",
            "ZGlmeVJlcGx5IgASVQoRdXBkYXRlRXhwcmVzc0luZm8SHy5HcnBjTWVkaWFT",
            "ZXJ2aWNlLkV4cHJlc3NTdHJ1Y3QaHS5HcnBjTWVkaWFTZXJ2aWNlLk1vZGlm",
            "eVJlcGx5IgASVQoVZGVsZXRlRXhwcmVzc0luZm9CeUlkEhsuR3JwY01lZGlh",
            "U2VydmljZS5JZFJlcXVlc3QaHS5HcnBjTWVkaWFTZXJ2aWNlLk1vZGlmeVJl",
            "cGx5IgASVAoSZ2V0RXhwcmVzc0luZm9CeUlkEhsuR3JwY01lZGlhU2Vydmlj",
            "ZS5JZFJlcXVlc3QaHy5HcnBjTWVkaWFTZXJ2aWNlLkV4cHJlc3NTdHJ1Y3Qi",
            "ABJcCg5nZXRFeHByZXNzTGlzdBIpLkdycGNNZWRpYVNlcnZpY2UuUGFnaW5h",
            "dGlvblJlcXVlc3RTZWFyY2gaHS5HcnBjTWVkaWFTZXJ2aWNlLkV4cHJlc3NM",
            "aXN0IgASYwoYY3JlYXRlQ2F0YWxvZ3VlQm9va3NJbmZvEiYuR3JwY01lZGlh",
            "U2VydmljZS5DYXRhbG9ndWVCb29rc1N0cnVjdBodLkdycGNNZWRpYVNlcnZp",
            "Y2UuTW9kaWZ5UmVwbHkiABJjChh1cGRhdGVDYXRhbG9ndWVCb29rc0luZm8S",
            "Ji5HcnBjTWVkaWFTZXJ2aWNlLkNhdGFsb2d1ZUJvb2tzU3RydWN0Gh0uR3Jw",
            "Y01lZGlhU2VydmljZS5Nb2RpZnlSZXBseSIAElgKGGRlbGV0ZUNhdGFsb2d1",
            "ZUJvb2tzQnlJZBIbLkdycGNNZWRpYVNlcnZpY2UuSWRSZXF1ZXN0Gh0uR3Jw",
            "Y01lZGlhU2VydmljZS5Nb2RpZnlSZXBseSIAEl4KFWdldENhdGFsb2d1ZUJv",
            "b2tzQnlJZBIbLkdycGNNZWRpYVNlcnZpY2UuSWRSZXF1ZXN0GiYuR3JwY01l",
            "ZGlhU2VydmljZS5DYXRhbG9ndWVCb29rc1N0cnVjdCIAEmoKFWdldENhdGFs",
            "b2d1ZUJvb2tzTGlzdBIpLkdycGNNZWRpYVNlcnZpY2UuUGFnaW5hdGlvblJl",
            "cXVlc3RTZWFyY2gaJC5HcnBjTWVkaWFTZXJ2aWNlLkNhdGFsb2d1ZUJvb2tz",
            "TGlzdCIAElkKE2NyZWF0ZUludGVydmlld0luZm8SIS5HcnBjTWVkaWFTZXJ2",
            "aWNlLkludGVydmlld1N0cnVjdBodLkdycGNNZWRpYVNlcnZpY2UuTW9kaWZ5",
            "UmVwbHkiABJZChN1cGRhdGVJbnRlcnZpZXdJbmZvEiEuR3JwY01lZGlhU2Vy",
            "dmljZS5JbnRlcnZpZXdTdHJ1Y3QaHS5HcnBjTWVkaWFTZXJ2aWNlLk1vZGlm",
            "eVJlcGx5IgASUwoTZGVsZXRlSW50ZXJ2aWV3QnlJZBIbLkdycGNNZWRpYVNl",
            "cnZpY2UuSWRSZXF1ZXN0Gh0uR3JwY01lZGlhU2VydmljZS5Nb2RpZnlSZXBs",
            "eSIAElgKFGdldEludGVydmlld0luZm9CeUlkEhsuR3JwY01lZGlhU2Vydmlj",
            "ZS5JZFJlcXVlc3QaIS5HcnBjTWVkaWFTZXJ2aWNlLkludGVydmlld1N0cnVj",
            "dCIAEmAKEGdldEludGVydmlld0xpc3QSKS5HcnBjTWVkaWFTZXJ2aWNlLlBh",
            "Z2luYXRpb25SZXF1ZXN0U2VhcmNoGh8uR3JwY01lZGlhU2VydmljZS5JbnRl",
            "cnZpZXdMaXN0IgASXwoUY3JlYXRlSGlnaGxpZ2h0c0luZm8SJi5HcnBjTWVk",
            "aWFTZXJ2aWNlLkhpZ2hsaWdodHNJbmZvU3RydWN0Gh0uR3JwY01lZGlhU2Vy",
            "dmljZS5Nb2RpZnlSZXBseSIAEl8KFHVwZGF0ZUhpZ2hsaWdodHNJbmZvEiYu",
            "R3JwY01lZGlhU2VydmljZS5IaWdobGlnaHRzSW5mb1N0cnVjdBodLkdycGNN",
            "ZWRpYVNlcnZpY2UuTW9kaWZ5UmVwbHkiABJYChhkZWxldGVIaWdobGlnaHRz",
            "SW5mb0J5SWQSGy5HcnBjTWVkaWFTZXJ2aWNlLklkUmVxdWVzdBodLkdycGNN",
            "ZWRpYVNlcnZpY2UuTW9kaWZ5UmVwbHkiABJeChVnZXRIaWdobGlnaHRzSW5m",
            "b0J5SWQSGy5HcnBjTWVkaWFTZXJ2aWNlLklkUmVxdWVzdBomLkdycGNNZWRp",
            "YVNlcnZpY2UuSGlnaGxpZ2h0c0luZm9TdHJ1Y3QiABJqChVnZXRIaWdobGln",
            "aHRzSW5mb0xpc3QSKS5HcnBjTWVkaWFTZXJ2aWNlLlBhZ2luYXRpb25SZXF1",
            "ZXN0U2VhcmNoGiQuR3JwY01lZGlhU2VydmljZS5IaWdobGlnaHRzSW5mb0xp",
            "c3QiABJRCg9jcmVhdGVIb3RlbEluZm8SHS5HcnBjTWVkaWFTZXJ2aWNlLkhv",
            "dGVsU3RydWN0Gh0uR3JwY01lZGlhU2VydmljZS5Nb2RpZnlSZXBseSIAElEK",
            "D3VwZGF0ZUhvdGVsSW5mbxIdLkdycGNNZWRpYVNlcnZpY2UuSG90ZWxTdHJ1",
            "Y3QaHS5HcnBjTWVkaWFTZXJ2aWNlLk1vZGlmeVJlcGx5IgASWAoTZGVsZXRl",
            "SG90ZWxJbmZvQnlJZBIgLkdycGNNZWRpYVNlcnZpY2UuSG90ZWxJZFJlcXVl",
            "c3QaHS5HcnBjTWVkaWFTZXJ2aWNlLk1vZGlmeVJlcGx5IgASUQoMZ2V0SG90",
            "ZWxCeUlkEiAuR3JwY01lZGlhU2VydmljZS5Ib3RlbElkUmVxdWVzdBodLkdy",
            "cGNNZWRpYVNlcnZpY2UuSG90ZWxTdHJ1Y3QiABJGCgxnZXRIb3RlbExpc3QS",
            "Fy5HcnBjTWVkaWFTZXJ2aWNlLkVtcHR5GhsuR3JwY01lZGlhU2VydmljZS5I",
            "b3RlbExpc3QiABJhChdjcmVhdGVIb3RlbFJvb21UeXBlSW5mbxIlLkdycGNN",
            "ZWRpYVNlcnZpY2UuSG90ZWxSb29tVHlwZVN0cnVjdBodLkdycGNNZWRpYVNl",
            "cnZpY2UuTW9kaWZ5UmVwbHkiABJhChd1cGRhdGVIb3RlbFJvb21UeXBlSW5m",
            "bxIlLkdycGNNZWRpYVNlcnZpY2UuSG90ZWxSb29tVHlwZVN0cnVjdBodLkdy",
            "cGNNZWRpYVNlcnZpY2UuTW9kaWZ5UmVwbHkiABJkChdkZWxldGVIb3RlbFJv",
            "b21UeXBlQnlJZBIoLkdycGNNZWRpYVNlcnZpY2UuSG90ZWxSb29tVHlwZUlk",
            "UmVxdWVzdBodLkdycGNNZWRpYVNlcnZpY2UuTW9kaWZ5UmVwbHkiABJtChhn",
            "ZXRIb3RlbFJvb21UeXBlSW5mb0J5SWQSKC5HcnBjTWVkaWFTZXJ2aWNlLkhv",
            "dGVsUm9vbVR5cGVJZFJlcXVlc3QaJS5HcnBjTWVkaWFTZXJ2aWNlLkhvdGVs",
            "Um9vbVR5cGVTdHJ1Y3QiABJoCh1nZXRIb3RlbFJvb21UeXBlTGlzdEJ5SG90",
            "ZWxJZBIgLkdycGNNZWRpYVNlcnZpY2UuSG90ZWxJZFJlcXVlc3QaIy5HcnBj",
            "TWVkaWFTZXJ2aWNlLkhvdGVsUm9vbVR5cGVMaXN0IgASZQoZY3JlYXRlSG90",
            "ZWxCb29rUmVjb3JkSW5mbxInLkdycGNNZWRpYVNlcnZpY2UuSG90ZWxCb29r",
            "UmVjb3JkU3RydWN0Gh0uR3JwY01lZGlhU2VydmljZS5Nb2RpZnlSZXBseSIA",
            "EmUKGXVwZGF0ZUhvdGVsQm9va1JlY29yZEluZm8SJy5HcnBjTWVkaWFTZXJ2",
            "aWNlLkhvdGVsQm9va1JlY29yZFN0cnVjdBodLkdycGNNZWRpYVNlcnZpY2Uu",
            "TW9kaWZ5UmVwbHkiABJdCh1kZWxldGVIb3RlbEJvb2tSZWNvcmRJbmZvQnlJ",
            "ZBIbLkdycGNNZWRpYVNlcnZpY2UuSWRSZXF1ZXN0Gh0uR3JwY01lZGlhU2Vy",
            "dmljZS5Nb2RpZnlSZXBseSIAEmoKHGdldEhvdGVsQm9va1JlY29yZEJ5TWVt",
            "YmVySWQSIS5HcnBjTWVkaWFTZXJ2aWNlLk1lbWJlcklkUmVxdWVzdBolLkdy",
            "cGNNZWRpYVNlcnZpY2UuSG90ZWxCb29rUmVjb3JkTGlzdCIAElkKGWNhbmNl",
            "bEhvdGVsQm9va1JlY29yZEJ5SWQSGy5HcnBjTWVkaWFTZXJ2aWNlLklkUmVx",
            "dWVzdBodLkdycGNNZWRpYVNlcnZpY2UuTW9kaWZ5UmVwbHkiABJgChZnZXRI",
            "b3RlbEJvb2tSZWNvcmRCeUlkEhsuR3JwY01lZGlhU2VydmljZS5JZFJlcXVl",
            "c3QaJy5HcnBjTWVkaWFTZXJ2aWNlLkhvdGVsQm9va1JlY29yZFN0cnVjdCIA",
            "EmwKFmdldEhvdGVsQm9va1JlY29yZExpc3QSKS5HcnBjTWVkaWFTZXJ2aWNl",
            "LlBhZ2luYXRpb25SZXF1ZXN0U2VhcmNoGiUuR3JwY01lZGlhU2VydmljZS5I",
            "b3RlbEJvb2tSZWNvcmRMaXN0IgASYwoRZ2V0SG90ZWxPcmRlckxpc3QSKS5H",
            "cnBjTWVkaWFTZXJ2aWNlLlBhZ2luYXRpb25SZXF1ZXN0U2VhcmNoGiEuR3Jw",
            "Y01lZGlhU2VydmljZS5PcmRlclBlcnNvbkxpc3QiAGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.FormPublicStruct), global::GrpcMediaService.FormPublicStruct.Parser, new[]{ "Id", "CompanyId", "CompanyNameCn", "CompanyNameEn", "Address", "AddressEn", "Telephone", "Fax", "Email", "Website", "PavilionNumber", "BoothNumber", "Option", "Description", "DescriptionEn", "SnecLogoWebsite", "Logo", "UpdatedAt", "CreatedAt", "OwnerId", "OwnerName", "IsPay", "IsHaveLogo", "ContractNumber", "ExbContractId", "ProductType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.ExbContractIdRequest), global::GrpcMediaService.ExbContractIdRequest.Parser, new[]{ "ExbContractId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.FormPublicList), global::GrpcMediaService.FormPublicList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.PaginationRequestSearch), global::GrpcMediaService.PaginationRequestSearch.Parser, new[]{ "Id", "Offset", "Limit", "Search" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.ExpressStruct), global::GrpcMediaService.ExpressStruct.Parser, new[]{ "Id", "CompanyId", "ExpressNum", "SentDate", "SenderId", "Sender", "RecipientUnit", "Address", "Recipient", "Tel", "ExpressContent", "Price", "ExpressCompany", "IsExamine", "IsSend", "CreatedAt", "UpdatedAt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.ExpressList), global::GrpcMediaService.ExpressList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.CatalogueBooksStruct), global::GrpcMediaService.CatalogueBooksStruct.Parser, new[]{ "Id", "Name", "Country", "Address", "Tel", "Email", "Count", "Des", "Type", "CreatedAt", "UpdatedAt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.CatalogueBooksList), global::GrpcMediaService.CatalogueBooksList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.InterviewStruct), global::GrpcMediaService.InterviewStruct.Parser, new[]{ "Id", "Name", "NameEn", "JobTitle", "JobTitleEn", "Photo", "Introduction", "InterviewTime", "MediaName", "MemberId", "CompanyName", "CompanyNameEn", "OwnerId", "OwnerName", "CreatedAt", "UpdatedAt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.InterviewList), global::GrpcMediaService.InterviewList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.HighlightsInfoStruct), global::GrpcMediaService.HighlightsInfoStruct.Parser, new[]{ "Id", "LDnameCn", "LDnameEn", "LDdescribeCn", "LDdescribeEn", "LDimage", "LDlogo", "YJname", "YJnameEn", "YJPosition", "YJPositionEn", "YJIntroduction", "YJPhoto", "ShowWay", "Contract", "ContractCompany", "ContractCompanyEn", "Tel", "Mobile", "Email", "MemberId", "OwnerId", "OwnerName", "CreatedAt", "UpdatedAt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.HighlightsInfoList), global::GrpcMediaService.HighlightsInfoList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.HotelIdRequest), global::GrpcMediaService.HotelIdRequest.Parser, new[]{ "HotelId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.HotelStruct), global::GrpcMediaService.HotelStruct.Parser, new[]{ "HotelId", "HotelCode", "HotelName", "HotelNameEn", "HotelAddress", "HotelAddressEn", "Country", "KeyWord", "HotelEmail", "HotelTel", "HotelLevel", "HotelIntroduction", "HotelIntroductionEn", "BankInfo", "BankInfoEn", "Remark", "RemarkEn", "Sort", "CreatedAt", "UpdatedAt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.HotelVM), global::GrpcMediaService.HotelVM.Parser, new[]{ "HotelId", "HotelCode", "HotelName", "HotelNameEn", "HotelAddress", "HotelAddressEn", "Country", "KeyWord", "HotelEmail", "HotelTel", "HotelLevel", "HotelIntroduction", "HotelIntroductionEn", "BankInfo", "BankInfoEn", "Remark", "RemarkEn", "Sort", "CreatedAt", "UpdatedAt", "HotelRoomTypes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.HotelList), global::GrpcMediaService.HotelList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.HotelRoomTypeIdRequest), global::GrpcMediaService.HotelRoomTypeIdRequest.Parser, new[]{ "HotelRoomTypeId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.HotelRoomTypeStruct), global::GrpcMediaService.HotelRoomTypeStruct.Parser, new[]{ "HotelRoomTypeId", "HotelId", "TypeName", "TypeNameEn", "BedType", "BedTypeEn", "MaxCount", "Price", "Tax", "IsBreakfast", "IsNet", "IsUsed", "CreatedAt", "UpdatedAt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.HotelRoomTypeList), global::GrpcMediaService.HotelRoomTypeList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.MemberIdRequest), global::GrpcMediaService.MemberIdRequest.Parser, new[]{ "MemberId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.HotelBookRecordStruct), global::GrpcMediaService.HotelBookRecordStruct.Parser, new[]{ "Id", "MemberId", "MemberCompany", "MemberCompanyEn", "HotelId", "HotelRoomTypeId", "BookTime", "CheckInTime", "CheckOutTime", "IsCanceled", "IsChecked", "PriceCount", "Remark", "Days", "ArriveFlight", "LeaveFlight", "IsSmoke", "LinkManFirstName", "LinkManLastName", "LinkManTel", "LinkManEmail", "LinkManTitle", "LinkManCountry", "LinkManCity", "LinkManFax", "LinkManIdCardType", "LinkManIdCardNumber", "LinkManCompany", "LinkManMobile", "LinkManBirth", "OtherName", "OtherTitle", "OtherEmail", "OtherMobile", "OtherCompany", "CardPerson", "CardType", "CardNumber", "CardDate", "Payer", "PayType", "LinkManEmail2", "CreatedAt", "UpdatedAt", "IsWebsite", "OrderNumber", "MemberEmail", "MemberName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.HotelBookRecordStructVM), global::GrpcMediaService.HotelBookRecordStructVM.Parser, new[]{ "Id", "MemberId", "MemberCompany", "MemberCompanyEn", "HotelId", "HotelRoomTypeId", "BookTime", "CheckInTime", "CheckOutTime", "IsCanceled", "IsChecked", "PriceCount", "Remark", "Days", "ArriveFlight", "LeaveFlight", "IsSmoke", "LinkManFirstName", "LinkManLastName", "LinkManTel", "LinkManEmail", "LinkManTitle", "LinkManCountry", "LinkManCity", "LinkManFax", "LinkManIdCardType", "LinkManIdCardNumber", "LinkManCompany", "LinkManMobile", "LinkManBirth", "OtherName", "OtherTitle", "OtherEmail", "OtherMobile", "OtherCompany", "CardPerson", "CardType", "CardNumber", "CardDate", "Payer", "PayType", "LinkManEmail2", "CreatedAt", "UpdatedAt", "IsWebsite", "HotelItem", "HotelRoomTypeItem", "OrderNumber", "MemberEmail", "MemberName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.HotelBookRecordList), global::GrpcMediaService.HotelBookRecordList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.OrderPersonStruct), global::GrpcMediaService.OrderPersonStruct.Parser, new[]{ "MemberId", "MemberEmail", "MemberCompany", "MemberName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.OrderPersonList), global::GrpcMediaService.OrderPersonList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.Empty), global::GrpcMediaService.Empty.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.IdRequest), global::GrpcMediaService.IdRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.ModifyReply), global::GrpcMediaService.ModifyReply.Parser, new[]{ "Success", "ModifiedCount", "Msg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMediaService.SearchStruct), global::GrpcMediaService.SearchStruct.Parser, new[]{ "CompanyName", "ContractNumber", "PavilionNumber", "BoothNumber", "OwnerId", "IsPay", "IsHaveLogo", "BeginDate", "EndDate", "ExpressNum", "Sender", "Recipient", "RecipientUnit", "HotelId", "HotelRoomTypeId", "IsCanceled", "IsChecked", "IsWebsite", "Type", "Email", "Name" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FormPublicStruct : pb::IMessage<FormPublicStruct> {
    private static readonly pb::MessageParser<FormPublicStruct> _parser = new pb::MessageParser<FormPublicStruct>(() => new FormPublicStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FormPublicStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormPublicStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormPublicStruct(FormPublicStruct other) : this() {
      id_ = other.id_;
      companyId_ = other.companyId_;
      companyNameCn_ = other.companyNameCn_;
      companyNameEn_ = other.companyNameEn_;
      address_ = other.address_;
      addressEn_ = other.addressEn_;
      telephone_ = other.telephone_;
      fax_ = other.fax_;
      email_ = other.email_;
      website_ = other.website_;
      pavilionNumber_ = other.pavilionNumber_;
      boothNumber_ = other.boothNumber_;
      option_ = other.option_;
      description_ = other.description_;
      descriptionEn_ = other.descriptionEn_;
      snecLogoWebsite_ = other.snecLogoWebsite_;
      logo_ = other.logo_;
      updatedAt_ = other.updatedAt_;
      createdAt_ = other.createdAt_;
      ownerId_ = other.ownerId_;
      ownerName_ = other.ownerName_;
      isPay_ = other.isPay_;
      isHaveLogo_ = other.isHaveLogo_;
      contractNumber_ = other.contractNumber_;
      exbContractId_ = other.exbContractId_;
      productType_ = other.productType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormPublicStruct Clone() {
      return new FormPublicStruct(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyId" field.</summary>
    public const int CompanyIdFieldNumber = 2;
    private string companyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyId {
      get { return companyId_; }
      set {
        companyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyNameCn" field.</summary>
    public const int CompanyNameCnFieldNumber = 3;
    private string companyNameCn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyNameCn {
      get { return companyNameCn_; }
      set {
        companyNameCn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyNameEn" field.</summary>
    public const int CompanyNameEnFieldNumber = 4;
    private string companyNameEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyNameEn {
      get { return companyNameEn_; }
      set {
        companyNameEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 5;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "addressEn" field.</summary>
    public const int AddressEnFieldNumber = 6;
    private string addressEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AddressEn {
      get { return addressEn_; }
      set {
        addressEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "telephone" field.</summary>
    public const int TelephoneFieldNumber = 7;
    private string telephone_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Telephone {
      get { return telephone_; }
      set {
        telephone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fax" field.</summary>
    public const int FaxFieldNumber = 8;
    private string fax_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fax {
      get { return fax_; }
      set {
        fax_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 9;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "website" field.</summary>
    public const int WebsiteFieldNumber = 10;
    private string website_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Website {
      get { return website_; }
      set {
        website_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pavilionNumber" field.</summary>
    public const int PavilionNumberFieldNumber = 11;
    private string pavilionNumber_ = "";
    /// <summary>
    ///展馆号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PavilionNumber {
      get { return pavilionNumber_; }
      set {
        pavilionNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "boothNumber" field.</summary>
    public const int BoothNumberFieldNumber = 12;
    private string boothNumber_ = "";
    /// <summary>
    ///展位号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BoothNumber {
      get { return boothNumber_; }
      set {
        boothNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "option" field.</summary>
    public const int OptionFieldNumber = 13;
    private string option_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Option {
      get { return option_; }
      set {
        option_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 14;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "descriptionEn" field.</summary>
    public const int DescriptionEnFieldNumber = 15;
    private string descriptionEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DescriptionEn {
      get { return descriptionEn_; }
      set {
        descriptionEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "snecLogoWebsite" field.</summary>
    public const int SnecLogoWebsiteFieldNumber = 16;
    private string snecLogoWebsite_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SnecLogoWebsite {
      get { return snecLogoWebsite_; }
      set {
        snecLogoWebsite_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "logo" field.</summary>
    public const int LogoFieldNumber = 17;
    private string logo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Logo {
      get { return logo_; }
      set {
        logo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "updated_at" field.</summary>
    public const int UpdatedAtFieldNumber = 18;
    private string updatedAt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpdatedAt {
      get { return updatedAt_; }
      set {
        updatedAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 19;
    private string createdAt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ownerId" field.</summary>
    public const int OwnerIdFieldNumber = 20;
    private string ownerId_ = "";
    /// <summary>
    ///客户经理Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerId {
      get { return ownerId_; }
      set {
        ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ownerName" field.</summary>
    public const int OwnerNameFieldNumber = 21;
    private string ownerName_ = "";
    /// <summary>
    ///客户经理名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerName {
      get { return ownerName_; }
      set {
        ownerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isPay" field.</summary>
    public const int IsPayFieldNumber = 22;
    private bool isPay_;
    /// <summary>
    ///是否付款
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPay {
      get { return isPay_; }
      set {
        isPay_ = value;
      }
    }

    /// <summary>Field number for the "isHaveLogo" field.</summary>
    public const int IsHaveLogoFieldNumber = 23;
    private bool isHaveLogo_;
    /// <summary>
    ///是否有logo
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsHaveLogo {
      get { return isHaveLogo_; }
      set {
        isHaveLogo_ = value;
      }
    }

    /// <summary>Field number for the "contractNumber" field.</summary>
    public const int ContractNumberFieldNumber = 24;
    private string contractNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractNumber {
      get { return contractNumber_; }
      set {
        contractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exbContractId" field.</summary>
    public const int ExbContractIdFieldNumber = 25;
    private string exbContractId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExbContractId {
      get { return exbContractId_; }
      set {
        exbContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "productType" field.</summary>
    public const int ProductTypeFieldNumber = 26;
    private string productType_ = "";
    /// <summary>
    ///存储勾选的展品属类信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductType {
      get { return productType_; }
      set {
        productType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FormPublicStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FormPublicStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (CompanyId != other.CompanyId) return false;
      if (CompanyNameCn != other.CompanyNameCn) return false;
      if (CompanyNameEn != other.CompanyNameEn) return false;
      if (Address != other.Address) return false;
      if (AddressEn != other.AddressEn) return false;
      if (Telephone != other.Telephone) return false;
      if (Fax != other.Fax) return false;
      if (Email != other.Email) return false;
      if (Website != other.Website) return false;
      if (PavilionNumber != other.PavilionNumber) return false;
      if (BoothNumber != other.BoothNumber) return false;
      if (Option != other.Option) return false;
      if (Description != other.Description) return false;
      if (DescriptionEn != other.DescriptionEn) return false;
      if (SnecLogoWebsite != other.SnecLogoWebsite) return false;
      if (Logo != other.Logo) return false;
      if (UpdatedAt != other.UpdatedAt) return false;
      if (CreatedAt != other.CreatedAt) return false;
      if (OwnerId != other.OwnerId) return false;
      if (OwnerName != other.OwnerName) return false;
      if (IsPay != other.IsPay) return false;
      if (IsHaveLogo != other.IsHaveLogo) return false;
      if (ContractNumber != other.ContractNumber) return false;
      if (ExbContractId != other.ExbContractId) return false;
      if (ProductType != other.ProductType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (CompanyId.Length != 0) hash ^= CompanyId.GetHashCode();
      if (CompanyNameCn.Length != 0) hash ^= CompanyNameCn.GetHashCode();
      if (CompanyNameEn.Length != 0) hash ^= CompanyNameEn.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (AddressEn.Length != 0) hash ^= AddressEn.GetHashCode();
      if (Telephone.Length != 0) hash ^= Telephone.GetHashCode();
      if (Fax.Length != 0) hash ^= Fax.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Website.Length != 0) hash ^= Website.GetHashCode();
      if (PavilionNumber.Length != 0) hash ^= PavilionNumber.GetHashCode();
      if (BoothNumber.Length != 0) hash ^= BoothNumber.GetHashCode();
      if (Option.Length != 0) hash ^= Option.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (DescriptionEn.Length != 0) hash ^= DescriptionEn.GetHashCode();
      if (SnecLogoWebsite.Length != 0) hash ^= SnecLogoWebsite.GetHashCode();
      if (Logo.Length != 0) hash ^= Logo.GetHashCode();
      if (UpdatedAt.Length != 0) hash ^= UpdatedAt.GetHashCode();
      if (CreatedAt.Length != 0) hash ^= CreatedAt.GetHashCode();
      if (OwnerId.Length != 0) hash ^= OwnerId.GetHashCode();
      if (OwnerName.Length != 0) hash ^= OwnerName.GetHashCode();
      if (IsPay != false) hash ^= IsPay.GetHashCode();
      if (IsHaveLogo != false) hash ^= IsHaveLogo.GetHashCode();
      if (ContractNumber.Length != 0) hash ^= ContractNumber.GetHashCode();
      if (ExbContractId.Length != 0) hash ^= ExbContractId.GetHashCode();
      if (ProductType.Length != 0) hash ^= ProductType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (CompanyId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyId);
      }
      if (CompanyNameCn.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CompanyNameCn);
      }
      if (CompanyNameEn.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CompanyNameEn);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Address);
      }
      if (AddressEn.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AddressEn);
      }
      if (Telephone.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Telephone);
      }
      if (Fax.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Fax);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Email);
      }
      if (Website.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Website);
      }
      if (PavilionNumber.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(PavilionNumber);
      }
      if (BoothNumber.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(BoothNumber);
      }
      if (Option.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Option);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Description);
      }
      if (DescriptionEn.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(DescriptionEn);
      }
      if (SnecLogoWebsite.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(SnecLogoWebsite);
      }
      if (Logo.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Logo);
      }
      if (UpdatedAt.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(UpdatedAt);
      }
      if (CreatedAt.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(CreatedAt);
      }
      if (OwnerId.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(OwnerId);
      }
      if (OwnerName.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(OwnerName);
      }
      if (IsPay != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(IsPay);
      }
      if (IsHaveLogo != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(IsHaveLogo);
      }
      if (ContractNumber.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(ContractNumber);
      }
      if (ExbContractId.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(ExbContractId);
      }
      if (ProductType.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(ProductType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (CompanyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyId);
      }
      if (CompanyNameCn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyNameCn);
      }
      if (CompanyNameEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyNameEn);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (AddressEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AddressEn);
      }
      if (Telephone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Telephone);
      }
      if (Fax.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fax);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Website.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Website);
      }
      if (PavilionNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PavilionNumber);
      }
      if (BoothNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BoothNumber);
      }
      if (Option.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Option);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (DescriptionEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptionEn);
      }
      if (SnecLogoWebsite.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SnecLogoWebsite);
      }
      if (Logo.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Logo);
      }
      if (UpdatedAt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UpdatedAt);
      }
      if (CreatedAt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedAt);
      }
      if (OwnerId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
      }
      if (OwnerName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OwnerName);
      }
      if (IsPay != false) {
        size += 2 + 1;
      }
      if (IsHaveLogo != false) {
        size += 2 + 1;
      }
      if (ContractNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContractNumber);
      }
      if (ExbContractId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ExbContractId);
      }
      if (ProductType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ProductType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FormPublicStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.CompanyId.Length != 0) {
        CompanyId = other.CompanyId;
      }
      if (other.CompanyNameCn.Length != 0) {
        CompanyNameCn = other.CompanyNameCn;
      }
      if (other.CompanyNameEn.Length != 0) {
        CompanyNameEn = other.CompanyNameEn;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.AddressEn.Length != 0) {
        AddressEn = other.AddressEn;
      }
      if (other.Telephone.Length != 0) {
        Telephone = other.Telephone;
      }
      if (other.Fax.Length != 0) {
        Fax = other.Fax;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Website.Length != 0) {
        Website = other.Website;
      }
      if (other.PavilionNumber.Length != 0) {
        PavilionNumber = other.PavilionNumber;
      }
      if (other.BoothNumber.Length != 0) {
        BoothNumber = other.BoothNumber;
      }
      if (other.Option.Length != 0) {
        Option = other.Option;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.DescriptionEn.Length != 0) {
        DescriptionEn = other.DescriptionEn;
      }
      if (other.SnecLogoWebsite.Length != 0) {
        SnecLogoWebsite = other.SnecLogoWebsite;
      }
      if (other.Logo.Length != 0) {
        Logo = other.Logo;
      }
      if (other.UpdatedAt.Length != 0) {
        UpdatedAt = other.UpdatedAt;
      }
      if (other.CreatedAt.Length != 0) {
        CreatedAt = other.CreatedAt;
      }
      if (other.OwnerId.Length != 0) {
        OwnerId = other.OwnerId;
      }
      if (other.OwnerName.Length != 0) {
        OwnerName = other.OwnerName;
      }
      if (other.IsPay != false) {
        IsPay = other.IsPay;
      }
      if (other.IsHaveLogo != false) {
        IsHaveLogo = other.IsHaveLogo;
      }
      if (other.ContractNumber.Length != 0) {
        ContractNumber = other.ContractNumber;
      }
      if (other.ExbContractId.Length != 0) {
        ExbContractId = other.ExbContractId;
      }
      if (other.ProductType.Length != 0) {
        ProductType = other.ProductType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            CompanyId = input.ReadString();
            break;
          }
          case 26: {
            CompanyNameCn = input.ReadString();
            break;
          }
          case 34: {
            CompanyNameEn = input.ReadString();
            break;
          }
          case 42: {
            Address = input.ReadString();
            break;
          }
          case 50: {
            AddressEn = input.ReadString();
            break;
          }
          case 58: {
            Telephone = input.ReadString();
            break;
          }
          case 66: {
            Fax = input.ReadString();
            break;
          }
          case 74: {
            Email = input.ReadString();
            break;
          }
          case 82: {
            Website = input.ReadString();
            break;
          }
          case 90: {
            PavilionNumber = input.ReadString();
            break;
          }
          case 98: {
            BoothNumber = input.ReadString();
            break;
          }
          case 106: {
            Option = input.ReadString();
            break;
          }
          case 114: {
            Description = input.ReadString();
            break;
          }
          case 122: {
            DescriptionEn = input.ReadString();
            break;
          }
          case 130: {
            SnecLogoWebsite = input.ReadString();
            break;
          }
          case 138: {
            Logo = input.ReadString();
            break;
          }
          case 146: {
            UpdatedAt = input.ReadString();
            break;
          }
          case 154: {
            CreatedAt = input.ReadString();
            break;
          }
          case 162: {
            OwnerId = input.ReadString();
            break;
          }
          case 170: {
            OwnerName = input.ReadString();
            break;
          }
          case 176: {
            IsPay = input.ReadBool();
            break;
          }
          case 184: {
            IsHaveLogo = input.ReadBool();
            break;
          }
          case 194: {
            ContractNumber = input.ReadString();
            break;
          }
          case 202: {
            ExbContractId = input.ReadString();
            break;
          }
          case 210: {
            ProductType = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExbContractIdRequest : pb::IMessage<ExbContractIdRequest> {
    private static readonly pb::MessageParser<ExbContractIdRequest> _parser = new pb::MessageParser<ExbContractIdRequest>(() => new ExbContractIdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExbContractIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExbContractIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExbContractIdRequest(ExbContractIdRequest other) : this() {
      exbContractId_ = other.exbContractId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExbContractIdRequest Clone() {
      return new ExbContractIdRequest(this);
    }

    /// <summary>Field number for the "exbContractId" field.</summary>
    public const int ExbContractIdFieldNumber = 1;
    private string exbContractId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExbContractId {
      get { return exbContractId_; }
      set {
        exbContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExbContractIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExbContractIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExbContractId != other.ExbContractId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ExbContractId.Length != 0) hash ^= ExbContractId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ExbContractId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ExbContractId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ExbContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExbContractId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExbContractIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.ExbContractId.Length != 0) {
        ExbContractId = other.ExbContractId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ExbContractId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FormPublicList : pb::IMessage<FormPublicList> {
    private static readonly pb::MessageParser<FormPublicList> _parser = new pb::MessageParser<FormPublicList>(() => new FormPublicList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FormPublicList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormPublicList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormPublicList(FormPublicList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormPublicList Clone() {
      return new FormPublicList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcMediaService.FormPublicStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcMediaService.FormPublicStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcMediaService.FormPublicStruct> listdata_ = new pbc::RepeatedField<global::GrpcMediaService.FormPublicStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcMediaService.FormPublicStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FormPublicList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FormPublicList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FormPublicList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PaginationRequestSearch : pb::IMessage<PaginationRequestSearch> {
    private static readonly pb::MessageParser<PaginationRequestSearch> _parser = new pb::MessageParser<PaginationRequestSearch>(() => new PaginationRequestSearch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PaginationRequestSearch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginationRequestSearch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginationRequestSearch(PaginationRequestSearch other) : this() {
      id_ = other.id_;
      offset_ = other.offset_;
      limit_ = other.limit_;
      Search = other.search_ != null ? other.Search.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginationRequestSearch Clone() {
      return new PaginationRequestSearch(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private int limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "search" field.</summary>
    public const int SearchFieldNumber = 4;
    private global::GrpcMediaService.SearchStruct search_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcMediaService.SearchStruct Search {
      get { return search_; }
      set {
        search_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PaginationRequestSearch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PaginationRequestSearch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      if (!object.Equals(Search, other.Search)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (search_ != null) hash ^= Search.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Offset != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Offset);
      }
      if (Limit != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Limit);
      }
      if (search_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Search);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (search_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Search);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PaginationRequestSearch other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      if (other.search_ != null) {
        if (search_ == null) {
          search_ = new global::GrpcMediaService.SearchStruct();
        }
        Search.MergeFrom(other.Search);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Offset = input.ReadInt32();
            break;
          }
          case 24: {
            Limit = input.ReadInt32();
            break;
          }
          case 34: {
            if (search_ == null) {
              search_ = new global::GrpcMediaService.SearchStruct();
            }
            input.ReadMessage(search_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExpressStruct : pb::IMessage<ExpressStruct> {
    private static readonly pb::MessageParser<ExpressStruct> _parser = new pb::MessageParser<ExpressStruct>(() => new ExpressStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExpressStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpressStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpressStruct(ExpressStruct other) : this() {
      id_ = other.id_;
      companyId_ = other.companyId_;
      expressNum_ = other.expressNum_;
      sentDate_ = other.sentDate_;
      senderId_ = other.senderId_;
      sender_ = other.sender_;
      recipientUnit_ = other.recipientUnit_;
      address_ = other.address_;
      recipient_ = other.recipient_;
      tel_ = other.tel_;
      expressContent_ = other.expressContent_;
      price_ = other.price_;
      expressCompany_ = other.expressCompany_;
      isExamine_ = other.isExamine_;
      isSend_ = other.isSend_;
      createdAt_ = other.createdAt_;
      updatedAt_ = other.updatedAt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpressStruct Clone() {
      return new ExpressStruct(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyId" field.</summary>
    public const int CompanyIdFieldNumber = 2;
    private string companyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyId {
      get { return companyId_; }
      set {
        companyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expressNum" field.</summary>
    public const int ExpressNumFieldNumber = 3;
    private string expressNum_ = "";
    /// <summary>
    ///快递单号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExpressNum {
      get { return expressNum_; }
      set {
        expressNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sentDate" field.</summary>
    public const int SentDateFieldNumber = 4;
    private string sentDate_ = "";
    /// <summary>
    ///寄件日期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SentDate {
      get { return sentDate_; }
      set {
        sentDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "senderId" field.</summary>
    public const int SenderIdFieldNumber = 5;
    private string senderId_ = "";
    /// <summary>
    ///寄件人Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SenderId {
      get { return senderId_; }
      set {
        senderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 6;
    private string sender_ = "";
    /// <summary>
    ///寄件人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sender {
      get { return sender_; }
      set {
        sender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "recipientUnit" field.</summary>
    public const int RecipientUnitFieldNumber = 7;
    private string recipientUnit_ = "";
    /// <summary>
    ///收件单位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RecipientUnit {
      get { return recipientUnit_; }
      set {
        recipientUnit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 8;
    private string address_ = "";
    /// <summary>
    ///收件地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "recipient" field.</summary>
    public const int RecipientFieldNumber = 9;
    private string recipient_ = "";
    /// <summary>
    ///收件人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Recipient {
      get { return recipient_; }
      set {
        recipient_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tel" field.</summary>
    public const int TelFieldNumber = 10;
    private string tel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tel {
      get { return tel_; }
      set {
        tel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expressContent" field.</summary>
    public const int ExpressContentFieldNumber = 11;
    private string expressContent_ = "";
    /// <summary>
    ///快递内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExpressContent {
      get { return expressContent_; }
      set {
        expressContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 12;
    private string price_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Price {
      get { return price_; }
      set {
        price_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expressCompany" field.</summary>
    public const int ExpressCompanyFieldNumber = 13;
    private string expressCompany_ = "";
    /// <summary>
    ///快递公司
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExpressCompany {
      get { return expressCompany_; }
      set {
        expressCompany_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isExamine" field.</summary>
    public const int IsExamineFieldNumber = 14;
    private bool isExamine_;
    /// <summary>
    ///是否审核
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsExamine {
      get { return isExamine_; }
      set {
        isExamine_ = value;
      }
    }

    /// <summary>Field number for the "isSend" field.</summary>
    public const int IsSendFieldNumber = 15;
    private bool isSend_;
    /// <summary>
    ///是否发送
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSend {
      get { return isSend_; }
      set {
        isSend_ = value;
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 16;
    private string createdAt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "updated_at" field.</summary>
    public const int UpdatedAtFieldNumber = 17;
    private string updatedAt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpdatedAt {
      get { return updatedAt_; }
      set {
        updatedAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExpressStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExpressStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (CompanyId != other.CompanyId) return false;
      if (ExpressNum != other.ExpressNum) return false;
      if (SentDate != other.SentDate) return false;
      if (SenderId != other.SenderId) return false;
      if (Sender != other.Sender) return false;
      if (RecipientUnit != other.RecipientUnit) return false;
      if (Address != other.Address) return false;
      if (Recipient != other.Recipient) return false;
      if (Tel != other.Tel) return false;
      if (ExpressContent != other.ExpressContent) return false;
      if (Price != other.Price) return false;
      if (ExpressCompany != other.ExpressCompany) return false;
      if (IsExamine != other.IsExamine) return false;
      if (IsSend != other.IsSend) return false;
      if (CreatedAt != other.CreatedAt) return false;
      if (UpdatedAt != other.UpdatedAt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (CompanyId.Length != 0) hash ^= CompanyId.GetHashCode();
      if (ExpressNum.Length != 0) hash ^= ExpressNum.GetHashCode();
      if (SentDate.Length != 0) hash ^= SentDate.GetHashCode();
      if (SenderId.Length != 0) hash ^= SenderId.GetHashCode();
      if (Sender.Length != 0) hash ^= Sender.GetHashCode();
      if (RecipientUnit.Length != 0) hash ^= RecipientUnit.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (Recipient.Length != 0) hash ^= Recipient.GetHashCode();
      if (Tel.Length != 0) hash ^= Tel.GetHashCode();
      if (ExpressContent.Length != 0) hash ^= ExpressContent.GetHashCode();
      if (Price.Length != 0) hash ^= Price.GetHashCode();
      if (ExpressCompany.Length != 0) hash ^= ExpressCompany.GetHashCode();
      if (IsExamine != false) hash ^= IsExamine.GetHashCode();
      if (IsSend != false) hash ^= IsSend.GetHashCode();
      if (CreatedAt.Length != 0) hash ^= CreatedAt.GetHashCode();
      if (UpdatedAt.Length != 0) hash ^= UpdatedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (CompanyId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyId);
      }
      if (ExpressNum.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ExpressNum);
      }
      if (SentDate.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SentDate);
      }
      if (SenderId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SenderId);
      }
      if (Sender.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Sender);
      }
      if (RecipientUnit.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RecipientUnit);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Address);
      }
      if (Recipient.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Recipient);
      }
      if (Tel.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Tel);
      }
      if (ExpressContent.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ExpressContent);
      }
      if (Price.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Price);
      }
      if (ExpressCompany.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ExpressCompany);
      }
      if (IsExamine != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsExamine);
      }
      if (IsSend != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsSend);
      }
      if (CreatedAt.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(CreatedAt);
      }
      if (UpdatedAt.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(UpdatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (CompanyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyId);
      }
      if (ExpressNum.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpressNum);
      }
      if (SentDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SentDate);
      }
      if (SenderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SenderId);
      }
      if (Sender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sender);
      }
      if (RecipientUnit.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RecipientUnit);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (Recipient.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Recipient);
      }
      if (Tel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tel);
      }
      if (ExpressContent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpressContent);
      }
      if (Price.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Price);
      }
      if (ExpressCompany.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpressCompany);
      }
      if (IsExamine != false) {
        size += 1 + 1;
      }
      if (IsSend != false) {
        size += 1 + 1;
      }
      if (CreatedAt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedAt);
      }
      if (UpdatedAt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UpdatedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExpressStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.CompanyId.Length != 0) {
        CompanyId = other.CompanyId;
      }
      if (other.ExpressNum.Length != 0) {
        ExpressNum = other.ExpressNum;
      }
      if (other.SentDate.Length != 0) {
        SentDate = other.SentDate;
      }
      if (other.SenderId.Length != 0) {
        SenderId = other.SenderId;
      }
      if (other.Sender.Length != 0) {
        Sender = other.Sender;
      }
      if (other.RecipientUnit.Length != 0) {
        RecipientUnit = other.RecipientUnit;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.Recipient.Length != 0) {
        Recipient = other.Recipient;
      }
      if (other.Tel.Length != 0) {
        Tel = other.Tel;
      }
      if (other.ExpressContent.Length != 0) {
        ExpressContent = other.ExpressContent;
      }
      if (other.Price.Length != 0) {
        Price = other.Price;
      }
      if (other.ExpressCompany.Length != 0) {
        ExpressCompany = other.ExpressCompany;
      }
      if (other.IsExamine != false) {
        IsExamine = other.IsExamine;
      }
      if (other.IsSend != false) {
        IsSend = other.IsSend;
      }
      if (other.CreatedAt.Length != 0) {
        CreatedAt = other.CreatedAt;
      }
      if (other.UpdatedAt.Length != 0) {
        UpdatedAt = other.UpdatedAt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            CompanyId = input.ReadString();
            break;
          }
          case 26: {
            ExpressNum = input.ReadString();
            break;
          }
          case 34: {
            SentDate = input.ReadString();
            break;
          }
          case 42: {
            SenderId = input.ReadString();
            break;
          }
          case 50: {
            Sender = input.ReadString();
            break;
          }
          case 58: {
            RecipientUnit = input.ReadString();
            break;
          }
          case 66: {
            Address = input.ReadString();
            break;
          }
          case 74: {
            Recipient = input.ReadString();
            break;
          }
          case 82: {
            Tel = input.ReadString();
            break;
          }
          case 90: {
            ExpressContent = input.ReadString();
            break;
          }
          case 98: {
            Price = input.ReadString();
            break;
          }
          case 106: {
            ExpressCompany = input.ReadString();
            break;
          }
          case 112: {
            IsExamine = input.ReadBool();
            break;
          }
          case 120: {
            IsSend = input.ReadBool();
            break;
          }
          case 130: {
            CreatedAt = input.ReadString();
            break;
          }
          case 138: {
            UpdatedAt = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExpressList : pb::IMessage<ExpressList> {
    private static readonly pb::MessageParser<ExpressList> _parser = new pb::MessageParser<ExpressList>(() => new ExpressList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExpressList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpressList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpressList(ExpressList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpressList Clone() {
      return new ExpressList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcMediaService.ExpressStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcMediaService.ExpressStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcMediaService.ExpressStruct> listdata_ = new pbc::RepeatedField<global::GrpcMediaService.ExpressStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcMediaService.ExpressStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExpressList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExpressList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExpressList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CatalogueBooksStruct : pb::IMessage<CatalogueBooksStruct> {
    private static readonly pb::MessageParser<CatalogueBooksStruct> _parser = new pb::MessageParser<CatalogueBooksStruct>(() => new CatalogueBooksStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CatalogueBooksStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatalogueBooksStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatalogueBooksStruct(CatalogueBooksStruct other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      country_ = other.country_;
      address_ = other.address_;
      tel_ = other.tel_;
      email_ = other.email_;
      count_ = other.count_;
      des_ = other.des_;
      type_ = other.type_;
      createdAt_ = other.createdAt_;
      updatedAt_ = other.updatedAt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatalogueBooksStruct Clone() {
      return new CatalogueBooksStruct(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "country" field.</summary>
    public const int CountryFieldNumber = 3;
    private int country_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Country {
      get { return country_; }
      set {
        country_ = value;
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 4;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tel" field.</summary>
    public const int TelFieldNumber = 5;
    private string tel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tel {
      get { return tel_; }
      set {
        tel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 6;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 7;
    private int count_;
    /// <summary>
    ///订购会刊数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "des" field.</summary>
    public const int DesFieldNumber = 8;
    private string des_ = "";
    /// <summary>
    ///备注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Des {
      get { return des_; }
      set {
        des_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 9;
    private string type_ = "";
    /// <summary>
    ///订购类型(会刊或是摘要集)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 10;
    private string createdAt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "updated_at" field.</summary>
    public const int UpdatedAtFieldNumber = 11;
    private string updatedAt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpdatedAt {
      get { return updatedAt_; }
      set {
        updatedAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CatalogueBooksStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CatalogueBooksStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Country != other.Country) return false;
      if (Address != other.Address) return false;
      if (Tel != other.Tel) return false;
      if (Email != other.Email) return false;
      if (Count != other.Count) return false;
      if (Des != other.Des) return false;
      if (Type != other.Type) return false;
      if (CreatedAt != other.CreatedAt) return false;
      if (UpdatedAt != other.UpdatedAt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Country != 0) hash ^= Country.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (Tel.Length != 0) hash ^= Tel.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (Des.Length != 0) hash ^= Des.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (CreatedAt.Length != 0) hash ^= CreatedAt.GetHashCode();
      if (UpdatedAt.Length != 0) hash ^= UpdatedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Country != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Country);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Address);
      }
      if (Tel.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Tel);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Email);
      }
      if (Count != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Count);
      }
      if (Des.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Des);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Type);
      }
      if (CreatedAt.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(CreatedAt);
      }
      if (UpdatedAt.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(UpdatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Country != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Country);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (Tel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tel);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (Des.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Des);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (CreatedAt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedAt);
      }
      if (UpdatedAt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UpdatedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CatalogueBooksStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Country != 0) {
        Country = other.Country;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.Tel.Length != 0) {
        Tel = other.Tel;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.Des.Length != 0) {
        Des = other.Des;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.CreatedAt.Length != 0) {
        CreatedAt = other.CreatedAt;
      }
      if (other.UpdatedAt.Length != 0) {
        UpdatedAt = other.UpdatedAt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Country = input.ReadInt32();
            break;
          }
          case 34: {
            Address = input.ReadString();
            break;
          }
          case 42: {
            Tel = input.ReadString();
            break;
          }
          case 50: {
            Email = input.ReadString();
            break;
          }
          case 56: {
            Count = input.ReadInt32();
            break;
          }
          case 66: {
            Des = input.ReadString();
            break;
          }
          case 74: {
            Type = input.ReadString();
            break;
          }
          case 82: {
            CreatedAt = input.ReadString();
            break;
          }
          case 90: {
            UpdatedAt = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CatalogueBooksList : pb::IMessage<CatalogueBooksList> {
    private static readonly pb::MessageParser<CatalogueBooksList> _parser = new pb::MessageParser<CatalogueBooksList>(() => new CatalogueBooksList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CatalogueBooksList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatalogueBooksList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatalogueBooksList(CatalogueBooksList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatalogueBooksList Clone() {
      return new CatalogueBooksList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcMediaService.CatalogueBooksStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcMediaService.CatalogueBooksStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcMediaService.CatalogueBooksStruct> listdata_ = new pbc::RepeatedField<global::GrpcMediaService.CatalogueBooksStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcMediaService.CatalogueBooksStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CatalogueBooksList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CatalogueBooksList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CatalogueBooksList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InterviewStruct : pb::IMessage<InterviewStruct> {
    private static readonly pb::MessageParser<InterviewStruct> _parser = new pb::MessageParser<InterviewStruct>(() => new InterviewStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InterviewStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InterviewStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InterviewStruct(InterviewStruct other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      nameEn_ = other.nameEn_;
      jobTitle_ = other.jobTitle_;
      jobTitleEn_ = other.jobTitleEn_;
      photo_ = other.photo_;
      introduction_ = other.introduction_;
      interviewTime_ = other.interviewTime_;
      mediaName_ = other.mediaName_;
      memberId_ = other.memberId_;
      companyName_ = other.companyName_;
      companyNameEn_ = other.companyNameEn_;
      ownerId_ = other.ownerId_;
      ownerName_ = other.ownerName_;
      createdAt_ = other.createdAt_;
      updatedAt_ = other.updatedAt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InterviewStruct Clone() {
      return new InterviewStruct(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nameEn" field.</summary>
    public const int NameEnFieldNumber = 3;
    private string nameEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NameEn {
      get { return nameEn_; }
      set {
        nameEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jobTitle" field.</summary>
    public const int JobTitleFieldNumber = 4;
    private string jobTitle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JobTitle {
      get { return jobTitle_; }
      set {
        jobTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jobTitleEn" field.</summary>
    public const int JobTitleEnFieldNumber = 5;
    private string jobTitleEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JobTitleEn {
      get { return jobTitleEn_; }
      set {
        jobTitleEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "photo" field.</summary>
    public const int PhotoFieldNumber = 6;
    private string photo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Photo {
      get { return photo_; }
      set {
        photo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "introduction" field.</summary>
    public const int IntroductionFieldNumber = 7;
    private string introduction_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Introduction {
      get { return introduction_; }
      set {
        introduction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "interviewTime" field.</summary>
    public const int InterviewTimeFieldNumber = 8;
    private string interviewTime_ = "";
    /// <summary>
    ///可接受采访时间段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InterviewTime {
      get { return interviewTime_; }
      set {
        interviewTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mediaName" field.</summary>
    public const int MediaNameFieldNumber = 9;
    private string mediaName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MediaName {
      get { return mediaName_; }
      set {
        mediaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "memberId" field.</summary>
    public const int MemberIdFieldNumber = 10;
    private string memberId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberId {
      get { return memberId_; }
      set {
        memberId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyName" field.</summary>
    public const int CompanyNameFieldNumber = 11;
    private string companyName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyName {
      get { return companyName_; }
      set {
        companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyNameEn" field.</summary>
    public const int CompanyNameEnFieldNumber = 12;
    private string companyNameEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyNameEn {
      get { return companyNameEn_; }
      set {
        companyNameEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ownerId" field.</summary>
    public const int OwnerIdFieldNumber = 13;
    private string ownerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerId {
      get { return ownerId_; }
      set {
        ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ownerName" field.</summary>
    public const int OwnerNameFieldNumber = 14;
    private string ownerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerName {
      get { return ownerName_; }
      set {
        ownerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 15;
    private string createdAt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "updated_at" field.</summary>
    public const int UpdatedAtFieldNumber = 16;
    private string updatedAt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpdatedAt {
      get { return updatedAt_; }
      set {
        updatedAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InterviewStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InterviewStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (NameEn != other.NameEn) return false;
      if (JobTitle != other.JobTitle) return false;
      if (JobTitleEn != other.JobTitleEn) return false;
      if (Photo != other.Photo) return false;
      if (Introduction != other.Introduction) return false;
      if (InterviewTime != other.InterviewTime) return false;
      if (MediaName != other.MediaName) return false;
      if (MemberId != other.MemberId) return false;
      if (CompanyName != other.CompanyName) return false;
      if (CompanyNameEn != other.CompanyNameEn) return false;
      if (OwnerId != other.OwnerId) return false;
      if (OwnerName != other.OwnerName) return false;
      if (CreatedAt != other.CreatedAt) return false;
      if (UpdatedAt != other.UpdatedAt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (NameEn.Length != 0) hash ^= NameEn.GetHashCode();
      if (JobTitle.Length != 0) hash ^= JobTitle.GetHashCode();
      if (JobTitleEn.Length != 0) hash ^= JobTitleEn.GetHashCode();
      if (Photo.Length != 0) hash ^= Photo.GetHashCode();
      if (Introduction.Length != 0) hash ^= Introduction.GetHashCode();
      if (InterviewTime.Length != 0) hash ^= InterviewTime.GetHashCode();
      if (MediaName.Length != 0) hash ^= MediaName.GetHashCode();
      if (MemberId.Length != 0) hash ^= MemberId.GetHashCode();
      if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
      if (CompanyNameEn.Length != 0) hash ^= CompanyNameEn.GetHashCode();
      if (OwnerId.Length != 0) hash ^= OwnerId.GetHashCode();
      if (OwnerName.Length != 0) hash ^= OwnerName.GetHashCode();
      if (CreatedAt.Length != 0) hash ^= CreatedAt.GetHashCode();
      if (UpdatedAt.Length != 0) hash ^= UpdatedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (NameEn.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NameEn);
      }
      if (JobTitle.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(JobTitle);
      }
      if (JobTitleEn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(JobTitleEn);
      }
      if (Photo.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Photo);
      }
      if (Introduction.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Introduction);
      }
      if (InterviewTime.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(InterviewTime);
      }
      if (MediaName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(MediaName);
      }
      if (MemberId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(MemberId);
      }
      if (CompanyName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(CompanyName);
      }
      if (CompanyNameEn.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(CompanyNameEn);
      }
      if (OwnerId.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(OwnerId);
      }
      if (OwnerName.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(OwnerName);
      }
      if (CreatedAt.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(CreatedAt);
      }
      if (UpdatedAt.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(UpdatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (NameEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameEn);
      }
      if (JobTitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobTitle);
      }
      if (JobTitleEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobTitleEn);
      }
      if (Photo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Photo);
      }
      if (Introduction.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Introduction);
      }
      if (InterviewTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InterviewTime);
      }
      if (MediaName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MediaName);
      }
      if (MemberId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberId);
      }
      if (CompanyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
      }
      if (CompanyNameEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyNameEn);
      }
      if (OwnerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
      }
      if (OwnerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerName);
      }
      if (CreatedAt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedAt);
      }
      if (UpdatedAt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UpdatedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InterviewStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.NameEn.Length != 0) {
        NameEn = other.NameEn;
      }
      if (other.JobTitle.Length != 0) {
        JobTitle = other.JobTitle;
      }
      if (other.JobTitleEn.Length != 0) {
        JobTitleEn = other.JobTitleEn;
      }
      if (other.Photo.Length != 0) {
        Photo = other.Photo;
      }
      if (other.Introduction.Length != 0) {
        Introduction = other.Introduction;
      }
      if (other.InterviewTime.Length != 0) {
        InterviewTime = other.InterviewTime;
      }
      if (other.MediaName.Length != 0) {
        MediaName = other.MediaName;
      }
      if (other.MemberId.Length != 0) {
        MemberId = other.MemberId;
      }
      if (other.CompanyName.Length != 0) {
        CompanyName = other.CompanyName;
      }
      if (other.CompanyNameEn.Length != 0) {
        CompanyNameEn = other.CompanyNameEn;
      }
      if (other.OwnerId.Length != 0) {
        OwnerId = other.OwnerId;
      }
      if (other.OwnerName.Length != 0) {
        OwnerName = other.OwnerName;
      }
      if (other.CreatedAt.Length != 0) {
        CreatedAt = other.CreatedAt;
      }
      if (other.UpdatedAt.Length != 0) {
        UpdatedAt = other.UpdatedAt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            NameEn = input.ReadString();
            break;
          }
          case 34: {
            JobTitle = input.ReadString();
            break;
          }
          case 42: {
            JobTitleEn = input.ReadString();
            break;
          }
          case 50: {
            Photo = input.ReadString();
            break;
          }
          case 58: {
            Introduction = input.ReadString();
            break;
          }
          case 66: {
            InterviewTime = input.ReadString();
            break;
          }
          case 74: {
            MediaName = input.ReadString();
            break;
          }
          case 82: {
            MemberId = input.ReadString();
            break;
          }
          case 90: {
            CompanyName = input.ReadString();
            break;
          }
          case 98: {
            CompanyNameEn = input.ReadString();
            break;
          }
          case 106: {
            OwnerId = input.ReadString();
            break;
          }
          case 114: {
            OwnerName = input.ReadString();
            break;
          }
          case 122: {
            CreatedAt = input.ReadString();
            break;
          }
          case 130: {
            UpdatedAt = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InterviewList : pb::IMessage<InterviewList> {
    private static readonly pb::MessageParser<InterviewList> _parser = new pb::MessageParser<InterviewList>(() => new InterviewList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InterviewList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InterviewList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InterviewList(InterviewList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InterviewList Clone() {
      return new InterviewList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcMediaService.InterviewStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcMediaService.InterviewStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcMediaService.InterviewStruct> listdata_ = new pbc::RepeatedField<global::GrpcMediaService.InterviewStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcMediaService.InterviewStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InterviewList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InterviewList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InterviewList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HighlightsInfoStruct : pb::IMessage<HighlightsInfoStruct> {
    private static readonly pb::MessageParser<HighlightsInfoStruct> _parser = new pb::MessageParser<HighlightsInfoStruct>(() => new HighlightsInfoStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HighlightsInfoStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HighlightsInfoStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HighlightsInfoStruct(HighlightsInfoStruct other) : this() {
      id_ = other.id_;
      lDnameCn_ = other.lDnameCn_;
      lDnameEn_ = other.lDnameEn_;
      lDdescribeCn_ = other.lDdescribeCn_;
      lDdescribeEn_ = other.lDdescribeEn_;
      lDimage_ = other.lDimage_;
      lDlogo_ = other.lDlogo_;
      yJname_ = other.yJname_;
      yJnameEn_ = other.yJnameEn_;
      yJPosition_ = other.yJPosition_;
      yJPositionEn_ = other.yJPositionEn_;
      yJIntroduction_ = other.yJIntroduction_;
      yJPhoto_ = other.yJPhoto_;
      showWay_ = other.showWay_;
      contract_ = other.contract_;
      contractCompany_ = other.contractCompany_;
      contractCompanyEn_ = other.contractCompanyEn_;
      tel_ = other.tel_;
      mobile_ = other.mobile_;
      email_ = other.email_;
      memberId_ = other.memberId_;
      ownerId_ = other.ownerId_;
      ownerName_ = other.ownerName_;
      createdAt_ = other.createdAt_;
      updatedAt_ = other.updatedAt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HighlightsInfoStruct Clone() {
      return new HighlightsInfoStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LDnameCn" field.</summary>
    public const int LDnameCnFieldNumber = 2;
    private string lDnameCn_ = "";
    /// <summary>
    ///亮点中文名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LDnameCn {
      get { return lDnameCn_; }
      set {
        lDnameCn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LDnameEn" field.</summary>
    public const int LDnameEnFieldNumber = 3;
    private string lDnameEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LDnameEn {
      get { return lDnameEn_; }
      set {
        lDnameEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LDdescribeCn" field.</summary>
    public const int LDdescribeCnFieldNumber = 4;
    private string lDdescribeCn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LDdescribeCn {
      get { return lDdescribeCn_; }
      set {
        lDdescribeCn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LDdescribeEn" field.</summary>
    public const int LDdescribeEnFieldNumber = 5;
    private string lDdescribeEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LDdescribeEn {
      get { return lDdescribeEn_; }
      set {
        lDdescribeEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LDimage" field.</summary>
    public const int LDimageFieldNumber = 6;
    private string lDimage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LDimage {
      get { return lDimage_; }
      set {
        lDimage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LDlogo" field.</summary>
    public const int LDlogoFieldNumber = 7;
    private string lDlogo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LDlogo {
      get { return lDlogo_; }
      set {
        lDlogo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "YJname" field.</summary>
    public const int YJnameFieldNumber = 8;
    private string yJname_ = "";
    /// <summary>
    ///演讲人名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string YJname {
      get { return yJname_; }
      set {
        yJname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "YJnameEn" field.</summary>
    public const int YJnameEnFieldNumber = 9;
    private string yJnameEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string YJnameEn {
      get { return yJnameEn_; }
      set {
        yJnameEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "YJPosition" field.</summary>
    public const int YJPositionFieldNumber = 10;
    private string yJPosition_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string YJPosition {
      get { return yJPosition_; }
      set {
        yJPosition_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "YJPositionEn" field.</summary>
    public const int YJPositionEnFieldNumber = 11;
    private string yJPositionEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string YJPositionEn {
      get { return yJPositionEn_; }
      set {
        yJPositionEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "YJIntroduction" field.</summary>
    public const int YJIntroductionFieldNumber = 12;
    private string yJIntroduction_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string YJIntroduction {
      get { return yJIntroduction_; }
      set {
        yJIntroduction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "YJPhoto" field.</summary>
    public const int YJPhotoFieldNumber = 13;
    private string yJPhoto_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string YJPhoto {
      get { return yJPhoto_; }
      set {
        yJPhoto_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ShowWay" field.</summary>
    public const int ShowWayFieldNumber = 14;
    private string showWay_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShowWay {
      get { return showWay_; }
      set {
        showWay_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Contract" field.</summary>
    public const int ContractFieldNumber = 15;
    private string contract_ = "";
    /// <summary>
    ///联系人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Contract {
      get { return contract_; }
      set {
        contract_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractCompany" field.</summary>
    public const int ContractCompanyFieldNumber = 16;
    private string contractCompany_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractCompany {
      get { return contractCompany_; }
      set {
        contractCompany_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractCompanyEn" field.</summary>
    public const int ContractCompanyEnFieldNumber = 17;
    private string contractCompanyEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractCompanyEn {
      get { return contractCompanyEn_; }
      set {
        contractCompanyEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Tel" field.</summary>
    public const int TelFieldNumber = 18;
    private string tel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tel {
      get { return tel_; }
      set {
        tel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Mobile" field.</summary>
    public const int MobileFieldNumber = 19;
    private string mobile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mobile {
      get { return mobile_; }
      set {
        mobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Email" field.</summary>
    public const int EmailFieldNumber = 20;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberId" field.</summary>
    public const int MemberIdFieldNumber = 21;
    private string memberId_ = "";
    /// <summary>
    ///会员Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberId {
      get { return memberId_; }
      set {
        memberId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OwnerId" field.</summary>
    public const int OwnerIdFieldNumber = 22;
    private string ownerId_ = "";
    /// <summary>
    ///客户经理Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerId {
      get { return ownerId_; }
      set {
        ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OwnerName" field.</summary>
    public const int OwnerNameFieldNumber = 23;
    private string ownerName_ = "";
    /// <summary>
    ///客户经理名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerName {
      get { return ownerName_; }
      set {
        ownerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Created_at" field.</summary>
    public const int CreatedAtFieldNumber = 24;
    private string createdAt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Updated_at" field.</summary>
    public const int UpdatedAtFieldNumber = 25;
    private string updatedAt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpdatedAt {
      get { return updatedAt_; }
      set {
        updatedAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HighlightsInfoStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HighlightsInfoStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (LDnameCn != other.LDnameCn) return false;
      if (LDnameEn != other.LDnameEn) return false;
      if (LDdescribeCn != other.LDdescribeCn) return false;
      if (LDdescribeEn != other.LDdescribeEn) return false;
      if (LDimage != other.LDimage) return false;
      if (LDlogo != other.LDlogo) return false;
      if (YJname != other.YJname) return false;
      if (YJnameEn != other.YJnameEn) return false;
      if (YJPosition != other.YJPosition) return false;
      if (YJPositionEn != other.YJPositionEn) return false;
      if (YJIntroduction != other.YJIntroduction) return false;
      if (YJPhoto != other.YJPhoto) return false;
      if (ShowWay != other.ShowWay) return false;
      if (Contract != other.Contract) return false;
      if (ContractCompany != other.ContractCompany) return false;
      if (ContractCompanyEn != other.ContractCompanyEn) return false;
      if (Tel != other.Tel) return false;
      if (Mobile != other.Mobile) return false;
      if (Email != other.Email) return false;
      if (MemberId != other.MemberId) return false;
      if (OwnerId != other.OwnerId) return false;
      if (OwnerName != other.OwnerName) return false;
      if (CreatedAt != other.CreatedAt) return false;
      if (UpdatedAt != other.UpdatedAt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (LDnameCn.Length != 0) hash ^= LDnameCn.GetHashCode();
      if (LDnameEn.Length != 0) hash ^= LDnameEn.GetHashCode();
      if (LDdescribeCn.Length != 0) hash ^= LDdescribeCn.GetHashCode();
      if (LDdescribeEn.Length != 0) hash ^= LDdescribeEn.GetHashCode();
      if (LDimage.Length != 0) hash ^= LDimage.GetHashCode();
      if (LDlogo.Length != 0) hash ^= LDlogo.GetHashCode();
      if (YJname.Length != 0) hash ^= YJname.GetHashCode();
      if (YJnameEn.Length != 0) hash ^= YJnameEn.GetHashCode();
      if (YJPosition.Length != 0) hash ^= YJPosition.GetHashCode();
      if (YJPositionEn.Length != 0) hash ^= YJPositionEn.GetHashCode();
      if (YJIntroduction.Length != 0) hash ^= YJIntroduction.GetHashCode();
      if (YJPhoto.Length != 0) hash ^= YJPhoto.GetHashCode();
      if (ShowWay.Length != 0) hash ^= ShowWay.GetHashCode();
      if (Contract.Length != 0) hash ^= Contract.GetHashCode();
      if (ContractCompany.Length != 0) hash ^= ContractCompany.GetHashCode();
      if (ContractCompanyEn.Length != 0) hash ^= ContractCompanyEn.GetHashCode();
      if (Tel.Length != 0) hash ^= Tel.GetHashCode();
      if (Mobile.Length != 0) hash ^= Mobile.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (MemberId.Length != 0) hash ^= MemberId.GetHashCode();
      if (OwnerId.Length != 0) hash ^= OwnerId.GetHashCode();
      if (OwnerName.Length != 0) hash ^= OwnerName.GetHashCode();
      if (CreatedAt.Length != 0) hash ^= CreatedAt.GetHashCode();
      if (UpdatedAt.Length != 0) hash ^= UpdatedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (LDnameCn.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LDnameCn);
      }
      if (LDnameEn.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LDnameEn);
      }
      if (LDdescribeCn.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LDdescribeCn);
      }
      if (LDdescribeEn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LDdescribeEn);
      }
      if (LDimage.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(LDimage);
      }
      if (LDlogo.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(LDlogo);
      }
      if (YJname.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(YJname);
      }
      if (YJnameEn.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(YJnameEn);
      }
      if (YJPosition.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(YJPosition);
      }
      if (YJPositionEn.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(YJPositionEn);
      }
      if (YJIntroduction.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(YJIntroduction);
      }
      if (YJPhoto.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(YJPhoto);
      }
      if (ShowWay.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ShowWay);
      }
      if (Contract.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Contract);
      }
      if (ContractCompany.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(ContractCompany);
      }
      if (ContractCompanyEn.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(ContractCompanyEn);
      }
      if (Tel.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Tel);
      }
      if (Mobile.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Mobile);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(Email);
      }
      if (MemberId.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(MemberId);
      }
      if (OwnerId.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(OwnerId);
      }
      if (OwnerName.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(OwnerName);
      }
      if (CreatedAt.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(CreatedAt);
      }
      if (UpdatedAt.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(UpdatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (LDnameCn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LDnameCn);
      }
      if (LDnameEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LDnameEn);
      }
      if (LDdescribeCn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LDdescribeCn);
      }
      if (LDdescribeEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LDdescribeEn);
      }
      if (LDimage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LDimage);
      }
      if (LDlogo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LDlogo);
      }
      if (YJname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(YJname);
      }
      if (YJnameEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(YJnameEn);
      }
      if (YJPosition.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(YJPosition);
      }
      if (YJPositionEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(YJPositionEn);
      }
      if (YJIntroduction.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(YJIntroduction);
      }
      if (YJPhoto.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(YJPhoto);
      }
      if (ShowWay.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShowWay);
      }
      if (Contract.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Contract);
      }
      if (ContractCompany.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContractCompany);
      }
      if (ContractCompanyEn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContractCompanyEn);
      }
      if (Tel.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Tel);
      }
      if (Mobile.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Mobile);
      }
      if (Email.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (MemberId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemberId);
      }
      if (OwnerId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
      }
      if (OwnerName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OwnerName);
      }
      if (CreatedAt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedAt);
      }
      if (UpdatedAt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UpdatedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HighlightsInfoStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.LDnameCn.Length != 0) {
        LDnameCn = other.LDnameCn;
      }
      if (other.LDnameEn.Length != 0) {
        LDnameEn = other.LDnameEn;
      }
      if (other.LDdescribeCn.Length != 0) {
        LDdescribeCn = other.LDdescribeCn;
      }
      if (other.LDdescribeEn.Length != 0) {
        LDdescribeEn = other.LDdescribeEn;
      }
      if (other.LDimage.Length != 0) {
        LDimage = other.LDimage;
      }
      if (other.LDlogo.Length != 0) {
        LDlogo = other.LDlogo;
      }
      if (other.YJname.Length != 0) {
        YJname = other.YJname;
      }
      if (other.YJnameEn.Length != 0) {
        YJnameEn = other.YJnameEn;
      }
      if (other.YJPosition.Length != 0) {
        YJPosition = other.YJPosition;
      }
      if (other.YJPositionEn.Length != 0) {
        YJPositionEn = other.YJPositionEn;
      }
      if (other.YJIntroduction.Length != 0) {
        YJIntroduction = other.YJIntroduction;
      }
      if (other.YJPhoto.Length != 0) {
        YJPhoto = other.YJPhoto;
      }
      if (other.ShowWay.Length != 0) {
        ShowWay = other.ShowWay;
      }
      if (other.Contract.Length != 0) {
        Contract = other.Contract;
      }
      if (other.ContractCompany.Length != 0) {
        ContractCompany = other.ContractCompany;
      }
      if (other.ContractCompanyEn.Length != 0) {
        ContractCompanyEn = other.ContractCompanyEn;
      }
      if (other.Tel.Length != 0) {
        Tel = other.Tel;
      }
      if (other.Mobile.Length != 0) {
        Mobile = other.Mobile;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.MemberId.Length != 0) {
        MemberId = other.MemberId;
      }
      if (other.OwnerId.Length != 0) {
        OwnerId = other.OwnerId;
      }
      if (other.OwnerName.Length != 0) {
        OwnerName = other.OwnerName;
      }
      if (other.CreatedAt.Length != 0) {
        CreatedAt = other.CreatedAt;
      }
      if (other.UpdatedAt.Length != 0) {
        UpdatedAt = other.UpdatedAt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            LDnameCn = input.ReadString();
            break;
          }
          case 26: {
            LDnameEn = input.ReadString();
            break;
          }
          case 34: {
            LDdescribeCn = input.ReadString();
            break;
          }
          case 42: {
            LDdescribeEn = input.ReadString();
            break;
          }
          case 50: {
            LDimage = input.ReadString();
            break;
          }
          case 58: {
            LDlogo = input.ReadString();
            break;
          }
          case 66: {
            YJname = input.ReadString();
            break;
          }
          case 74: {
            YJnameEn = input.ReadString();
            break;
          }
          case 82: {
            YJPosition = input.ReadString();
            break;
          }
          case 90: {
            YJPositionEn = input.ReadString();
            break;
          }
          case 98: {
            YJIntroduction = input.ReadString();
            break;
          }
          case 106: {
            YJPhoto = input.ReadString();
            break;
          }
          case 114: {
            ShowWay = input.ReadString();
            break;
          }
          case 122: {
            Contract = input.ReadString();
            break;
          }
          case 130: {
            ContractCompany = input.ReadString();
            break;
          }
          case 138: {
            ContractCompanyEn = input.ReadString();
            break;
          }
          case 146: {
            Tel = input.ReadString();
            break;
          }
          case 154: {
            Mobile = input.ReadString();
            break;
          }
          case 162: {
            Email = input.ReadString();
            break;
          }
          case 170: {
            MemberId = input.ReadString();
            break;
          }
          case 178: {
            OwnerId = input.ReadString();
            break;
          }
          case 186: {
            OwnerName = input.ReadString();
            break;
          }
          case 194: {
            CreatedAt = input.ReadString();
            break;
          }
          case 202: {
            UpdatedAt = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HighlightsInfoList : pb::IMessage<HighlightsInfoList> {
    private static readonly pb::MessageParser<HighlightsInfoList> _parser = new pb::MessageParser<HighlightsInfoList>(() => new HighlightsInfoList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HighlightsInfoList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HighlightsInfoList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HighlightsInfoList(HighlightsInfoList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HighlightsInfoList Clone() {
      return new HighlightsInfoList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcMediaService.HighlightsInfoStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcMediaService.HighlightsInfoStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcMediaService.HighlightsInfoStruct> listdata_ = new pbc::RepeatedField<global::GrpcMediaService.HighlightsInfoStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcMediaService.HighlightsInfoStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HighlightsInfoList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HighlightsInfoList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HighlightsInfoList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HotelIdRequest : pb::IMessage<HotelIdRequest> {
    private static readonly pb::MessageParser<HotelIdRequest> _parser = new pb::MessageParser<HotelIdRequest>(() => new HotelIdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HotelIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelIdRequest(HotelIdRequest other) : this() {
      hotelId_ = other.hotelId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelIdRequest Clone() {
      return new HotelIdRequest(this);
    }

    /// <summary>Field number for the "hotelId" field.</summary>
    public const int HotelIdFieldNumber = 1;
    private string hotelId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelId {
      get { return hotelId_; }
      set {
        hotelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HotelIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HotelIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HotelId != other.HotelId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HotelId.Length != 0) hash ^= HotelId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HotelId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(HotelId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HotelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HotelIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.HotelId.Length != 0) {
        HotelId = other.HotelId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HotelId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HotelStruct : pb::IMessage<HotelStruct> {
    private static readonly pb::MessageParser<HotelStruct> _parser = new pb::MessageParser<HotelStruct>(() => new HotelStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HotelStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelStruct(HotelStruct other) : this() {
      hotelId_ = other.hotelId_;
      hotelCode_ = other.hotelCode_;
      hotelName_ = other.hotelName_;
      hotelNameEn_ = other.hotelNameEn_;
      hotelAddress_ = other.hotelAddress_;
      hotelAddressEn_ = other.hotelAddressEn_;
      country_ = other.country_;
      keyWord_ = other.keyWord_;
      hotelEmail_ = other.hotelEmail_;
      hotelTel_ = other.hotelTel_;
      hotelLevel_ = other.hotelLevel_;
      hotelIntroduction_ = other.hotelIntroduction_;
      hotelIntroductionEn_ = other.hotelIntroductionEn_;
      bankInfo_ = other.bankInfo_;
      bankInfoEn_ = other.bankInfoEn_;
      remark_ = other.remark_;
      remarkEn_ = other.remarkEn_;
      sort_ = other.sort_;
      createdAt_ = other.createdAt_;
      updatedAt_ = other.updatedAt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelStruct Clone() {
      return new HotelStruct(this);
    }

    /// <summary>Field number for the "HotelId" field.</summary>
    public const int HotelIdFieldNumber = 1;
    private string hotelId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelId {
      get { return hotelId_; }
      set {
        hotelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HotelCode" field.</summary>
    public const int HotelCodeFieldNumber = 2;
    private string hotelCode_ = "";
    /// <summary>
    ///酒店编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelCode {
      get { return hotelCode_; }
      set {
        hotelCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HotelName" field.</summary>
    public const int HotelNameFieldNumber = 3;
    private string hotelName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelName {
      get { return hotelName_; }
      set {
        hotelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HotelNameEn" field.</summary>
    public const int HotelNameEnFieldNumber = 4;
    private string hotelNameEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelNameEn {
      get { return hotelNameEn_; }
      set {
        hotelNameEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HotelAddress" field.</summary>
    public const int HotelAddressFieldNumber = 5;
    private string hotelAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelAddress {
      get { return hotelAddress_; }
      set {
        hotelAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HotelAddressEn" field.</summary>
    public const int HotelAddressEnFieldNumber = 6;
    private string hotelAddressEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelAddressEn {
      get { return hotelAddressEn_; }
      set {
        hotelAddressEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Country" field.</summary>
    public const int CountryFieldNumber = 7;
    private string country_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Country {
      get { return country_; }
      set {
        country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "KeyWord" field.</summary>
    public const int KeyWordFieldNumber = 8;
    private string keyWord_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string KeyWord {
      get { return keyWord_; }
      set {
        keyWord_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HotelEmail" field.</summary>
    public const int HotelEmailFieldNumber = 9;
    private string hotelEmail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelEmail {
      get { return hotelEmail_; }
      set {
        hotelEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HotelTel" field.</summary>
    public const int HotelTelFieldNumber = 10;
    private string hotelTel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelTel {
      get { return hotelTel_; }
      set {
        hotelTel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HotelLevel" field.</summary>
    public const int HotelLevelFieldNumber = 11;
    private int hotelLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HotelLevel {
      get { return hotelLevel_; }
      set {
        hotelLevel_ = value;
      }
    }

    /// <summary>Field number for the "HotelIntroduction" field.</summary>
    public const int HotelIntroductionFieldNumber = 12;
    private string hotelIntroduction_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelIntroduction {
      get { return hotelIntroduction_; }
      set {
        hotelIntroduction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HotelIntroductionEn" field.</summary>
    public const int HotelIntroductionEnFieldNumber = 13;
    private string hotelIntroductionEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelIntroductionEn {
      get { return hotelIntroductionEn_; }
      set {
        hotelIntroductionEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BankInfo" field.</summary>
    public const int BankInfoFieldNumber = 14;
    private string bankInfo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BankInfo {
      get { return bankInfo_; }
      set {
        bankInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BankInfoEn" field.</summary>
    public const int BankInfoEnFieldNumber = 15;
    private string bankInfoEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BankInfoEn {
      get { return bankInfoEn_; }
      set {
        bankInfoEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Remark" field.</summary>
    public const int RemarkFieldNumber = 16;
    private string remark_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remark {
      get { return remark_; }
      set {
        remark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RemarkEn" field.</summary>
    public const int RemarkEnFieldNumber = 17;
    private string remarkEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RemarkEn {
      get { return remarkEn_; }
      set {
        remarkEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 18;
    private int sort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "Created_at" field.</summary>
    public const int CreatedAtFieldNumber = 19;
    private string createdAt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Updated_at" field.</summary>
    public const int UpdatedAtFieldNumber = 20;
    private string updatedAt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpdatedAt {
      get { return updatedAt_; }
      set {
        updatedAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HotelStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HotelStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HotelId != other.HotelId) return false;
      if (HotelCode != other.HotelCode) return false;
      if (HotelName != other.HotelName) return false;
      if (HotelNameEn != other.HotelNameEn) return false;
      if (HotelAddress != other.HotelAddress) return false;
      if (HotelAddressEn != other.HotelAddressEn) return false;
      if (Country != other.Country) return false;
      if (KeyWord != other.KeyWord) return false;
      if (HotelEmail != other.HotelEmail) return false;
      if (HotelTel != other.HotelTel) return false;
      if (HotelLevel != other.HotelLevel) return false;
      if (HotelIntroduction != other.HotelIntroduction) return false;
      if (HotelIntroductionEn != other.HotelIntroductionEn) return false;
      if (BankInfo != other.BankInfo) return false;
      if (BankInfoEn != other.BankInfoEn) return false;
      if (Remark != other.Remark) return false;
      if (RemarkEn != other.RemarkEn) return false;
      if (Sort != other.Sort) return false;
      if (CreatedAt != other.CreatedAt) return false;
      if (UpdatedAt != other.UpdatedAt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HotelId.Length != 0) hash ^= HotelId.GetHashCode();
      if (HotelCode.Length != 0) hash ^= HotelCode.GetHashCode();
      if (HotelName.Length != 0) hash ^= HotelName.GetHashCode();
      if (HotelNameEn.Length != 0) hash ^= HotelNameEn.GetHashCode();
      if (HotelAddress.Length != 0) hash ^= HotelAddress.GetHashCode();
      if (HotelAddressEn.Length != 0) hash ^= HotelAddressEn.GetHashCode();
      if (Country.Length != 0) hash ^= Country.GetHashCode();
      if (KeyWord.Length != 0) hash ^= KeyWord.GetHashCode();
      if (HotelEmail.Length != 0) hash ^= HotelEmail.GetHashCode();
      if (HotelTel.Length != 0) hash ^= HotelTel.GetHashCode();
      if (HotelLevel != 0) hash ^= HotelLevel.GetHashCode();
      if (HotelIntroduction.Length != 0) hash ^= HotelIntroduction.GetHashCode();
      if (HotelIntroductionEn.Length != 0) hash ^= HotelIntroductionEn.GetHashCode();
      if (BankInfo.Length != 0) hash ^= BankInfo.GetHashCode();
      if (BankInfoEn.Length != 0) hash ^= BankInfoEn.GetHashCode();
      if (Remark.Length != 0) hash ^= Remark.GetHashCode();
      if (RemarkEn.Length != 0) hash ^= RemarkEn.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      if (CreatedAt.Length != 0) hash ^= CreatedAt.GetHashCode();
      if (UpdatedAt.Length != 0) hash ^= UpdatedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HotelId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(HotelId);
      }
      if (HotelCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HotelCode);
      }
      if (HotelName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(HotelName);
      }
      if (HotelNameEn.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(HotelNameEn);
      }
      if (HotelAddress.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(HotelAddress);
      }
      if (HotelAddressEn.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(HotelAddressEn);
      }
      if (Country.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Country);
      }
      if (KeyWord.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(KeyWord);
      }
      if (HotelEmail.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(HotelEmail);
      }
      if (HotelTel.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(HotelTel);
      }
      if (HotelLevel != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(HotelLevel);
      }
      if (HotelIntroduction.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(HotelIntroduction);
      }
      if (HotelIntroductionEn.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(HotelIntroductionEn);
      }
      if (BankInfo.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(BankInfo);
      }
      if (BankInfoEn.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(BankInfoEn);
      }
      if (Remark.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Remark);
      }
      if (RemarkEn.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(RemarkEn);
      }
      if (Sort != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(Sort);
      }
      if (CreatedAt.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(CreatedAt);
      }
      if (UpdatedAt.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(UpdatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HotelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelId);
      }
      if (HotelCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelCode);
      }
      if (HotelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelName);
      }
      if (HotelNameEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelNameEn);
      }
      if (HotelAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelAddress);
      }
      if (HotelAddressEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelAddressEn);
      }
      if (Country.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
      }
      if (KeyWord.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KeyWord);
      }
      if (HotelEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelEmail);
      }
      if (HotelTel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelTel);
      }
      if (HotelLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HotelLevel);
      }
      if (HotelIntroduction.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelIntroduction);
      }
      if (HotelIntroductionEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelIntroductionEn);
      }
      if (BankInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BankInfo);
      }
      if (BankInfoEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BankInfoEn);
      }
      if (Remark.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Remark);
      }
      if (RemarkEn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RemarkEn);
      }
      if (Sort != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      if (CreatedAt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedAt);
      }
      if (UpdatedAt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UpdatedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HotelStruct other) {
      if (other == null) {
        return;
      }
      if (other.HotelId.Length != 0) {
        HotelId = other.HotelId;
      }
      if (other.HotelCode.Length != 0) {
        HotelCode = other.HotelCode;
      }
      if (other.HotelName.Length != 0) {
        HotelName = other.HotelName;
      }
      if (other.HotelNameEn.Length != 0) {
        HotelNameEn = other.HotelNameEn;
      }
      if (other.HotelAddress.Length != 0) {
        HotelAddress = other.HotelAddress;
      }
      if (other.HotelAddressEn.Length != 0) {
        HotelAddressEn = other.HotelAddressEn;
      }
      if (other.Country.Length != 0) {
        Country = other.Country;
      }
      if (other.KeyWord.Length != 0) {
        KeyWord = other.KeyWord;
      }
      if (other.HotelEmail.Length != 0) {
        HotelEmail = other.HotelEmail;
      }
      if (other.HotelTel.Length != 0) {
        HotelTel = other.HotelTel;
      }
      if (other.HotelLevel != 0) {
        HotelLevel = other.HotelLevel;
      }
      if (other.HotelIntroduction.Length != 0) {
        HotelIntroduction = other.HotelIntroduction;
      }
      if (other.HotelIntroductionEn.Length != 0) {
        HotelIntroductionEn = other.HotelIntroductionEn;
      }
      if (other.BankInfo.Length != 0) {
        BankInfo = other.BankInfo;
      }
      if (other.BankInfoEn.Length != 0) {
        BankInfoEn = other.BankInfoEn;
      }
      if (other.Remark.Length != 0) {
        Remark = other.Remark;
      }
      if (other.RemarkEn.Length != 0) {
        RemarkEn = other.RemarkEn;
      }
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      if (other.CreatedAt.Length != 0) {
        CreatedAt = other.CreatedAt;
      }
      if (other.UpdatedAt.Length != 0) {
        UpdatedAt = other.UpdatedAt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HotelId = input.ReadString();
            break;
          }
          case 18: {
            HotelCode = input.ReadString();
            break;
          }
          case 26: {
            HotelName = input.ReadString();
            break;
          }
          case 34: {
            HotelNameEn = input.ReadString();
            break;
          }
          case 42: {
            HotelAddress = input.ReadString();
            break;
          }
          case 50: {
            HotelAddressEn = input.ReadString();
            break;
          }
          case 58: {
            Country = input.ReadString();
            break;
          }
          case 66: {
            KeyWord = input.ReadString();
            break;
          }
          case 74: {
            HotelEmail = input.ReadString();
            break;
          }
          case 82: {
            HotelTel = input.ReadString();
            break;
          }
          case 88: {
            HotelLevel = input.ReadInt32();
            break;
          }
          case 98: {
            HotelIntroduction = input.ReadString();
            break;
          }
          case 106: {
            HotelIntroductionEn = input.ReadString();
            break;
          }
          case 114: {
            BankInfo = input.ReadString();
            break;
          }
          case 122: {
            BankInfoEn = input.ReadString();
            break;
          }
          case 130: {
            Remark = input.ReadString();
            break;
          }
          case 138: {
            RemarkEn = input.ReadString();
            break;
          }
          case 144: {
            Sort = input.ReadInt32();
            break;
          }
          case 154: {
            CreatedAt = input.ReadString();
            break;
          }
          case 162: {
            UpdatedAt = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HotelVM : pb::IMessage<HotelVM> {
    private static readonly pb::MessageParser<HotelVM> _parser = new pb::MessageParser<HotelVM>(() => new HotelVM());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HotelVM> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelVM() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelVM(HotelVM other) : this() {
      hotelId_ = other.hotelId_;
      hotelCode_ = other.hotelCode_;
      hotelName_ = other.hotelName_;
      hotelNameEn_ = other.hotelNameEn_;
      hotelAddress_ = other.hotelAddress_;
      hotelAddressEn_ = other.hotelAddressEn_;
      country_ = other.country_;
      keyWord_ = other.keyWord_;
      hotelEmail_ = other.hotelEmail_;
      hotelTel_ = other.hotelTel_;
      hotelLevel_ = other.hotelLevel_;
      hotelIntroduction_ = other.hotelIntroduction_;
      hotelIntroductionEn_ = other.hotelIntroductionEn_;
      bankInfo_ = other.bankInfo_;
      bankInfoEn_ = other.bankInfoEn_;
      remark_ = other.remark_;
      remarkEn_ = other.remarkEn_;
      sort_ = other.sort_;
      createdAt_ = other.createdAt_;
      updatedAt_ = other.updatedAt_;
      hotelRoomTypes_ = other.hotelRoomTypes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelVM Clone() {
      return new HotelVM(this);
    }

    /// <summary>Field number for the "HotelId" field.</summary>
    public const int HotelIdFieldNumber = 1;
    private string hotelId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelId {
      get { return hotelId_; }
      set {
        hotelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HotelCode" field.</summary>
    public const int HotelCodeFieldNumber = 2;
    private string hotelCode_ = "";
    /// <summary>
    ///酒店编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelCode {
      get { return hotelCode_; }
      set {
        hotelCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HotelName" field.</summary>
    public const int HotelNameFieldNumber = 3;
    private string hotelName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelName {
      get { return hotelName_; }
      set {
        hotelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HotelNameEn" field.</summary>
    public const int HotelNameEnFieldNumber = 4;
    private string hotelNameEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelNameEn {
      get { return hotelNameEn_; }
      set {
        hotelNameEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HotelAddress" field.</summary>
    public const int HotelAddressFieldNumber = 5;
    private string hotelAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelAddress {
      get { return hotelAddress_; }
      set {
        hotelAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HotelAddressEn" field.</summary>
    public const int HotelAddressEnFieldNumber = 6;
    private string hotelAddressEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelAddressEn {
      get { return hotelAddressEn_; }
      set {
        hotelAddressEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Country" field.</summary>
    public const int CountryFieldNumber = 7;
    private string country_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Country {
      get { return country_; }
      set {
        country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "KeyWord" field.</summary>
    public const int KeyWordFieldNumber = 8;
    private string keyWord_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string KeyWord {
      get { return keyWord_; }
      set {
        keyWord_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HotelEmail" field.</summary>
    public const int HotelEmailFieldNumber = 9;
    private string hotelEmail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelEmail {
      get { return hotelEmail_; }
      set {
        hotelEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HotelTel" field.</summary>
    public const int HotelTelFieldNumber = 10;
    private string hotelTel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelTel {
      get { return hotelTel_; }
      set {
        hotelTel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HotelLevel" field.</summary>
    public const int HotelLevelFieldNumber = 11;
    private int hotelLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HotelLevel {
      get { return hotelLevel_; }
      set {
        hotelLevel_ = value;
      }
    }

    /// <summary>Field number for the "HotelIntroduction" field.</summary>
    public const int HotelIntroductionFieldNumber = 12;
    private string hotelIntroduction_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelIntroduction {
      get { return hotelIntroduction_; }
      set {
        hotelIntroduction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HotelIntroductionEn" field.</summary>
    public const int HotelIntroductionEnFieldNumber = 13;
    private string hotelIntroductionEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelIntroductionEn {
      get { return hotelIntroductionEn_; }
      set {
        hotelIntroductionEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BankInfo" field.</summary>
    public const int BankInfoFieldNumber = 14;
    private string bankInfo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BankInfo {
      get { return bankInfo_; }
      set {
        bankInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BankInfoEn" field.</summary>
    public const int BankInfoEnFieldNumber = 15;
    private string bankInfoEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BankInfoEn {
      get { return bankInfoEn_; }
      set {
        bankInfoEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Remark" field.</summary>
    public const int RemarkFieldNumber = 16;
    private string remark_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remark {
      get { return remark_; }
      set {
        remark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RemarkEn" field.</summary>
    public const int RemarkEnFieldNumber = 17;
    private string remarkEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RemarkEn {
      get { return remarkEn_; }
      set {
        remarkEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 18;
    private int sort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "Created_at" field.</summary>
    public const int CreatedAtFieldNumber = 19;
    private string createdAt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Updated_at" field.</summary>
    public const int UpdatedAtFieldNumber = 20;
    private string updatedAt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpdatedAt {
      get { return updatedAt_; }
      set {
        updatedAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HotelRoomTypes" field.</summary>
    public const int HotelRoomTypesFieldNumber = 21;
    private static readonly pb::FieldCodec<global::GrpcMediaService.HotelRoomTypeStruct> _repeated_hotelRoomTypes_codec
        = pb::FieldCodec.ForMessage(170, global::GrpcMediaService.HotelRoomTypeStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcMediaService.HotelRoomTypeStruct> hotelRoomTypes_ = new pbc::RepeatedField<global::GrpcMediaService.HotelRoomTypeStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcMediaService.HotelRoomTypeStruct> HotelRoomTypes {
      get { return hotelRoomTypes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HotelVM);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HotelVM other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HotelId != other.HotelId) return false;
      if (HotelCode != other.HotelCode) return false;
      if (HotelName != other.HotelName) return false;
      if (HotelNameEn != other.HotelNameEn) return false;
      if (HotelAddress != other.HotelAddress) return false;
      if (HotelAddressEn != other.HotelAddressEn) return false;
      if (Country != other.Country) return false;
      if (KeyWord != other.KeyWord) return false;
      if (HotelEmail != other.HotelEmail) return false;
      if (HotelTel != other.HotelTel) return false;
      if (HotelLevel != other.HotelLevel) return false;
      if (HotelIntroduction != other.HotelIntroduction) return false;
      if (HotelIntroductionEn != other.HotelIntroductionEn) return false;
      if (BankInfo != other.BankInfo) return false;
      if (BankInfoEn != other.BankInfoEn) return false;
      if (Remark != other.Remark) return false;
      if (RemarkEn != other.RemarkEn) return false;
      if (Sort != other.Sort) return false;
      if (CreatedAt != other.CreatedAt) return false;
      if (UpdatedAt != other.UpdatedAt) return false;
      if(!hotelRoomTypes_.Equals(other.hotelRoomTypes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HotelId.Length != 0) hash ^= HotelId.GetHashCode();
      if (HotelCode.Length != 0) hash ^= HotelCode.GetHashCode();
      if (HotelName.Length != 0) hash ^= HotelName.GetHashCode();
      if (HotelNameEn.Length != 0) hash ^= HotelNameEn.GetHashCode();
      if (HotelAddress.Length != 0) hash ^= HotelAddress.GetHashCode();
      if (HotelAddressEn.Length != 0) hash ^= HotelAddressEn.GetHashCode();
      if (Country.Length != 0) hash ^= Country.GetHashCode();
      if (KeyWord.Length != 0) hash ^= KeyWord.GetHashCode();
      if (HotelEmail.Length != 0) hash ^= HotelEmail.GetHashCode();
      if (HotelTel.Length != 0) hash ^= HotelTel.GetHashCode();
      if (HotelLevel != 0) hash ^= HotelLevel.GetHashCode();
      if (HotelIntroduction.Length != 0) hash ^= HotelIntroduction.GetHashCode();
      if (HotelIntroductionEn.Length != 0) hash ^= HotelIntroductionEn.GetHashCode();
      if (BankInfo.Length != 0) hash ^= BankInfo.GetHashCode();
      if (BankInfoEn.Length != 0) hash ^= BankInfoEn.GetHashCode();
      if (Remark.Length != 0) hash ^= Remark.GetHashCode();
      if (RemarkEn.Length != 0) hash ^= RemarkEn.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      if (CreatedAt.Length != 0) hash ^= CreatedAt.GetHashCode();
      if (UpdatedAt.Length != 0) hash ^= UpdatedAt.GetHashCode();
      hash ^= hotelRoomTypes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HotelId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(HotelId);
      }
      if (HotelCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HotelCode);
      }
      if (HotelName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(HotelName);
      }
      if (HotelNameEn.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(HotelNameEn);
      }
      if (HotelAddress.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(HotelAddress);
      }
      if (HotelAddressEn.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(HotelAddressEn);
      }
      if (Country.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Country);
      }
      if (KeyWord.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(KeyWord);
      }
      if (HotelEmail.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(HotelEmail);
      }
      if (HotelTel.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(HotelTel);
      }
      if (HotelLevel != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(HotelLevel);
      }
      if (HotelIntroduction.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(HotelIntroduction);
      }
      if (HotelIntroductionEn.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(HotelIntroductionEn);
      }
      if (BankInfo.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(BankInfo);
      }
      if (BankInfoEn.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(BankInfoEn);
      }
      if (Remark.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Remark);
      }
      if (RemarkEn.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(RemarkEn);
      }
      if (Sort != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(Sort);
      }
      if (CreatedAt.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(CreatedAt);
      }
      if (UpdatedAt.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(UpdatedAt);
      }
      hotelRoomTypes_.WriteTo(output, _repeated_hotelRoomTypes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HotelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelId);
      }
      if (HotelCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelCode);
      }
      if (HotelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelName);
      }
      if (HotelNameEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelNameEn);
      }
      if (HotelAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelAddress);
      }
      if (HotelAddressEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelAddressEn);
      }
      if (Country.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
      }
      if (KeyWord.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KeyWord);
      }
      if (HotelEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelEmail);
      }
      if (HotelTel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelTel);
      }
      if (HotelLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HotelLevel);
      }
      if (HotelIntroduction.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelIntroduction);
      }
      if (HotelIntroductionEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelIntroductionEn);
      }
      if (BankInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BankInfo);
      }
      if (BankInfoEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BankInfoEn);
      }
      if (Remark.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Remark);
      }
      if (RemarkEn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RemarkEn);
      }
      if (Sort != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      if (CreatedAt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedAt);
      }
      if (UpdatedAt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UpdatedAt);
      }
      size += hotelRoomTypes_.CalculateSize(_repeated_hotelRoomTypes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HotelVM other) {
      if (other == null) {
        return;
      }
      if (other.HotelId.Length != 0) {
        HotelId = other.HotelId;
      }
      if (other.HotelCode.Length != 0) {
        HotelCode = other.HotelCode;
      }
      if (other.HotelName.Length != 0) {
        HotelName = other.HotelName;
      }
      if (other.HotelNameEn.Length != 0) {
        HotelNameEn = other.HotelNameEn;
      }
      if (other.HotelAddress.Length != 0) {
        HotelAddress = other.HotelAddress;
      }
      if (other.HotelAddressEn.Length != 0) {
        HotelAddressEn = other.HotelAddressEn;
      }
      if (other.Country.Length != 0) {
        Country = other.Country;
      }
      if (other.KeyWord.Length != 0) {
        KeyWord = other.KeyWord;
      }
      if (other.HotelEmail.Length != 0) {
        HotelEmail = other.HotelEmail;
      }
      if (other.HotelTel.Length != 0) {
        HotelTel = other.HotelTel;
      }
      if (other.HotelLevel != 0) {
        HotelLevel = other.HotelLevel;
      }
      if (other.HotelIntroduction.Length != 0) {
        HotelIntroduction = other.HotelIntroduction;
      }
      if (other.HotelIntroductionEn.Length != 0) {
        HotelIntroductionEn = other.HotelIntroductionEn;
      }
      if (other.BankInfo.Length != 0) {
        BankInfo = other.BankInfo;
      }
      if (other.BankInfoEn.Length != 0) {
        BankInfoEn = other.BankInfoEn;
      }
      if (other.Remark.Length != 0) {
        Remark = other.Remark;
      }
      if (other.RemarkEn.Length != 0) {
        RemarkEn = other.RemarkEn;
      }
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      if (other.CreatedAt.Length != 0) {
        CreatedAt = other.CreatedAt;
      }
      if (other.UpdatedAt.Length != 0) {
        UpdatedAt = other.UpdatedAt;
      }
      hotelRoomTypes_.Add(other.hotelRoomTypes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HotelId = input.ReadString();
            break;
          }
          case 18: {
            HotelCode = input.ReadString();
            break;
          }
          case 26: {
            HotelName = input.ReadString();
            break;
          }
          case 34: {
            HotelNameEn = input.ReadString();
            break;
          }
          case 42: {
            HotelAddress = input.ReadString();
            break;
          }
          case 50: {
            HotelAddressEn = input.ReadString();
            break;
          }
          case 58: {
            Country = input.ReadString();
            break;
          }
          case 66: {
            KeyWord = input.ReadString();
            break;
          }
          case 74: {
            HotelEmail = input.ReadString();
            break;
          }
          case 82: {
            HotelTel = input.ReadString();
            break;
          }
          case 88: {
            HotelLevel = input.ReadInt32();
            break;
          }
          case 98: {
            HotelIntroduction = input.ReadString();
            break;
          }
          case 106: {
            HotelIntroductionEn = input.ReadString();
            break;
          }
          case 114: {
            BankInfo = input.ReadString();
            break;
          }
          case 122: {
            BankInfoEn = input.ReadString();
            break;
          }
          case 130: {
            Remark = input.ReadString();
            break;
          }
          case 138: {
            RemarkEn = input.ReadString();
            break;
          }
          case 144: {
            Sort = input.ReadInt32();
            break;
          }
          case 154: {
            CreatedAt = input.ReadString();
            break;
          }
          case 162: {
            UpdatedAt = input.ReadString();
            break;
          }
          case 170: {
            hotelRoomTypes_.AddEntriesFrom(input, _repeated_hotelRoomTypes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HotelList : pb::IMessage<HotelList> {
    private static readonly pb::MessageParser<HotelList> _parser = new pb::MessageParser<HotelList>(() => new HotelList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HotelList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelList(HotelList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelList Clone() {
      return new HotelList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcMediaService.HotelVM> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcMediaService.HotelVM.Parser);
    private readonly pbc::RepeatedField<global::GrpcMediaService.HotelVM> listdata_ = new pbc::RepeatedField<global::GrpcMediaService.HotelVM>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcMediaService.HotelVM> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HotelList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HotelList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HotelList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HotelRoomTypeIdRequest : pb::IMessage<HotelRoomTypeIdRequest> {
    private static readonly pb::MessageParser<HotelRoomTypeIdRequest> _parser = new pb::MessageParser<HotelRoomTypeIdRequest>(() => new HotelRoomTypeIdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HotelRoomTypeIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelRoomTypeIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelRoomTypeIdRequest(HotelRoomTypeIdRequest other) : this() {
      hotelRoomTypeId_ = other.hotelRoomTypeId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelRoomTypeIdRequest Clone() {
      return new HotelRoomTypeIdRequest(this);
    }

    /// <summary>Field number for the "hotelRoomTypeId" field.</summary>
    public const int HotelRoomTypeIdFieldNumber = 1;
    private string hotelRoomTypeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelRoomTypeId {
      get { return hotelRoomTypeId_; }
      set {
        hotelRoomTypeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HotelRoomTypeIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HotelRoomTypeIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HotelRoomTypeId != other.HotelRoomTypeId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HotelRoomTypeId.Length != 0) hash ^= HotelRoomTypeId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HotelRoomTypeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(HotelRoomTypeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HotelRoomTypeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelRoomTypeId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HotelRoomTypeIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.HotelRoomTypeId.Length != 0) {
        HotelRoomTypeId = other.HotelRoomTypeId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HotelRoomTypeId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HotelRoomTypeStruct : pb::IMessage<HotelRoomTypeStruct> {
    private static readonly pb::MessageParser<HotelRoomTypeStruct> _parser = new pb::MessageParser<HotelRoomTypeStruct>(() => new HotelRoomTypeStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HotelRoomTypeStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelRoomTypeStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelRoomTypeStruct(HotelRoomTypeStruct other) : this() {
      hotelRoomTypeId_ = other.hotelRoomTypeId_;
      hotelId_ = other.hotelId_;
      typeName_ = other.typeName_;
      typeNameEn_ = other.typeNameEn_;
      bedType_ = other.bedType_;
      bedTypeEn_ = other.bedTypeEn_;
      maxCount_ = other.maxCount_;
      price_ = other.price_;
      tax_ = other.tax_;
      isBreakfast_ = other.isBreakfast_;
      isNet_ = other.isNet_;
      isUsed_ = other.isUsed_;
      createdAt_ = other.createdAt_;
      updatedAt_ = other.updatedAt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelRoomTypeStruct Clone() {
      return new HotelRoomTypeStruct(this);
    }

    /// <summary>Field number for the "HotelRoomTypeId" field.</summary>
    public const int HotelRoomTypeIdFieldNumber = 1;
    private string hotelRoomTypeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelRoomTypeId {
      get { return hotelRoomTypeId_; }
      set {
        hotelRoomTypeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HotelId" field.</summary>
    public const int HotelIdFieldNumber = 2;
    private string hotelId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelId {
      get { return hotelId_; }
      set {
        hotelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TypeName" field.</summary>
    public const int TypeNameFieldNumber = 3;
    private string typeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TypeName {
      get { return typeName_; }
      set {
        typeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TypeNameEn" field.</summary>
    public const int TypeNameEnFieldNumber = 4;
    private string typeNameEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TypeNameEn {
      get { return typeNameEn_; }
      set {
        typeNameEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BedType" field.</summary>
    public const int BedTypeFieldNumber = 5;
    private string bedType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BedType {
      get { return bedType_; }
      set {
        bedType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BedTypeEn" field.</summary>
    public const int BedTypeEnFieldNumber = 6;
    private string bedTypeEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BedTypeEn {
      get { return bedTypeEn_; }
      set {
        bedTypeEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MaxCount" field.</summary>
    public const int MaxCountFieldNumber = 7;
    private int maxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxCount {
      get { return maxCount_; }
      set {
        maxCount_ = value;
      }
    }

    /// <summary>Field number for the "Price" field.</summary>
    public const int PriceFieldNumber = 8;
    private string price_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Price {
      get { return price_; }
      set {
        price_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Tax" field.</summary>
    public const int TaxFieldNumber = 9;
    private string tax_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tax {
      get { return tax_; }
      set {
        tax_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsBreakfast" field.</summary>
    public const int IsBreakfastFieldNumber = 10;
    private bool isBreakfast_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBreakfast {
      get { return isBreakfast_; }
      set {
        isBreakfast_ = value;
      }
    }

    /// <summary>Field number for the "IsNet" field.</summary>
    public const int IsNetFieldNumber = 11;
    private bool isNet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsNet {
      get { return isNet_; }
      set {
        isNet_ = value;
      }
    }

    /// <summary>Field number for the "IsUsed" field.</summary>
    public const int IsUsedFieldNumber = 12;
    private bool isUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsUsed {
      get { return isUsed_; }
      set {
        isUsed_ = value;
      }
    }

    /// <summary>Field number for the "Created_at" field.</summary>
    public const int CreatedAtFieldNumber = 13;
    private string createdAt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Updated_at" field.</summary>
    public const int UpdatedAtFieldNumber = 14;
    private string updatedAt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpdatedAt {
      get { return updatedAt_; }
      set {
        updatedAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HotelRoomTypeStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HotelRoomTypeStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HotelRoomTypeId != other.HotelRoomTypeId) return false;
      if (HotelId != other.HotelId) return false;
      if (TypeName != other.TypeName) return false;
      if (TypeNameEn != other.TypeNameEn) return false;
      if (BedType != other.BedType) return false;
      if (BedTypeEn != other.BedTypeEn) return false;
      if (MaxCount != other.MaxCount) return false;
      if (Price != other.Price) return false;
      if (Tax != other.Tax) return false;
      if (IsBreakfast != other.IsBreakfast) return false;
      if (IsNet != other.IsNet) return false;
      if (IsUsed != other.IsUsed) return false;
      if (CreatedAt != other.CreatedAt) return false;
      if (UpdatedAt != other.UpdatedAt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HotelRoomTypeId.Length != 0) hash ^= HotelRoomTypeId.GetHashCode();
      if (HotelId.Length != 0) hash ^= HotelId.GetHashCode();
      if (TypeName.Length != 0) hash ^= TypeName.GetHashCode();
      if (TypeNameEn.Length != 0) hash ^= TypeNameEn.GetHashCode();
      if (BedType.Length != 0) hash ^= BedType.GetHashCode();
      if (BedTypeEn.Length != 0) hash ^= BedTypeEn.GetHashCode();
      if (MaxCount != 0) hash ^= MaxCount.GetHashCode();
      if (Price.Length != 0) hash ^= Price.GetHashCode();
      if (Tax.Length != 0) hash ^= Tax.GetHashCode();
      if (IsBreakfast != false) hash ^= IsBreakfast.GetHashCode();
      if (IsNet != false) hash ^= IsNet.GetHashCode();
      if (IsUsed != false) hash ^= IsUsed.GetHashCode();
      if (CreatedAt.Length != 0) hash ^= CreatedAt.GetHashCode();
      if (UpdatedAt.Length != 0) hash ^= UpdatedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HotelRoomTypeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(HotelRoomTypeId);
      }
      if (HotelId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HotelId);
      }
      if (TypeName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TypeName);
      }
      if (TypeNameEn.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TypeNameEn);
      }
      if (BedType.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(BedType);
      }
      if (BedTypeEn.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(BedTypeEn);
      }
      if (MaxCount != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MaxCount);
      }
      if (Price.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Price);
      }
      if (Tax.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Tax);
      }
      if (IsBreakfast != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsBreakfast);
      }
      if (IsNet != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsNet);
      }
      if (IsUsed != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsUsed);
      }
      if (CreatedAt.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(CreatedAt);
      }
      if (UpdatedAt.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(UpdatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HotelRoomTypeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelRoomTypeId);
      }
      if (HotelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelId);
      }
      if (TypeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeName);
      }
      if (TypeNameEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeNameEn);
      }
      if (BedType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BedType);
      }
      if (BedTypeEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BedTypeEn);
      }
      if (MaxCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxCount);
      }
      if (Price.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Price);
      }
      if (Tax.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tax);
      }
      if (IsBreakfast != false) {
        size += 1 + 1;
      }
      if (IsNet != false) {
        size += 1 + 1;
      }
      if (IsUsed != false) {
        size += 1 + 1;
      }
      if (CreatedAt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedAt);
      }
      if (UpdatedAt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UpdatedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HotelRoomTypeStruct other) {
      if (other == null) {
        return;
      }
      if (other.HotelRoomTypeId.Length != 0) {
        HotelRoomTypeId = other.HotelRoomTypeId;
      }
      if (other.HotelId.Length != 0) {
        HotelId = other.HotelId;
      }
      if (other.TypeName.Length != 0) {
        TypeName = other.TypeName;
      }
      if (other.TypeNameEn.Length != 0) {
        TypeNameEn = other.TypeNameEn;
      }
      if (other.BedType.Length != 0) {
        BedType = other.BedType;
      }
      if (other.BedTypeEn.Length != 0) {
        BedTypeEn = other.BedTypeEn;
      }
      if (other.MaxCount != 0) {
        MaxCount = other.MaxCount;
      }
      if (other.Price.Length != 0) {
        Price = other.Price;
      }
      if (other.Tax.Length != 0) {
        Tax = other.Tax;
      }
      if (other.IsBreakfast != false) {
        IsBreakfast = other.IsBreakfast;
      }
      if (other.IsNet != false) {
        IsNet = other.IsNet;
      }
      if (other.IsUsed != false) {
        IsUsed = other.IsUsed;
      }
      if (other.CreatedAt.Length != 0) {
        CreatedAt = other.CreatedAt;
      }
      if (other.UpdatedAt.Length != 0) {
        UpdatedAt = other.UpdatedAt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HotelRoomTypeId = input.ReadString();
            break;
          }
          case 18: {
            HotelId = input.ReadString();
            break;
          }
          case 26: {
            TypeName = input.ReadString();
            break;
          }
          case 34: {
            TypeNameEn = input.ReadString();
            break;
          }
          case 42: {
            BedType = input.ReadString();
            break;
          }
          case 50: {
            BedTypeEn = input.ReadString();
            break;
          }
          case 56: {
            MaxCount = input.ReadInt32();
            break;
          }
          case 66: {
            Price = input.ReadString();
            break;
          }
          case 74: {
            Tax = input.ReadString();
            break;
          }
          case 80: {
            IsBreakfast = input.ReadBool();
            break;
          }
          case 88: {
            IsNet = input.ReadBool();
            break;
          }
          case 96: {
            IsUsed = input.ReadBool();
            break;
          }
          case 106: {
            CreatedAt = input.ReadString();
            break;
          }
          case 114: {
            UpdatedAt = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HotelRoomTypeList : pb::IMessage<HotelRoomTypeList> {
    private static readonly pb::MessageParser<HotelRoomTypeList> _parser = new pb::MessageParser<HotelRoomTypeList>(() => new HotelRoomTypeList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HotelRoomTypeList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelRoomTypeList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelRoomTypeList(HotelRoomTypeList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelRoomTypeList Clone() {
      return new HotelRoomTypeList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcMediaService.HotelRoomTypeStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcMediaService.HotelRoomTypeStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcMediaService.HotelRoomTypeStruct> listdata_ = new pbc::RepeatedField<global::GrpcMediaService.HotelRoomTypeStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcMediaService.HotelRoomTypeStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HotelRoomTypeList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HotelRoomTypeList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HotelRoomTypeList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MemberIdRequest : pb::IMessage<MemberIdRequest> {
    private static readonly pb::MessageParser<MemberIdRequest> _parser = new pb::MessageParser<MemberIdRequest>(() => new MemberIdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MemberIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberIdRequest(MemberIdRequest other) : this() {
      memberId_ = other.memberId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberIdRequest Clone() {
      return new MemberIdRequest(this);
    }

    /// <summary>Field number for the "memberId" field.</summary>
    public const int MemberIdFieldNumber = 1;
    private string memberId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberId {
      get { return memberId_; }
      set {
        memberId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MemberIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MemberIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MemberId != other.MemberId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MemberId.Length != 0) hash ^= MemberId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MemberId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MemberId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MemberId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MemberIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.MemberId.Length != 0) {
        MemberId = other.MemberId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MemberId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HotelBookRecordStruct : pb::IMessage<HotelBookRecordStruct> {
    private static readonly pb::MessageParser<HotelBookRecordStruct> _parser = new pb::MessageParser<HotelBookRecordStruct>(() => new HotelBookRecordStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HotelBookRecordStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelBookRecordStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelBookRecordStruct(HotelBookRecordStruct other) : this() {
      id_ = other.id_;
      memberId_ = other.memberId_;
      memberCompany_ = other.memberCompany_;
      memberCompanyEn_ = other.memberCompanyEn_;
      hotelId_ = other.hotelId_;
      hotelRoomTypeId_ = other.hotelRoomTypeId_;
      bookTime_ = other.bookTime_;
      checkInTime_ = other.checkInTime_;
      checkOutTime_ = other.checkOutTime_;
      isCanceled_ = other.isCanceled_;
      isChecked_ = other.isChecked_;
      priceCount_ = other.priceCount_;
      remark_ = other.remark_;
      days_ = other.days_;
      arriveFlight_ = other.arriveFlight_;
      leaveFlight_ = other.leaveFlight_;
      isSmoke_ = other.isSmoke_;
      linkManFirstName_ = other.linkManFirstName_;
      linkManLastName_ = other.linkManLastName_;
      linkManTel_ = other.linkManTel_;
      linkManEmail_ = other.linkManEmail_;
      linkManTitle_ = other.linkManTitle_;
      linkManCountry_ = other.linkManCountry_;
      linkManCity_ = other.linkManCity_;
      linkManFax_ = other.linkManFax_;
      linkManIdCardType_ = other.linkManIdCardType_;
      linkManIdCardNumber_ = other.linkManIdCardNumber_;
      linkManCompany_ = other.linkManCompany_;
      linkManMobile_ = other.linkManMobile_;
      linkManBirth_ = other.linkManBirth_;
      otherName_ = other.otherName_;
      otherTitle_ = other.otherTitle_;
      otherEmail_ = other.otherEmail_;
      otherMobile_ = other.otherMobile_;
      otherCompany_ = other.otherCompany_;
      cardPerson_ = other.cardPerson_;
      cardType_ = other.cardType_;
      cardNumber_ = other.cardNumber_;
      cardDate_ = other.cardDate_;
      payer_ = other.payer_;
      payType_ = other.payType_;
      linkManEmail2_ = other.linkManEmail2_;
      createdAt_ = other.createdAt_;
      updatedAt_ = other.updatedAt_;
      isWebsite_ = other.isWebsite_;
      orderNumber_ = other.orderNumber_;
      memberEmail_ = other.memberEmail_;
      memberName_ = other.memberName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelBookRecordStruct Clone() {
      return new HotelBookRecordStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberId" field.</summary>
    public const int MemberIdFieldNumber = 2;
    private string memberId_ = "";
    /// <summary>
    ///会员Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberId {
      get { return memberId_; }
      set {
        memberId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberCompany" field.</summary>
    public const int MemberCompanyFieldNumber = 3;
    private string memberCompany_ = "";
    /// <summary>
    ///会员公司中文名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberCompany {
      get { return memberCompany_; }
      set {
        memberCompany_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberCompanyEn" field.</summary>
    public const int MemberCompanyEnFieldNumber = 4;
    private string memberCompanyEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberCompanyEn {
      get { return memberCompanyEn_; }
      set {
        memberCompanyEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HotelId" field.</summary>
    public const int HotelIdFieldNumber = 5;
    private string hotelId_ = "";
    /// <summary>
    ///酒店Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelId {
      get { return hotelId_; }
      set {
        hotelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HotelRoomTypeId" field.</summary>
    public const int HotelRoomTypeIdFieldNumber = 6;
    private string hotelRoomTypeId_ = "";
    /// <summary>
    ///酒店房间类型Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelRoomTypeId {
      get { return hotelRoomTypeId_; }
      set {
        hotelRoomTypeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BookTime" field.</summary>
    public const int BookTimeFieldNumber = 7;
    private string bookTime_ = "";
    /// <summary>
    ///预订时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BookTime {
      get { return bookTime_; }
      set {
        bookTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CheckInTime" field.</summary>
    public const int CheckInTimeFieldNumber = 8;
    private string checkInTime_ = "";
    /// <summary>
    ///入住时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CheckInTime {
      get { return checkInTime_; }
      set {
        checkInTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CheckOutTime" field.</summary>
    public const int CheckOutTimeFieldNumber = 9;
    private string checkOutTime_ = "";
    /// <summary>
    ///离开时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CheckOutTime {
      get { return checkOutTime_; }
      set {
        checkOutTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsCanceled" field.</summary>
    public const int IsCanceledFieldNumber = 10;
    private bool isCanceled_;
    /// <summary>
    ///是否取消预约
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCanceled {
      get { return isCanceled_; }
      set {
        isCanceled_ = value;
      }
    }

    /// <summary>Field number for the "IsChecked" field.</summary>
    public const int IsCheckedFieldNumber = 11;
    private int isChecked_;
    /// <summary>
    ///是否确认 0=>未确认;1=>待确认;2=>最终确认
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IsChecked {
      get { return isChecked_; }
      set {
        isChecked_ = value;
      }
    }

    /// <summary>Field number for the "PriceCount" field.</summary>
    public const int PriceCountFieldNumber = 12;
    private string priceCount_ = "";
    /// <summary>
    ///预订酒店价格
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceCount {
      get { return priceCount_; }
      set {
        priceCount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Remark" field.</summary>
    public const int RemarkFieldNumber = 13;
    private string remark_ = "";
    /// <summary>
    ///入住人要求
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remark {
      get { return remark_; }
      set {
        remark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Days" field.</summary>
    public const int DaysFieldNumber = 14;
    private int days_;
    /// <summary>
    ///入住天数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Days {
      get { return days_; }
      set {
        days_ = value;
      }
    }

    /// <summary>Field number for the "ArriveFlight" field.</summary>
    public const int ArriveFlightFieldNumber = 15;
    private string arriveFlight_ = "";
    /// <summary>
    ///到达航班
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ArriveFlight {
      get { return arriveFlight_; }
      set {
        arriveFlight_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LeaveFlight" field.</summary>
    public const int LeaveFlightFieldNumber = 16;
    private string leaveFlight_ = "";
    /// <summary>
    ///离开航班
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LeaveFlight {
      get { return leaveFlight_; }
      set {
        leaveFlight_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsSmoke" field.</summary>
    public const int IsSmokeFieldNumber = 17;
    private bool isSmoke_;
    /// <summary>
    ///是否吸烟
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSmoke {
      get { return isSmoke_; }
      set {
        isSmoke_ = value;
      }
    }

    /// <summary>Field number for the "LinkManFirstName" field.</summary>
    public const int LinkManFirstNameFieldNumber = 18;
    private string linkManFirstName_ = "";
    /// <summary>
    ///入住人FirstName
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManFirstName {
      get { return linkManFirstName_; }
      set {
        linkManFirstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkManLastName" field.</summary>
    public const int LinkManLastNameFieldNumber = 19;
    private string linkManLastName_ = "";
    /// <summary>
    ///入住人LastName
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManLastName {
      get { return linkManLastName_; }
      set {
        linkManLastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkManTel" field.</summary>
    public const int LinkManTelFieldNumber = 20;
    private string linkManTel_ = "";
    /// <summary>
    ///入住人电话
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManTel {
      get { return linkManTel_; }
      set {
        linkManTel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkManEmail" field.</summary>
    public const int LinkManEmailFieldNumber = 21;
    private string linkManEmail_ = "";
    /// <summary>
    ///入住人邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManEmail {
      get { return linkManEmail_; }
      set {
        linkManEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkManTitle" field.</summary>
    public const int LinkManTitleFieldNumber = 22;
    private string linkManTitle_ = "";
    /// <summary>
    ///入住人称谓
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManTitle {
      get { return linkManTitle_; }
      set {
        linkManTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkManCountry" field.</summary>
    public const int LinkManCountryFieldNumber = 23;
    private string linkManCountry_ = "";
    /// <summary>
    ///入住人国家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManCountry {
      get { return linkManCountry_; }
      set {
        linkManCountry_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkManCity" field.</summary>
    public const int LinkManCityFieldNumber = 24;
    private string linkManCity_ = "";
    /// <summary>
    ///入住人城市
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManCity {
      get { return linkManCity_; }
      set {
        linkManCity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkManFax" field.</summary>
    public const int LinkManFaxFieldNumber = 25;
    private string linkManFax_ = "";
    /// <summary>
    ///入住人传真
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManFax {
      get { return linkManFax_; }
      set {
        linkManFax_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkManIdCardType" field.</summary>
    public const int LinkManIdCardTypeFieldNumber = 26;
    private string linkManIdCardType_ = "";
    /// <summary>
    ///入住人证件类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManIdCardType {
      get { return linkManIdCardType_; }
      set {
        linkManIdCardType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkManIdCardNumber" field.</summary>
    public const int LinkManIdCardNumberFieldNumber = 27;
    private string linkManIdCardNumber_ = "";
    /// <summary>
    ///入住人证件号码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManIdCardNumber {
      get { return linkManIdCardNumber_; }
      set {
        linkManIdCardNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkManCompany" field.</summary>
    public const int LinkManCompanyFieldNumber = 28;
    private string linkManCompany_ = "";
    /// <summary>
    ///入住人公司
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManCompany {
      get { return linkManCompany_; }
      set {
        linkManCompany_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkManMobile" field.</summary>
    public const int LinkManMobileFieldNumber = 29;
    private string linkManMobile_ = "";
    /// <summary>
    ///入住人手机
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManMobile {
      get { return linkManMobile_; }
      set {
        linkManMobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkManBirth" field.</summary>
    public const int LinkManBirthFieldNumber = 30;
    private string linkManBirth_ = "";
    /// <summary>
    ///入住人出生日期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManBirth {
      get { return linkManBirth_; }
      set {
        linkManBirth_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OtherName" field.</summary>
    public const int OtherNameFieldNumber = 31;
    private string otherName_ = "";
    /// <summary>
    ///同住人姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OtherName {
      get { return otherName_; }
      set {
        otherName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OtherTitle" field.</summary>
    public const int OtherTitleFieldNumber = 32;
    private string otherTitle_ = "";
    /// <summary>
    ///同住人称谓
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OtherTitle {
      get { return otherTitle_; }
      set {
        otherTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OtherEmail" field.</summary>
    public const int OtherEmailFieldNumber = 33;
    private string otherEmail_ = "";
    /// <summary>
    ///同住人邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OtherEmail {
      get { return otherEmail_; }
      set {
        otherEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OtherMobile" field.</summary>
    public const int OtherMobileFieldNumber = 34;
    private string otherMobile_ = "";
    /// <summary>
    ///同住人手机
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OtherMobile {
      get { return otherMobile_; }
      set {
        otherMobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OtherCompany" field.</summary>
    public const int OtherCompanyFieldNumber = 35;
    private string otherCompany_ = "";
    /// <summary>
    ///同住人公司
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OtherCompany {
      get { return otherCompany_; }
      set {
        otherCompany_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CardPerson" field.</summary>
    public const int CardPersonFieldNumber = 36;
    private string cardPerson_ = "";
    /// <summary>
    ///持卡人姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CardPerson {
      get { return cardPerson_; }
      set {
        cardPerson_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CardType" field.</summary>
    public const int CardTypeFieldNumber = 37;
    private string cardType_ = "";
    /// <summary>
    ///卡类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CardType {
      get { return cardType_; }
      set {
        cardType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CardNumber" field.</summary>
    public const int CardNumberFieldNumber = 38;
    private string cardNumber_ = "";
    /// <summary>
    ///卡号码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CardNumber {
      get { return cardNumber_; }
      set {
        cardNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CardDate" field.</summary>
    public const int CardDateFieldNumber = 39;
    private string cardDate_ = "";
    /// <summary>
    ///卡有效期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CardDate {
      get { return cardDate_; }
      set {
        cardDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Payer" field.</summary>
    public const int PayerFieldNumber = 40;
    private string payer_ = "";
    /// <summary>
    ///付款方：自己支付还是主办方支付
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Payer {
      get { return payer_; }
      set {
        payer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PayType" field.</summary>
    public const int PayTypeFieldNumber = 41;
    private string payType_ = "";
    /// <summary>
    ///付款方式
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PayType {
      get { return payType_; }
      set {
        payType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkManEmail2" field.</summary>
    public const int LinkManEmail2FieldNumber = 42;
    private string linkManEmail2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManEmail2 {
      get { return linkManEmail2_; }
      set {
        linkManEmail2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Created_at" field.</summary>
    public const int CreatedAtFieldNumber = 43;
    private string createdAt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Updated_at" field.</summary>
    public const int UpdatedAtFieldNumber = 44;
    private string updatedAt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpdatedAt {
      get { return updatedAt_; }
      set {
        updatedAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsWebsite" field.</summary>
    public const int IsWebsiteFieldNumber = 45;
    private bool isWebsite_;
    /// <summary>
    ///是否从网站页面订购
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsWebsite {
      get { return isWebsite_; }
      set {
        isWebsite_ = value;
      }
    }

    /// <summary>Field number for the "OrderNumber" field.</summary>
    public const int OrderNumberFieldNumber = 46;
    private string orderNumber_ = "";
    /// <summary>
    ///订单号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderNumber {
      get { return orderNumber_; }
      set {
        orderNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberEmail" field.</summary>
    public const int MemberEmailFieldNumber = 47;
    private string memberEmail_ = "";
    /// <summary>
    ///会员邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberEmail {
      get { return memberEmail_; }
      set {
        memberEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberName" field.</summary>
    public const int MemberNameFieldNumber = 48;
    private string memberName_ = "";
    /// <summary>
    ///会员姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberName {
      get { return memberName_; }
      set {
        memberName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HotelBookRecordStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HotelBookRecordStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (MemberId != other.MemberId) return false;
      if (MemberCompany != other.MemberCompany) return false;
      if (MemberCompanyEn != other.MemberCompanyEn) return false;
      if (HotelId != other.HotelId) return false;
      if (HotelRoomTypeId != other.HotelRoomTypeId) return false;
      if (BookTime != other.BookTime) return false;
      if (CheckInTime != other.CheckInTime) return false;
      if (CheckOutTime != other.CheckOutTime) return false;
      if (IsCanceled != other.IsCanceled) return false;
      if (IsChecked != other.IsChecked) return false;
      if (PriceCount != other.PriceCount) return false;
      if (Remark != other.Remark) return false;
      if (Days != other.Days) return false;
      if (ArriveFlight != other.ArriveFlight) return false;
      if (LeaveFlight != other.LeaveFlight) return false;
      if (IsSmoke != other.IsSmoke) return false;
      if (LinkManFirstName != other.LinkManFirstName) return false;
      if (LinkManLastName != other.LinkManLastName) return false;
      if (LinkManTel != other.LinkManTel) return false;
      if (LinkManEmail != other.LinkManEmail) return false;
      if (LinkManTitle != other.LinkManTitle) return false;
      if (LinkManCountry != other.LinkManCountry) return false;
      if (LinkManCity != other.LinkManCity) return false;
      if (LinkManFax != other.LinkManFax) return false;
      if (LinkManIdCardType != other.LinkManIdCardType) return false;
      if (LinkManIdCardNumber != other.LinkManIdCardNumber) return false;
      if (LinkManCompany != other.LinkManCompany) return false;
      if (LinkManMobile != other.LinkManMobile) return false;
      if (LinkManBirth != other.LinkManBirth) return false;
      if (OtherName != other.OtherName) return false;
      if (OtherTitle != other.OtherTitle) return false;
      if (OtherEmail != other.OtherEmail) return false;
      if (OtherMobile != other.OtherMobile) return false;
      if (OtherCompany != other.OtherCompany) return false;
      if (CardPerson != other.CardPerson) return false;
      if (CardType != other.CardType) return false;
      if (CardNumber != other.CardNumber) return false;
      if (CardDate != other.CardDate) return false;
      if (Payer != other.Payer) return false;
      if (PayType != other.PayType) return false;
      if (LinkManEmail2 != other.LinkManEmail2) return false;
      if (CreatedAt != other.CreatedAt) return false;
      if (UpdatedAt != other.UpdatedAt) return false;
      if (IsWebsite != other.IsWebsite) return false;
      if (OrderNumber != other.OrderNumber) return false;
      if (MemberEmail != other.MemberEmail) return false;
      if (MemberName != other.MemberName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (MemberId.Length != 0) hash ^= MemberId.GetHashCode();
      if (MemberCompany.Length != 0) hash ^= MemberCompany.GetHashCode();
      if (MemberCompanyEn.Length != 0) hash ^= MemberCompanyEn.GetHashCode();
      if (HotelId.Length != 0) hash ^= HotelId.GetHashCode();
      if (HotelRoomTypeId.Length != 0) hash ^= HotelRoomTypeId.GetHashCode();
      if (BookTime.Length != 0) hash ^= BookTime.GetHashCode();
      if (CheckInTime.Length != 0) hash ^= CheckInTime.GetHashCode();
      if (CheckOutTime.Length != 0) hash ^= CheckOutTime.GetHashCode();
      if (IsCanceled != false) hash ^= IsCanceled.GetHashCode();
      if (IsChecked != 0) hash ^= IsChecked.GetHashCode();
      if (PriceCount.Length != 0) hash ^= PriceCount.GetHashCode();
      if (Remark.Length != 0) hash ^= Remark.GetHashCode();
      if (Days != 0) hash ^= Days.GetHashCode();
      if (ArriveFlight.Length != 0) hash ^= ArriveFlight.GetHashCode();
      if (LeaveFlight.Length != 0) hash ^= LeaveFlight.GetHashCode();
      if (IsSmoke != false) hash ^= IsSmoke.GetHashCode();
      if (LinkManFirstName.Length != 0) hash ^= LinkManFirstName.GetHashCode();
      if (LinkManLastName.Length != 0) hash ^= LinkManLastName.GetHashCode();
      if (LinkManTel.Length != 0) hash ^= LinkManTel.GetHashCode();
      if (LinkManEmail.Length != 0) hash ^= LinkManEmail.GetHashCode();
      if (LinkManTitle.Length != 0) hash ^= LinkManTitle.GetHashCode();
      if (LinkManCountry.Length != 0) hash ^= LinkManCountry.GetHashCode();
      if (LinkManCity.Length != 0) hash ^= LinkManCity.GetHashCode();
      if (LinkManFax.Length != 0) hash ^= LinkManFax.GetHashCode();
      if (LinkManIdCardType.Length != 0) hash ^= LinkManIdCardType.GetHashCode();
      if (LinkManIdCardNumber.Length != 0) hash ^= LinkManIdCardNumber.GetHashCode();
      if (LinkManCompany.Length != 0) hash ^= LinkManCompany.GetHashCode();
      if (LinkManMobile.Length != 0) hash ^= LinkManMobile.GetHashCode();
      if (LinkManBirth.Length != 0) hash ^= LinkManBirth.GetHashCode();
      if (OtherName.Length != 0) hash ^= OtherName.GetHashCode();
      if (OtherTitle.Length != 0) hash ^= OtherTitle.GetHashCode();
      if (OtherEmail.Length != 0) hash ^= OtherEmail.GetHashCode();
      if (OtherMobile.Length != 0) hash ^= OtherMobile.GetHashCode();
      if (OtherCompany.Length != 0) hash ^= OtherCompany.GetHashCode();
      if (CardPerson.Length != 0) hash ^= CardPerson.GetHashCode();
      if (CardType.Length != 0) hash ^= CardType.GetHashCode();
      if (CardNumber.Length != 0) hash ^= CardNumber.GetHashCode();
      if (CardDate.Length != 0) hash ^= CardDate.GetHashCode();
      if (Payer.Length != 0) hash ^= Payer.GetHashCode();
      if (PayType.Length != 0) hash ^= PayType.GetHashCode();
      if (LinkManEmail2.Length != 0) hash ^= LinkManEmail2.GetHashCode();
      if (CreatedAt.Length != 0) hash ^= CreatedAt.GetHashCode();
      if (UpdatedAt.Length != 0) hash ^= UpdatedAt.GetHashCode();
      if (IsWebsite != false) hash ^= IsWebsite.GetHashCode();
      if (OrderNumber.Length != 0) hash ^= OrderNumber.GetHashCode();
      if (MemberEmail.Length != 0) hash ^= MemberEmail.GetHashCode();
      if (MemberName.Length != 0) hash ^= MemberName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (MemberId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MemberId);
      }
      if (MemberCompany.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MemberCompany);
      }
      if (MemberCompanyEn.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MemberCompanyEn);
      }
      if (HotelId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(HotelId);
      }
      if (HotelRoomTypeId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(HotelRoomTypeId);
      }
      if (BookTime.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(BookTime);
      }
      if (CheckInTime.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CheckInTime);
      }
      if (CheckOutTime.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CheckOutTime);
      }
      if (IsCanceled != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsCanceled);
      }
      if (IsChecked != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(IsChecked);
      }
      if (PriceCount.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(PriceCount);
      }
      if (Remark.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Remark);
      }
      if (Days != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Days);
      }
      if (ArriveFlight.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(ArriveFlight);
      }
      if (LeaveFlight.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(LeaveFlight);
      }
      if (IsSmoke != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(IsSmoke);
      }
      if (LinkManFirstName.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(LinkManFirstName);
      }
      if (LinkManLastName.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(LinkManLastName);
      }
      if (LinkManTel.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(LinkManTel);
      }
      if (LinkManEmail.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(LinkManEmail);
      }
      if (LinkManTitle.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(LinkManTitle);
      }
      if (LinkManCountry.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(LinkManCountry);
      }
      if (LinkManCity.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(LinkManCity);
      }
      if (LinkManFax.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(LinkManFax);
      }
      if (LinkManIdCardType.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(LinkManIdCardType);
      }
      if (LinkManIdCardNumber.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(LinkManIdCardNumber);
      }
      if (LinkManCompany.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(LinkManCompany);
      }
      if (LinkManMobile.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(LinkManMobile);
      }
      if (LinkManBirth.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(LinkManBirth);
      }
      if (OtherName.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(OtherName);
      }
      if (OtherTitle.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(OtherTitle);
      }
      if (OtherEmail.Length != 0) {
        output.WriteRawTag(138, 2);
        output.WriteString(OtherEmail);
      }
      if (OtherMobile.Length != 0) {
        output.WriteRawTag(146, 2);
        output.WriteString(OtherMobile);
      }
      if (OtherCompany.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(OtherCompany);
      }
      if (CardPerson.Length != 0) {
        output.WriteRawTag(162, 2);
        output.WriteString(CardPerson);
      }
      if (CardType.Length != 0) {
        output.WriteRawTag(170, 2);
        output.WriteString(CardType);
      }
      if (CardNumber.Length != 0) {
        output.WriteRawTag(178, 2);
        output.WriteString(CardNumber);
      }
      if (CardDate.Length != 0) {
        output.WriteRawTag(186, 2);
        output.WriteString(CardDate);
      }
      if (Payer.Length != 0) {
        output.WriteRawTag(194, 2);
        output.WriteString(Payer);
      }
      if (PayType.Length != 0) {
        output.WriteRawTag(202, 2);
        output.WriteString(PayType);
      }
      if (LinkManEmail2.Length != 0) {
        output.WriteRawTag(210, 2);
        output.WriteString(LinkManEmail2);
      }
      if (CreatedAt.Length != 0) {
        output.WriteRawTag(218, 2);
        output.WriteString(CreatedAt);
      }
      if (UpdatedAt.Length != 0) {
        output.WriteRawTag(226, 2);
        output.WriteString(UpdatedAt);
      }
      if (IsWebsite != false) {
        output.WriteRawTag(232, 2);
        output.WriteBool(IsWebsite);
      }
      if (OrderNumber.Length != 0) {
        output.WriteRawTag(242, 2);
        output.WriteString(OrderNumber);
      }
      if (MemberEmail.Length != 0) {
        output.WriteRawTag(250, 2);
        output.WriteString(MemberEmail);
      }
      if (MemberName.Length != 0) {
        output.WriteRawTag(130, 3);
        output.WriteString(MemberName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (MemberId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberId);
      }
      if (MemberCompany.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberCompany);
      }
      if (MemberCompanyEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberCompanyEn);
      }
      if (HotelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelId);
      }
      if (HotelRoomTypeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelRoomTypeId);
      }
      if (BookTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BookTime);
      }
      if (CheckInTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CheckInTime);
      }
      if (CheckOutTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CheckOutTime);
      }
      if (IsCanceled != false) {
        size += 1 + 1;
      }
      if (IsChecked != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsChecked);
      }
      if (PriceCount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceCount);
      }
      if (Remark.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Remark);
      }
      if (Days != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Days);
      }
      if (ArriveFlight.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ArriveFlight);
      }
      if (LeaveFlight.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LeaveFlight);
      }
      if (IsSmoke != false) {
        size += 2 + 1;
      }
      if (LinkManFirstName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManFirstName);
      }
      if (LinkManLastName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManLastName);
      }
      if (LinkManTel.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManTel);
      }
      if (LinkManEmail.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManEmail);
      }
      if (LinkManTitle.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManTitle);
      }
      if (LinkManCountry.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManCountry);
      }
      if (LinkManCity.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManCity);
      }
      if (LinkManFax.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManFax);
      }
      if (LinkManIdCardType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManIdCardType);
      }
      if (LinkManIdCardNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManIdCardNumber);
      }
      if (LinkManCompany.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManCompany);
      }
      if (LinkManMobile.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManMobile);
      }
      if (LinkManBirth.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManBirth);
      }
      if (OtherName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OtherName);
      }
      if (OtherTitle.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OtherTitle);
      }
      if (OtherEmail.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OtherEmail);
      }
      if (OtherMobile.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OtherMobile);
      }
      if (OtherCompany.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OtherCompany);
      }
      if (CardPerson.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CardPerson);
      }
      if (CardType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CardType);
      }
      if (CardNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CardNumber);
      }
      if (CardDate.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CardDate);
      }
      if (Payer.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Payer);
      }
      if (PayType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PayType);
      }
      if (LinkManEmail2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManEmail2);
      }
      if (CreatedAt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedAt);
      }
      if (UpdatedAt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UpdatedAt);
      }
      if (IsWebsite != false) {
        size += 2 + 1;
      }
      if (OrderNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OrderNumber);
      }
      if (MemberEmail.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemberEmail);
      }
      if (MemberName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemberName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HotelBookRecordStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.MemberId.Length != 0) {
        MemberId = other.MemberId;
      }
      if (other.MemberCompany.Length != 0) {
        MemberCompany = other.MemberCompany;
      }
      if (other.MemberCompanyEn.Length != 0) {
        MemberCompanyEn = other.MemberCompanyEn;
      }
      if (other.HotelId.Length != 0) {
        HotelId = other.HotelId;
      }
      if (other.HotelRoomTypeId.Length != 0) {
        HotelRoomTypeId = other.HotelRoomTypeId;
      }
      if (other.BookTime.Length != 0) {
        BookTime = other.BookTime;
      }
      if (other.CheckInTime.Length != 0) {
        CheckInTime = other.CheckInTime;
      }
      if (other.CheckOutTime.Length != 0) {
        CheckOutTime = other.CheckOutTime;
      }
      if (other.IsCanceled != false) {
        IsCanceled = other.IsCanceled;
      }
      if (other.IsChecked != 0) {
        IsChecked = other.IsChecked;
      }
      if (other.PriceCount.Length != 0) {
        PriceCount = other.PriceCount;
      }
      if (other.Remark.Length != 0) {
        Remark = other.Remark;
      }
      if (other.Days != 0) {
        Days = other.Days;
      }
      if (other.ArriveFlight.Length != 0) {
        ArriveFlight = other.ArriveFlight;
      }
      if (other.LeaveFlight.Length != 0) {
        LeaveFlight = other.LeaveFlight;
      }
      if (other.IsSmoke != false) {
        IsSmoke = other.IsSmoke;
      }
      if (other.LinkManFirstName.Length != 0) {
        LinkManFirstName = other.LinkManFirstName;
      }
      if (other.LinkManLastName.Length != 0) {
        LinkManLastName = other.LinkManLastName;
      }
      if (other.LinkManTel.Length != 0) {
        LinkManTel = other.LinkManTel;
      }
      if (other.LinkManEmail.Length != 0) {
        LinkManEmail = other.LinkManEmail;
      }
      if (other.LinkManTitle.Length != 0) {
        LinkManTitle = other.LinkManTitle;
      }
      if (other.LinkManCountry.Length != 0) {
        LinkManCountry = other.LinkManCountry;
      }
      if (other.LinkManCity.Length != 0) {
        LinkManCity = other.LinkManCity;
      }
      if (other.LinkManFax.Length != 0) {
        LinkManFax = other.LinkManFax;
      }
      if (other.LinkManIdCardType.Length != 0) {
        LinkManIdCardType = other.LinkManIdCardType;
      }
      if (other.LinkManIdCardNumber.Length != 0) {
        LinkManIdCardNumber = other.LinkManIdCardNumber;
      }
      if (other.LinkManCompany.Length != 0) {
        LinkManCompany = other.LinkManCompany;
      }
      if (other.LinkManMobile.Length != 0) {
        LinkManMobile = other.LinkManMobile;
      }
      if (other.LinkManBirth.Length != 0) {
        LinkManBirth = other.LinkManBirth;
      }
      if (other.OtherName.Length != 0) {
        OtherName = other.OtherName;
      }
      if (other.OtherTitle.Length != 0) {
        OtherTitle = other.OtherTitle;
      }
      if (other.OtherEmail.Length != 0) {
        OtherEmail = other.OtherEmail;
      }
      if (other.OtherMobile.Length != 0) {
        OtherMobile = other.OtherMobile;
      }
      if (other.OtherCompany.Length != 0) {
        OtherCompany = other.OtherCompany;
      }
      if (other.CardPerson.Length != 0) {
        CardPerson = other.CardPerson;
      }
      if (other.CardType.Length != 0) {
        CardType = other.CardType;
      }
      if (other.CardNumber.Length != 0) {
        CardNumber = other.CardNumber;
      }
      if (other.CardDate.Length != 0) {
        CardDate = other.CardDate;
      }
      if (other.Payer.Length != 0) {
        Payer = other.Payer;
      }
      if (other.PayType.Length != 0) {
        PayType = other.PayType;
      }
      if (other.LinkManEmail2.Length != 0) {
        LinkManEmail2 = other.LinkManEmail2;
      }
      if (other.CreatedAt.Length != 0) {
        CreatedAt = other.CreatedAt;
      }
      if (other.UpdatedAt.Length != 0) {
        UpdatedAt = other.UpdatedAt;
      }
      if (other.IsWebsite != false) {
        IsWebsite = other.IsWebsite;
      }
      if (other.OrderNumber.Length != 0) {
        OrderNumber = other.OrderNumber;
      }
      if (other.MemberEmail.Length != 0) {
        MemberEmail = other.MemberEmail;
      }
      if (other.MemberName.Length != 0) {
        MemberName = other.MemberName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            MemberId = input.ReadString();
            break;
          }
          case 26: {
            MemberCompany = input.ReadString();
            break;
          }
          case 34: {
            MemberCompanyEn = input.ReadString();
            break;
          }
          case 42: {
            HotelId = input.ReadString();
            break;
          }
          case 50: {
            HotelRoomTypeId = input.ReadString();
            break;
          }
          case 58: {
            BookTime = input.ReadString();
            break;
          }
          case 66: {
            CheckInTime = input.ReadString();
            break;
          }
          case 74: {
            CheckOutTime = input.ReadString();
            break;
          }
          case 80: {
            IsCanceled = input.ReadBool();
            break;
          }
          case 88: {
            IsChecked = input.ReadInt32();
            break;
          }
          case 98: {
            PriceCount = input.ReadString();
            break;
          }
          case 106: {
            Remark = input.ReadString();
            break;
          }
          case 112: {
            Days = input.ReadInt32();
            break;
          }
          case 122: {
            ArriveFlight = input.ReadString();
            break;
          }
          case 130: {
            LeaveFlight = input.ReadString();
            break;
          }
          case 136: {
            IsSmoke = input.ReadBool();
            break;
          }
          case 146: {
            LinkManFirstName = input.ReadString();
            break;
          }
          case 154: {
            LinkManLastName = input.ReadString();
            break;
          }
          case 162: {
            LinkManTel = input.ReadString();
            break;
          }
          case 170: {
            LinkManEmail = input.ReadString();
            break;
          }
          case 178: {
            LinkManTitle = input.ReadString();
            break;
          }
          case 186: {
            LinkManCountry = input.ReadString();
            break;
          }
          case 194: {
            LinkManCity = input.ReadString();
            break;
          }
          case 202: {
            LinkManFax = input.ReadString();
            break;
          }
          case 210: {
            LinkManIdCardType = input.ReadString();
            break;
          }
          case 218: {
            LinkManIdCardNumber = input.ReadString();
            break;
          }
          case 226: {
            LinkManCompany = input.ReadString();
            break;
          }
          case 234: {
            LinkManMobile = input.ReadString();
            break;
          }
          case 242: {
            LinkManBirth = input.ReadString();
            break;
          }
          case 250: {
            OtherName = input.ReadString();
            break;
          }
          case 258: {
            OtherTitle = input.ReadString();
            break;
          }
          case 266: {
            OtherEmail = input.ReadString();
            break;
          }
          case 274: {
            OtherMobile = input.ReadString();
            break;
          }
          case 282: {
            OtherCompany = input.ReadString();
            break;
          }
          case 290: {
            CardPerson = input.ReadString();
            break;
          }
          case 298: {
            CardType = input.ReadString();
            break;
          }
          case 306: {
            CardNumber = input.ReadString();
            break;
          }
          case 314: {
            CardDate = input.ReadString();
            break;
          }
          case 322: {
            Payer = input.ReadString();
            break;
          }
          case 330: {
            PayType = input.ReadString();
            break;
          }
          case 338: {
            LinkManEmail2 = input.ReadString();
            break;
          }
          case 346: {
            CreatedAt = input.ReadString();
            break;
          }
          case 354: {
            UpdatedAt = input.ReadString();
            break;
          }
          case 360: {
            IsWebsite = input.ReadBool();
            break;
          }
          case 370: {
            OrderNumber = input.ReadString();
            break;
          }
          case 378: {
            MemberEmail = input.ReadString();
            break;
          }
          case 386: {
            MemberName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HotelBookRecordStructVM : pb::IMessage<HotelBookRecordStructVM> {
    private static readonly pb::MessageParser<HotelBookRecordStructVM> _parser = new pb::MessageParser<HotelBookRecordStructVM>(() => new HotelBookRecordStructVM());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HotelBookRecordStructVM> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelBookRecordStructVM() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelBookRecordStructVM(HotelBookRecordStructVM other) : this() {
      id_ = other.id_;
      memberId_ = other.memberId_;
      memberCompany_ = other.memberCompany_;
      memberCompanyEn_ = other.memberCompanyEn_;
      hotelId_ = other.hotelId_;
      hotelRoomTypeId_ = other.hotelRoomTypeId_;
      bookTime_ = other.bookTime_;
      checkInTime_ = other.checkInTime_;
      checkOutTime_ = other.checkOutTime_;
      isCanceled_ = other.isCanceled_;
      isChecked_ = other.isChecked_;
      priceCount_ = other.priceCount_;
      remark_ = other.remark_;
      days_ = other.days_;
      arriveFlight_ = other.arriveFlight_;
      leaveFlight_ = other.leaveFlight_;
      isSmoke_ = other.isSmoke_;
      linkManFirstName_ = other.linkManFirstName_;
      linkManLastName_ = other.linkManLastName_;
      linkManTel_ = other.linkManTel_;
      linkManEmail_ = other.linkManEmail_;
      linkManTitle_ = other.linkManTitle_;
      linkManCountry_ = other.linkManCountry_;
      linkManCity_ = other.linkManCity_;
      linkManFax_ = other.linkManFax_;
      linkManIdCardType_ = other.linkManIdCardType_;
      linkManIdCardNumber_ = other.linkManIdCardNumber_;
      linkManCompany_ = other.linkManCompany_;
      linkManMobile_ = other.linkManMobile_;
      linkManBirth_ = other.linkManBirth_;
      otherName_ = other.otherName_;
      otherTitle_ = other.otherTitle_;
      otherEmail_ = other.otherEmail_;
      otherMobile_ = other.otherMobile_;
      otherCompany_ = other.otherCompany_;
      cardPerson_ = other.cardPerson_;
      cardType_ = other.cardType_;
      cardNumber_ = other.cardNumber_;
      cardDate_ = other.cardDate_;
      payer_ = other.payer_;
      payType_ = other.payType_;
      linkManEmail2_ = other.linkManEmail2_;
      createdAt_ = other.createdAt_;
      updatedAt_ = other.updatedAt_;
      isWebsite_ = other.isWebsite_;
      HotelItem = other.hotelItem_ != null ? other.HotelItem.Clone() : null;
      HotelRoomTypeItem = other.hotelRoomTypeItem_ != null ? other.HotelRoomTypeItem.Clone() : null;
      orderNumber_ = other.orderNumber_;
      memberEmail_ = other.memberEmail_;
      memberName_ = other.memberName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelBookRecordStructVM Clone() {
      return new HotelBookRecordStructVM(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberId" field.</summary>
    public const int MemberIdFieldNumber = 2;
    private string memberId_ = "";
    /// <summary>
    ///会员Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberId {
      get { return memberId_; }
      set {
        memberId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberCompany" field.</summary>
    public const int MemberCompanyFieldNumber = 3;
    private string memberCompany_ = "";
    /// <summary>
    ///会员公司中文名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberCompany {
      get { return memberCompany_; }
      set {
        memberCompany_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberCompanyEn" field.</summary>
    public const int MemberCompanyEnFieldNumber = 4;
    private string memberCompanyEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberCompanyEn {
      get { return memberCompanyEn_; }
      set {
        memberCompanyEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HotelId" field.</summary>
    public const int HotelIdFieldNumber = 5;
    private string hotelId_ = "";
    /// <summary>
    ///酒店Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelId {
      get { return hotelId_; }
      set {
        hotelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HotelRoomTypeId" field.</summary>
    public const int HotelRoomTypeIdFieldNumber = 6;
    private string hotelRoomTypeId_ = "";
    /// <summary>
    ///酒店房间类型Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelRoomTypeId {
      get { return hotelRoomTypeId_; }
      set {
        hotelRoomTypeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BookTime" field.</summary>
    public const int BookTimeFieldNumber = 7;
    private string bookTime_ = "";
    /// <summary>
    ///预订时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BookTime {
      get { return bookTime_; }
      set {
        bookTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CheckInTime" field.</summary>
    public const int CheckInTimeFieldNumber = 8;
    private string checkInTime_ = "";
    /// <summary>
    ///入住时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CheckInTime {
      get { return checkInTime_; }
      set {
        checkInTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CheckOutTime" field.</summary>
    public const int CheckOutTimeFieldNumber = 9;
    private string checkOutTime_ = "";
    /// <summary>
    ///离开时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CheckOutTime {
      get { return checkOutTime_; }
      set {
        checkOutTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsCanceled" field.</summary>
    public const int IsCanceledFieldNumber = 10;
    private bool isCanceled_;
    /// <summary>
    ///是否取消预约
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCanceled {
      get { return isCanceled_; }
      set {
        isCanceled_ = value;
      }
    }

    /// <summary>Field number for the "IsChecked" field.</summary>
    public const int IsCheckedFieldNumber = 11;
    private int isChecked_;
    /// <summary>
    ///是否确认 0=>未确认;1=>待确认;2=>最终确认
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IsChecked {
      get { return isChecked_; }
      set {
        isChecked_ = value;
      }
    }

    /// <summary>Field number for the "PriceCount" field.</summary>
    public const int PriceCountFieldNumber = 12;
    private string priceCount_ = "";
    /// <summary>
    ///预订酒店价格
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceCount {
      get { return priceCount_; }
      set {
        priceCount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Remark" field.</summary>
    public const int RemarkFieldNumber = 13;
    private string remark_ = "";
    /// <summary>
    ///入住人要求
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remark {
      get { return remark_; }
      set {
        remark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Days" field.</summary>
    public const int DaysFieldNumber = 14;
    private int days_;
    /// <summary>
    ///入住天数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Days {
      get { return days_; }
      set {
        days_ = value;
      }
    }

    /// <summary>Field number for the "ArriveFlight" field.</summary>
    public const int ArriveFlightFieldNumber = 15;
    private string arriveFlight_ = "";
    /// <summary>
    ///到达航班
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ArriveFlight {
      get { return arriveFlight_; }
      set {
        arriveFlight_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LeaveFlight" field.</summary>
    public const int LeaveFlightFieldNumber = 16;
    private string leaveFlight_ = "";
    /// <summary>
    ///离开航班
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LeaveFlight {
      get { return leaveFlight_; }
      set {
        leaveFlight_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsSmoke" field.</summary>
    public const int IsSmokeFieldNumber = 17;
    private bool isSmoke_;
    /// <summary>
    ///是否吸烟
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSmoke {
      get { return isSmoke_; }
      set {
        isSmoke_ = value;
      }
    }

    /// <summary>Field number for the "LinkManFirstName" field.</summary>
    public const int LinkManFirstNameFieldNumber = 18;
    private string linkManFirstName_ = "";
    /// <summary>
    ///入住人FirstName
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManFirstName {
      get { return linkManFirstName_; }
      set {
        linkManFirstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkManLastName" field.</summary>
    public const int LinkManLastNameFieldNumber = 19;
    private string linkManLastName_ = "";
    /// <summary>
    ///入住人LastName
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManLastName {
      get { return linkManLastName_; }
      set {
        linkManLastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkManTel" field.</summary>
    public const int LinkManTelFieldNumber = 20;
    private string linkManTel_ = "";
    /// <summary>
    ///入住人电话
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManTel {
      get { return linkManTel_; }
      set {
        linkManTel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkManEmail" field.</summary>
    public const int LinkManEmailFieldNumber = 21;
    private string linkManEmail_ = "";
    /// <summary>
    ///入住人邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManEmail {
      get { return linkManEmail_; }
      set {
        linkManEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkManTitle" field.</summary>
    public const int LinkManTitleFieldNumber = 22;
    private string linkManTitle_ = "";
    /// <summary>
    ///入住人称谓
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManTitle {
      get { return linkManTitle_; }
      set {
        linkManTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkManCountry" field.</summary>
    public const int LinkManCountryFieldNumber = 23;
    private string linkManCountry_ = "";
    /// <summary>
    ///入住人国家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManCountry {
      get { return linkManCountry_; }
      set {
        linkManCountry_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkManCity" field.</summary>
    public const int LinkManCityFieldNumber = 24;
    private string linkManCity_ = "";
    /// <summary>
    ///入住人城市
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManCity {
      get { return linkManCity_; }
      set {
        linkManCity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkManFax" field.</summary>
    public const int LinkManFaxFieldNumber = 25;
    private string linkManFax_ = "";
    /// <summary>
    ///入住人传真
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManFax {
      get { return linkManFax_; }
      set {
        linkManFax_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkManIdCardType" field.</summary>
    public const int LinkManIdCardTypeFieldNumber = 26;
    private string linkManIdCardType_ = "";
    /// <summary>
    ///入住人证件类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManIdCardType {
      get { return linkManIdCardType_; }
      set {
        linkManIdCardType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkManIdCardNumber" field.</summary>
    public const int LinkManIdCardNumberFieldNumber = 27;
    private string linkManIdCardNumber_ = "";
    /// <summary>
    ///入住人证件号码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManIdCardNumber {
      get { return linkManIdCardNumber_; }
      set {
        linkManIdCardNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkManCompany" field.</summary>
    public const int LinkManCompanyFieldNumber = 28;
    private string linkManCompany_ = "";
    /// <summary>
    ///入住人公司
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManCompany {
      get { return linkManCompany_; }
      set {
        linkManCompany_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkManMobile" field.</summary>
    public const int LinkManMobileFieldNumber = 29;
    private string linkManMobile_ = "";
    /// <summary>
    ///入住人手机
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManMobile {
      get { return linkManMobile_; }
      set {
        linkManMobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkManBirth" field.</summary>
    public const int LinkManBirthFieldNumber = 30;
    private string linkManBirth_ = "";
    /// <summary>
    ///入住人出生日期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManBirth {
      get { return linkManBirth_; }
      set {
        linkManBirth_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OtherName" field.</summary>
    public const int OtherNameFieldNumber = 31;
    private string otherName_ = "";
    /// <summary>
    ///同住人姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OtherName {
      get { return otherName_; }
      set {
        otherName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OtherTitle" field.</summary>
    public const int OtherTitleFieldNumber = 32;
    private string otherTitle_ = "";
    /// <summary>
    ///同住人称谓
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OtherTitle {
      get { return otherTitle_; }
      set {
        otherTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OtherEmail" field.</summary>
    public const int OtherEmailFieldNumber = 33;
    private string otherEmail_ = "";
    /// <summary>
    ///同住人邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OtherEmail {
      get { return otherEmail_; }
      set {
        otherEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OtherMobile" field.</summary>
    public const int OtherMobileFieldNumber = 34;
    private string otherMobile_ = "";
    /// <summary>
    ///同住人手机
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OtherMobile {
      get { return otherMobile_; }
      set {
        otherMobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OtherCompany" field.</summary>
    public const int OtherCompanyFieldNumber = 35;
    private string otherCompany_ = "";
    /// <summary>
    ///同住人公司
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OtherCompany {
      get { return otherCompany_; }
      set {
        otherCompany_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CardPerson" field.</summary>
    public const int CardPersonFieldNumber = 36;
    private string cardPerson_ = "";
    /// <summary>
    ///持卡人姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CardPerson {
      get { return cardPerson_; }
      set {
        cardPerson_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CardType" field.</summary>
    public const int CardTypeFieldNumber = 37;
    private string cardType_ = "";
    /// <summary>
    ///卡类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CardType {
      get { return cardType_; }
      set {
        cardType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CardNumber" field.</summary>
    public const int CardNumberFieldNumber = 38;
    private string cardNumber_ = "";
    /// <summary>
    ///卡号码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CardNumber {
      get { return cardNumber_; }
      set {
        cardNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CardDate" field.</summary>
    public const int CardDateFieldNumber = 39;
    private string cardDate_ = "";
    /// <summary>
    ///卡有效期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CardDate {
      get { return cardDate_; }
      set {
        cardDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Payer" field.</summary>
    public const int PayerFieldNumber = 40;
    private string payer_ = "";
    /// <summary>
    ///付款方：自己支付还是主办方支付
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Payer {
      get { return payer_; }
      set {
        payer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PayType" field.</summary>
    public const int PayTypeFieldNumber = 41;
    private string payType_ = "";
    /// <summary>
    ///付款方式
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PayType {
      get { return payType_; }
      set {
        payType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LinkManEmail2" field.</summary>
    public const int LinkManEmail2FieldNumber = 42;
    private string linkManEmail2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkManEmail2 {
      get { return linkManEmail2_; }
      set {
        linkManEmail2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Created_at" field.</summary>
    public const int CreatedAtFieldNumber = 43;
    private string createdAt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Updated_at" field.</summary>
    public const int UpdatedAtFieldNumber = 44;
    private string updatedAt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpdatedAt {
      get { return updatedAt_; }
      set {
        updatedAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsWebsite" field.</summary>
    public const int IsWebsiteFieldNumber = 45;
    private bool isWebsite_;
    /// <summary>
    ///是否从网站页面订购
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsWebsite {
      get { return isWebsite_; }
      set {
        isWebsite_ = value;
      }
    }

    /// <summary>Field number for the "HotelItem" field.</summary>
    public const int HotelItemFieldNumber = 46;
    private global::GrpcMediaService.HotelStruct hotelItem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcMediaService.HotelStruct HotelItem {
      get { return hotelItem_; }
      set {
        hotelItem_ = value;
      }
    }

    /// <summary>Field number for the "HotelRoomTypeItem" field.</summary>
    public const int HotelRoomTypeItemFieldNumber = 47;
    private global::GrpcMediaService.HotelRoomTypeStruct hotelRoomTypeItem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcMediaService.HotelRoomTypeStruct HotelRoomTypeItem {
      get { return hotelRoomTypeItem_; }
      set {
        hotelRoomTypeItem_ = value;
      }
    }

    /// <summary>Field number for the "OrderNumber" field.</summary>
    public const int OrderNumberFieldNumber = 48;
    private string orderNumber_ = "";
    /// <summary>
    ///订单号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderNumber {
      get { return orderNumber_; }
      set {
        orderNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberEmail" field.</summary>
    public const int MemberEmailFieldNumber = 49;
    private string memberEmail_ = "";
    /// <summary>
    ///会员邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberEmail {
      get { return memberEmail_; }
      set {
        memberEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberName" field.</summary>
    public const int MemberNameFieldNumber = 50;
    private string memberName_ = "";
    /// <summary>
    ///会员姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberName {
      get { return memberName_; }
      set {
        memberName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HotelBookRecordStructVM);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HotelBookRecordStructVM other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (MemberId != other.MemberId) return false;
      if (MemberCompany != other.MemberCompany) return false;
      if (MemberCompanyEn != other.MemberCompanyEn) return false;
      if (HotelId != other.HotelId) return false;
      if (HotelRoomTypeId != other.HotelRoomTypeId) return false;
      if (BookTime != other.BookTime) return false;
      if (CheckInTime != other.CheckInTime) return false;
      if (CheckOutTime != other.CheckOutTime) return false;
      if (IsCanceled != other.IsCanceled) return false;
      if (IsChecked != other.IsChecked) return false;
      if (PriceCount != other.PriceCount) return false;
      if (Remark != other.Remark) return false;
      if (Days != other.Days) return false;
      if (ArriveFlight != other.ArriveFlight) return false;
      if (LeaveFlight != other.LeaveFlight) return false;
      if (IsSmoke != other.IsSmoke) return false;
      if (LinkManFirstName != other.LinkManFirstName) return false;
      if (LinkManLastName != other.LinkManLastName) return false;
      if (LinkManTel != other.LinkManTel) return false;
      if (LinkManEmail != other.LinkManEmail) return false;
      if (LinkManTitle != other.LinkManTitle) return false;
      if (LinkManCountry != other.LinkManCountry) return false;
      if (LinkManCity != other.LinkManCity) return false;
      if (LinkManFax != other.LinkManFax) return false;
      if (LinkManIdCardType != other.LinkManIdCardType) return false;
      if (LinkManIdCardNumber != other.LinkManIdCardNumber) return false;
      if (LinkManCompany != other.LinkManCompany) return false;
      if (LinkManMobile != other.LinkManMobile) return false;
      if (LinkManBirth != other.LinkManBirth) return false;
      if (OtherName != other.OtherName) return false;
      if (OtherTitle != other.OtherTitle) return false;
      if (OtherEmail != other.OtherEmail) return false;
      if (OtherMobile != other.OtherMobile) return false;
      if (OtherCompany != other.OtherCompany) return false;
      if (CardPerson != other.CardPerson) return false;
      if (CardType != other.CardType) return false;
      if (CardNumber != other.CardNumber) return false;
      if (CardDate != other.CardDate) return false;
      if (Payer != other.Payer) return false;
      if (PayType != other.PayType) return false;
      if (LinkManEmail2 != other.LinkManEmail2) return false;
      if (CreatedAt != other.CreatedAt) return false;
      if (UpdatedAt != other.UpdatedAt) return false;
      if (IsWebsite != other.IsWebsite) return false;
      if (!object.Equals(HotelItem, other.HotelItem)) return false;
      if (!object.Equals(HotelRoomTypeItem, other.HotelRoomTypeItem)) return false;
      if (OrderNumber != other.OrderNumber) return false;
      if (MemberEmail != other.MemberEmail) return false;
      if (MemberName != other.MemberName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (MemberId.Length != 0) hash ^= MemberId.GetHashCode();
      if (MemberCompany.Length != 0) hash ^= MemberCompany.GetHashCode();
      if (MemberCompanyEn.Length != 0) hash ^= MemberCompanyEn.GetHashCode();
      if (HotelId.Length != 0) hash ^= HotelId.GetHashCode();
      if (HotelRoomTypeId.Length != 0) hash ^= HotelRoomTypeId.GetHashCode();
      if (BookTime.Length != 0) hash ^= BookTime.GetHashCode();
      if (CheckInTime.Length != 0) hash ^= CheckInTime.GetHashCode();
      if (CheckOutTime.Length != 0) hash ^= CheckOutTime.GetHashCode();
      if (IsCanceled != false) hash ^= IsCanceled.GetHashCode();
      if (IsChecked != 0) hash ^= IsChecked.GetHashCode();
      if (PriceCount.Length != 0) hash ^= PriceCount.GetHashCode();
      if (Remark.Length != 0) hash ^= Remark.GetHashCode();
      if (Days != 0) hash ^= Days.GetHashCode();
      if (ArriveFlight.Length != 0) hash ^= ArriveFlight.GetHashCode();
      if (LeaveFlight.Length != 0) hash ^= LeaveFlight.GetHashCode();
      if (IsSmoke != false) hash ^= IsSmoke.GetHashCode();
      if (LinkManFirstName.Length != 0) hash ^= LinkManFirstName.GetHashCode();
      if (LinkManLastName.Length != 0) hash ^= LinkManLastName.GetHashCode();
      if (LinkManTel.Length != 0) hash ^= LinkManTel.GetHashCode();
      if (LinkManEmail.Length != 0) hash ^= LinkManEmail.GetHashCode();
      if (LinkManTitle.Length != 0) hash ^= LinkManTitle.GetHashCode();
      if (LinkManCountry.Length != 0) hash ^= LinkManCountry.GetHashCode();
      if (LinkManCity.Length != 0) hash ^= LinkManCity.GetHashCode();
      if (LinkManFax.Length != 0) hash ^= LinkManFax.GetHashCode();
      if (LinkManIdCardType.Length != 0) hash ^= LinkManIdCardType.GetHashCode();
      if (LinkManIdCardNumber.Length != 0) hash ^= LinkManIdCardNumber.GetHashCode();
      if (LinkManCompany.Length != 0) hash ^= LinkManCompany.GetHashCode();
      if (LinkManMobile.Length != 0) hash ^= LinkManMobile.GetHashCode();
      if (LinkManBirth.Length != 0) hash ^= LinkManBirth.GetHashCode();
      if (OtherName.Length != 0) hash ^= OtherName.GetHashCode();
      if (OtherTitle.Length != 0) hash ^= OtherTitle.GetHashCode();
      if (OtherEmail.Length != 0) hash ^= OtherEmail.GetHashCode();
      if (OtherMobile.Length != 0) hash ^= OtherMobile.GetHashCode();
      if (OtherCompany.Length != 0) hash ^= OtherCompany.GetHashCode();
      if (CardPerson.Length != 0) hash ^= CardPerson.GetHashCode();
      if (CardType.Length != 0) hash ^= CardType.GetHashCode();
      if (CardNumber.Length != 0) hash ^= CardNumber.GetHashCode();
      if (CardDate.Length != 0) hash ^= CardDate.GetHashCode();
      if (Payer.Length != 0) hash ^= Payer.GetHashCode();
      if (PayType.Length != 0) hash ^= PayType.GetHashCode();
      if (LinkManEmail2.Length != 0) hash ^= LinkManEmail2.GetHashCode();
      if (CreatedAt.Length != 0) hash ^= CreatedAt.GetHashCode();
      if (UpdatedAt.Length != 0) hash ^= UpdatedAt.GetHashCode();
      if (IsWebsite != false) hash ^= IsWebsite.GetHashCode();
      if (hotelItem_ != null) hash ^= HotelItem.GetHashCode();
      if (hotelRoomTypeItem_ != null) hash ^= HotelRoomTypeItem.GetHashCode();
      if (OrderNumber.Length != 0) hash ^= OrderNumber.GetHashCode();
      if (MemberEmail.Length != 0) hash ^= MemberEmail.GetHashCode();
      if (MemberName.Length != 0) hash ^= MemberName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (MemberId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MemberId);
      }
      if (MemberCompany.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MemberCompany);
      }
      if (MemberCompanyEn.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MemberCompanyEn);
      }
      if (HotelId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(HotelId);
      }
      if (HotelRoomTypeId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(HotelRoomTypeId);
      }
      if (BookTime.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(BookTime);
      }
      if (CheckInTime.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CheckInTime);
      }
      if (CheckOutTime.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CheckOutTime);
      }
      if (IsCanceled != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsCanceled);
      }
      if (IsChecked != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(IsChecked);
      }
      if (PriceCount.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(PriceCount);
      }
      if (Remark.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Remark);
      }
      if (Days != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Days);
      }
      if (ArriveFlight.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(ArriveFlight);
      }
      if (LeaveFlight.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(LeaveFlight);
      }
      if (IsSmoke != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(IsSmoke);
      }
      if (LinkManFirstName.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(LinkManFirstName);
      }
      if (LinkManLastName.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(LinkManLastName);
      }
      if (LinkManTel.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(LinkManTel);
      }
      if (LinkManEmail.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(LinkManEmail);
      }
      if (LinkManTitle.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(LinkManTitle);
      }
      if (LinkManCountry.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(LinkManCountry);
      }
      if (LinkManCity.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(LinkManCity);
      }
      if (LinkManFax.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(LinkManFax);
      }
      if (LinkManIdCardType.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(LinkManIdCardType);
      }
      if (LinkManIdCardNumber.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(LinkManIdCardNumber);
      }
      if (LinkManCompany.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(LinkManCompany);
      }
      if (LinkManMobile.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(LinkManMobile);
      }
      if (LinkManBirth.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(LinkManBirth);
      }
      if (OtherName.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(OtherName);
      }
      if (OtherTitle.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(OtherTitle);
      }
      if (OtherEmail.Length != 0) {
        output.WriteRawTag(138, 2);
        output.WriteString(OtherEmail);
      }
      if (OtherMobile.Length != 0) {
        output.WriteRawTag(146, 2);
        output.WriteString(OtherMobile);
      }
      if (OtherCompany.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(OtherCompany);
      }
      if (CardPerson.Length != 0) {
        output.WriteRawTag(162, 2);
        output.WriteString(CardPerson);
      }
      if (CardType.Length != 0) {
        output.WriteRawTag(170, 2);
        output.WriteString(CardType);
      }
      if (CardNumber.Length != 0) {
        output.WriteRawTag(178, 2);
        output.WriteString(CardNumber);
      }
      if (CardDate.Length != 0) {
        output.WriteRawTag(186, 2);
        output.WriteString(CardDate);
      }
      if (Payer.Length != 0) {
        output.WriteRawTag(194, 2);
        output.WriteString(Payer);
      }
      if (PayType.Length != 0) {
        output.WriteRawTag(202, 2);
        output.WriteString(PayType);
      }
      if (LinkManEmail2.Length != 0) {
        output.WriteRawTag(210, 2);
        output.WriteString(LinkManEmail2);
      }
      if (CreatedAt.Length != 0) {
        output.WriteRawTag(218, 2);
        output.WriteString(CreatedAt);
      }
      if (UpdatedAt.Length != 0) {
        output.WriteRawTag(226, 2);
        output.WriteString(UpdatedAt);
      }
      if (IsWebsite != false) {
        output.WriteRawTag(232, 2);
        output.WriteBool(IsWebsite);
      }
      if (hotelItem_ != null) {
        output.WriteRawTag(242, 2);
        output.WriteMessage(HotelItem);
      }
      if (hotelRoomTypeItem_ != null) {
        output.WriteRawTag(250, 2);
        output.WriteMessage(HotelRoomTypeItem);
      }
      if (OrderNumber.Length != 0) {
        output.WriteRawTag(130, 3);
        output.WriteString(OrderNumber);
      }
      if (MemberEmail.Length != 0) {
        output.WriteRawTag(138, 3);
        output.WriteString(MemberEmail);
      }
      if (MemberName.Length != 0) {
        output.WriteRawTag(146, 3);
        output.WriteString(MemberName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (MemberId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberId);
      }
      if (MemberCompany.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberCompany);
      }
      if (MemberCompanyEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberCompanyEn);
      }
      if (HotelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelId);
      }
      if (HotelRoomTypeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelRoomTypeId);
      }
      if (BookTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BookTime);
      }
      if (CheckInTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CheckInTime);
      }
      if (CheckOutTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CheckOutTime);
      }
      if (IsCanceled != false) {
        size += 1 + 1;
      }
      if (IsChecked != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsChecked);
      }
      if (PriceCount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceCount);
      }
      if (Remark.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Remark);
      }
      if (Days != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Days);
      }
      if (ArriveFlight.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ArriveFlight);
      }
      if (LeaveFlight.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LeaveFlight);
      }
      if (IsSmoke != false) {
        size += 2 + 1;
      }
      if (LinkManFirstName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManFirstName);
      }
      if (LinkManLastName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManLastName);
      }
      if (LinkManTel.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManTel);
      }
      if (LinkManEmail.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManEmail);
      }
      if (LinkManTitle.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManTitle);
      }
      if (LinkManCountry.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManCountry);
      }
      if (LinkManCity.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManCity);
      }
      if (LinkManFax.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManFax);
      }
      if (LinkManIdCardType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManIdCardType);
      }
      if (LinkManIdCardNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManIdCardNumber);
      }
      if (LinkManCompany.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManCompany);
      }
      if (LinkManMobile.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManMobile);
      }
      if (LinkManBirth.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManBirth);
      }
      if (OtherName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OtherName);
      }
      if (OtherTitle.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OtherTitle);
      }
      if (OtherEmail.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OtherEmail);
      }
      if (OtherMobile.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OtherMobile);
      }
      if (OtherCompany.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OtherCompany);
      }
      if (CardPerson.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CardPerson);
      }
      if (CardType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CardType);
      }
      if (CardNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CardNumber);
      }
      if (CardDate.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CardDate);
      }
      if (Payer.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Payer);
      }
      if (PayType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PayType);
      }
      if (LinkManEmail2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LinkManEmail2);
      }
      if (CreatedAt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedAt);
      }
      if (UpdatedAt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UpdatedAt);
      }
      if (IsWebsite != false) {
        size += 2 + 1;
      }
      if (hotelItem_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(HotelItem);
      }
      if (hotelRoomTypeItem_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(HotelRoomTypeItem);
      }
      if (OrderNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OrderNumber);
      }
      if (MemberEmail.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemberEmail);
      }
      if (MemberName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemberName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HotelBookRecordStructVM other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.MemberId.Length != 0) {
        MemberId = other.MemberId;
      }
      if (other.MemberCompany.Length != 0) {
        MemberCompany = other.MemberCompany;
      }
      if (other.MemberCompanyEn.Length != 0) {
        MemberCompanyEn = other.MemberCompanyEn;
      }
      if (other.HotelId.Length != 0) {
        HotelId = other.HotelId;
      }
      if (other.HotelRoomTypeId.Length != 0) {
        HotelRoomTypeId = other.HotelRoomTypeId;
      }
      if (other.BookTime.Length != 0) {
        BookTime = other.BookTime;
      }
      if (other.CheckInTime.Length != 0) {
        CheckInTime = other.CheckInTime;
      }
      if (other.CheckOutTime.Length != 0) {
        CheckOutTime = other.CheckOutTime;
      }
      if (other.IsCanceled != false) {
        IsCanceled = other.IsCanceled;
      }
      if (other.IsChecked != 0) {
        IsChecked = other.IsChecked;
      }
      if (other.PriceCount.Length != 0) {
        PriceCount = other.PriceCount;
      }
      if (other.Remark.Length != 0) {
        Remark = other.Remark;
      }
      if (other.Days != 0) {
        Days = other.Days;
      }
      if (other.ArriveFlight.Length != 0) {
        ArriveFlight = other.ArriveFlight;
      }
      if (other.LeaveFlight.Length != 0) {
        LeaveFlight = other.LeaveFlight;
      }
      if (other.IsSmoke != false) {
        IsSmoke = other.IsSmoke;
      }
      if (other.LinkManFirstName.Length != 0) {
        LinkManFirstName = other.LinkManFirstName;
      }
      if (other.LinkManLastName.Length != 0) {
        LinkManLastName = other.LinkManLastName;
      }
      if (other.LinkManTel.Length != 0) {
        LinkManTel = other.LinkManTel;
      }
      if (other.LinkManEmail.Length != 0) {
        LinkManEmail = other.LinkManEmail;
      }
      if (other.LinkManTitle.Length != 0) {
        LinkManTitle = other.LinkManTitle;
      }
      if (other.LinkManCountry.Length != 0) {
        LinkManCountry = other.LinkManCountry;
      }
      if (other.LinkManCity.Length != 0) {
        LinkManCity = other.LinkManCity;
      }
      if (other.LinkManFax.Length != 0) {
        LinkManFax = other.LinkManFax;
      }
      if (other.LinkManIdCardType.Length != 0) {
        LinkManIdCardType = other.LinkManIdCardType;
      }
      if (other.LinkManIdCardNumber.Length != 0) {
        LinkManIdCardNumber = other.LinkManIdCardNumber;
      }
      if (other.LinkManCompany.Length != 0) {
        LinkManCompany = other.LinkManCompany;
      }
      if (other.LinkManMobile.Length != 0) {
        LinkManMobile = other.LinkManMobile;
      }
      if (other.LinkManBirth.Length != 0) {
        LinkManBirth = other.LinkManBirth;
      }
      if (other.OtherName.Length != 0) {
        OtherName = other.OtherName;
      }
      if (other.OtherTitle.Length != 0) {
        OtherTitle = other.OtherTitle;
      }
      if (other.OtherEmail.Length != 0) {
        OtherEmail = other.OtherEmail;
      }
      if (other.OtherMobile.Length != 0) {
        OtherMobile = other.OtherMobile;
      }
      if (other.OtherCompany.Length != 0) {
        OtherCompany = other.OtherCompany;
      }
      if (other.CardPerson.Length != 0) {
        CardPerson = other.CardPerson;
      }
      if (other.CardType.Length != 0) {
        CardType = other.CardType;
      }
      if (other.CardNumber.Length != 0) {
        CardNumber = other.CardNumber;
      }
      if (other.CardDate.Length != 0) {
        CardDate = other.CardDate;
      }
      if (other.Payer.Length != 0) {
        Payer = other.Payer;
      }
      if (other.PayType.Length != 0) {
        PayType = other.PayType;
      }
      if (other.LinkManEmail2.Length != 0) {
        LinkManEmail2 = other.LinkManEmail2;
      }
      if (other.CreatedAt.Length != 0) {
        CreatedAt = other.CreatedAt;
      }
      if (other.UpdatedAt.Length != 0) {
        UpdatedAt = other.UpdatedAt;
      }
      if (other.IsWebsite != false) {
        IsWebsite = other.IsWebsite;
      }
      if (other.hotelItem_ != null) {
        if (hotelItem_ == null) {
          hotelItem_ = new global::GrpcMediaService.HotelStruct();
        }
        HotelItem.MergeFrom(other.HotelItem);
      }
      if (other.hotelRoomTypeItem_ != null) {
        if (hotelRoomTypeItem_ == null) {
          hotelRoomTypeItem_ = new global::GrpcMediaService.HotelRoomTypeStruct();
        }
        HotelRoomTypeItem.MergeFrom(other.HotelRoomTypeItem);
      }
      if (other.OrderNumber.Length != 0) {
        OrderNumber = other.OrderNumber;
      }
      if (other.MemberEmail.Length != 0) {
        MemberEmail = other.MemberEmail;
      }
      if (other.MemberName.Length != 0) {
        MemberName = other.MemberName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            MemberId = input.ReadString();
            break;
          }
          case 26: {
            MemberCompany = input.ReadString();
            break;
          }
          case 34: {
            MemberCompanyEn = input.ReadString();
            break;
          }
          case 42: {
            HotelId = input.ReadString();
            break;
          }
          case 50: {
            HotelRoomTypeId = input.ReadString();
            break;
          }
          case 58: {
            BookTime = input.ReadString();
            break;
          }
          case 66: {
            CheckInTime = input.ReadString();
            break;
          }
          case 74: {
            CheckOutTime = input.ReadString();
            break;
          }
          case 80: {
            IsCanceled = input.ReadBool();
            break;
          }
          case 88: {
            IsChecked = input.ReadInt32();
            break;
          }
          case 98: {
            PriceCount = input.ReadString();
            break;
          }
          case 106: {
            Remark = input.ReadString();
            break;
          }
          case 112: {
            Days = input.ReadInt32();
            break;
          }
          case 122: {
            ArriveFlight = input.ReadString();
            break;
          }
          case 130: {
            LeaveFlight = input.ReadString();
            break;
          }
          case 136: {
            IsSmoke = input.ReadBool();
            break;
          }
          case 146: {
            LinkManFirstName = input.ReadString();
            break;
          }
          case 154: {
            LinkManLastName = input.ReadString();
            break;
          }
          case 162: {
            LinkManTel = input.ReadString();
            break;
          }
          case 170: {
            LinkManEmail = input.ReadString();
            break;
          }
          case 178: {
            LinkManTitle = input.ReadString();
            break;
          }
          case 186: {
            LinkManCountry = input.ReadString();
            break;
          }
          case 194: {
            LinkManCity = input.ReadString();
            break;
          }
          case 202: {
            LinkManFax = input.ReadString();
            break;
          }
          case 210: {
            LinkManIdCardType = input.ReadString();
            break;
          }
          case 218: {
            LinkManIdCardNumber = input.ReadString();
            break;
          }
          case 226: {
            LinkManCompany = input.ReadString();
            break;
          }
          case 234: {
            LinkManMobile = input.ReadString();
            break;
          }
          case 242: {
            LinkManBirth = input.ReadString();
            break;
          }
          case 250: {
            OtherName = input.ReadString();
            break;
          }
          case 258: {
            OtherTitle = input.ReadString();
            break;
          }
          case 266: {
            OtherEmail = input.ReadString();
            break;
          }
          case 274: {
            OtherMobile = input.ReadString();
            break;
          }
          case 282: {
            OtherCompany = input.ReadString();
            break;
          }
          case 290: {
            CardPerson = input.ReadString();
            break;
          }
          case 298: {
            CardType = input.ReadString();
            break;
          }
          case 306: {
            CardNumber = input.ReadString();
            break;
          }
          case 314: {
            CardDate = input.ReadString();
            break;
          }
          case 322: {
            Payer = input.ReadString();
            break;
          }
          case 330: {
            PayType = input.ReadString();
            break;
          }
          case 338: {
            LinkManEmail2 = input.ReadString();
            break;
          }
          case 346: {
            CreatedAt = input.ReadString();
            break;
          }
          case 354: {
            UpdatedAt = input.ReadString();
            break;
          }
          case 360: {
            IsWebsite = input.ReadBool();
            break;
          }
          case 370: {
            if (hotelItem_ == null) {
              hotelItem_ = new global::GrpcMediaService.HotelStruct();
            }
            input.ReadMessage(hotelItem_);
            break;
          }
          case 378: {
            if (hotelRoomTypeItem_ == null) {
              hotelRoomTypeItem_ = new global::GrpcMediaService.HotelRoomTypeStruct();
            }
            input.ReadMessage(hotelRoomTypeItem_);
            break;
          }
          case 386: {
            OrderNumber = input.ReadString();
            break;
          }
          case 394: {
            MemberEmail = input.ReadString();
            break;
          }
          case 402: {
            MemberName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HotelBookRecordList : pb::IMessage<HotelBookRecordList> {
    private static readonly pb::MessageParser<HotelBookRecordList> _parser = new pb::MessageParser<HotelBookRecordList>(() => new HotelBookRecordList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HotelBookRecordList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelBookRecordList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelBookRecordList(HotelBookRecordList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelBookRecordList Clone() {
      return new HotelBookRecordList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcMediaService.HotelBookRecordStructVM> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcMediaService.HotelBookRecordStructVM.Parser);
    private readonly pbc::RepeatedField<global::GrpcMediaService.HotelBookRecordStructVM> listdata_ = new pbc::RepeatedField<global::GrpcMediaService.HotelBookRecordStructVM>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcMediaService.HotelBookRecordStructVM> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HotelBookRecordList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HotelBookRecordList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HotelBookRecordList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OrderPersonStruct : pb::IMessage<OrderPersonStruct> {
    private static readonly pb::MessageParser<OrderPersonStruct> _parser = new pb::MessageParser<OrderPersonStruct>(() => new OrderPersonStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderPersonStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderPersonStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderPersonStruct(OrderPersonStruct other) : this() {
      memberId_ = other.memberId_;
      memberEmail_ = other.memberEmail_;
      memberCompany_ = other.memberCompany_;
      memberName_ = other.memberName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderPersonStruct Clone() {
      return new OrderPersonStruct(this);
    }

    /// <summary>Field number for the "MemberId" field.</summary>
    public const int MemberIdFieldNumber = 1;
    private string memberId_ = "";
    /// <summary>
    ///订单人Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberId {
      get { return memberId_; }
      set {
        memberId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberEmail" field.</summary>
    public const int MemberEmailFieldNumber = 2;
    private string memberEmail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberEmail {
      get { return memberEmail_; }
      set {
        memberEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberCompany" field.</summary>
    public const int MemberCompanyFieldNumber = 3;
    private string memberCompany_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberCompany {
      get { return memberCompany_; }
      set {
        memberCompany_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberName" field.</summary>
    public const int MemberNameFieldNumber = 4;
    private string memberName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberName {
      get { return memberName_; }
      set {
        memberName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderPersonStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderPersonStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MemberId != other.MemberId) return false;
      if (MemberEmail != other.MemberEmail) return false;
      if (MemberCompany != other.MemberCompany) return false;
      if (MemberName != other.MemberName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MemberId.Length != 0) hash ^= MemberId.GetHashCode();
      if (MemberEmail.Length != 0) hash ^= MemberEmail.GetHashCode();
      if (MemberCompany.Length != 0) hash ^= MemberCompany.GetHashCode();
      if (MemberName.Length != 0) hash ^= MemberName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MemberId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MemberId);
      }
      if (MemberEmail.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MemberEmail);
      }
      if (MemberCompany.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MemberCompany);
      }
      if (MemberName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MemberName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MemberId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberId);
      }
      if (MemberEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberEmail);
      }
      if (MemberCompany.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberCompany);
      }
      if (MemberName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderPersonStruct other) {
      if (other == null) {
        return;
      }
      if (other.MemberId.Length != 0) {
        MemberId = other.MemberId;
      }
      if (other.MemberEmail.Length != 0) {
        MemberEmail = other.MemberEmail;
      }
      if (other.MemberCompany.Length != 0) {
        MemberCompany = other.MemberCompany;
      }
      if (other.MemberName.Length != 0) {
        MemberName = other.MemberName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MemberId = input.ReadString();
            break;
          }
          case 18: {
            MemberEmail = input.ReadString();
            break;
          }
          case 26: {
            MemberCompany = input.ReadString();
            break;
          }
          case 34: {
            MemberName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OrderPersonList : pb::IMessage<OrderPersonList> {
    private static readonly pb::MessageParser<OrderPersonList> _parser = new pb::MessageParser<OrderPersonList>(() => new OrderPersonList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderPersonList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderPersonList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderPersonList(OrderPersonList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderPersonList Clone() {
      return new OrderPersonList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcMediaService.OrderPersonStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcMediaService.OrderPersonStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcMediaService.OrderPersonStruct> listdata_ = new pbc::RepeatedField<global::GrpcMediaService.OrderPersonStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcMediaService.OrderPersonStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderPersonList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderPersonList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderPersonList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Empty : pb::IMessage<Empty> {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class IdRequest : pb::IMessage<IdRequest> {
    private static readonly pb::MessageParser<IdRequest> _parser = new pb::MessageParser<IdRequest>(() => new IdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdRequest(IdRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdRequest Clone() {
      return new IdRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IdRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModifyReply : pb::IMessage<ModifyReply> {
    private static readonly pb::MessageParser<ModifyReply> _parser = new pb::MessageParser<ModifyReply>(() => new ModifyReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModifyReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReply(ModifyReply other) : this() {
      success_ = other.success_;
      modifiedCount_ = other.modifiedCount_;
      msg_ = other.msg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReply Clone() {
      return new ModifyReply(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "modified_count" field.</summary>
    public const int ModifiedCountFieldNumber = 2;
    private int modifiedCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModifiedCount {
      get { return modifiedCount_; }
      set {
        modifiedCount_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 3;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModifyReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModifyReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (ModifiedCount != other.ModifiedCount) return false;
      if (Msg != other.Msg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (ModifiedCount != 0) hash ^= ModifiedCount.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (ModifiedCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ModifiedCount);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (ModifiedCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModifiedCount);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModifyReply other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.ModifiedCount != 0) {
        ModifiedCount = other.ModifiedCount;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            ModifiedCount = input.ReadInt32();
            break;
          }
          case 26: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SearchStruct : pb::IMessage<SearchStruct> {
    private static readonly pb::MessageParser<SearchStruct> _parser = new pb::MessageParser<SearchStruct>(() => new SearchStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchStruct(SearchStruct other) : this() {
      companyName_ = other.companyName_;
      contractNumber_ = other.contractNumber_;
      pavilionNumber_ = other.pavilionNumber_;
      boothNumber_ = other.boothNumber_;
      ownerId_ = other.ownerId_;
      isPay_ = other.isPay_;
      isHaveLogo_ = other.isHaveLogo_;
      beginDate_ = other.beginDate_;
      endDate_ = other.endDate_;
      expressNum_ = other.expressNum_;
      sender_ = other.sender_;
      recipient_ = other.recipient_;
      recipientUnit_ = other.recipientUnit_;
      hotelId_ = other.hotelId_;
      hotelRoomTypeId_ = other.hotelRoomTypeId_;
      isCanceled_ = other.isCanceled_;
      isChecked_ = other.isChecked_;
      isWebsite_ = other.isWebsite_;
      type_ = other.type_;
      email_ = other.email_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchStruct Clone() {
      return new SearchStruct(this);
    }

    /// <summary>Field number for the "companyName" field.</summary>
    public const int CompanyNameFieldNumber = 1;
    private string companyName_ = "";
    /// <summary>
    ///公司名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyName {
      get { return companyName_; }
      set {
        companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contractNumber" field.</summary>
    public const int ContractNumberFieldNumber = 2;
    private string contractNumber_ = "";
    /// <summary>
    ///合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractNumber {
      get { return contractNumber_; }
      set {
        contractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pavilionNumber" field.</summary>
    public const int PavilionNumberFieldNumber = 3;
    private string pavilionNumber_ = "";
    /// <summary>
    ///展馆号code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PavilionNumber {
      get { return pavilionNumber_; }
      set {
        pavilionNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "boothNumber" field.</summary>
    public const int BoothNumberFieldNumber = 4;
    private string boothNumber_ = "";
    /// <summary>
    ///展位号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BoothNumber {
      get { return boothNumber_; }
      set {
        boothNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ownerId" field.</summary>
    public const int OwnerIdFieldNumber = 5;
    private string ownerId_ = "";
    /// <summary>
    ///客户经理Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerId {
      get { return ownerId_; }
      set {
        ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isPay" field.</summary>
    public const int IsPayFieldNumber = 6;
    private string isPay_ = "";
    /// <summary>
    ///是否付款
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IsPay {
      get { return isPay_; }
      set {
        isPay_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isHaveLogo" field.</summary>
    public const int IsHaveLogoFieldNumber = 7;
    private string isHaveLogo_ = "";
    /// <summary>
    ///是否有logo
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IsHaveLogo {
      get { return isHaveLogo_; }
      set {
        isHaveLogo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "begin_date" field.</summary>
    public const int BeginDateFieldNumber = 8;
    private string beginDate_ = "";
    /// <summary>
    ///开始日期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BeginDate {
      get { return beginDate_; }
      set {
        beginDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "end_date" field.</summary>
    public const int EndDateFieldNumber = 9;
    private string endDate_ = "";
    /// <summary>
    ///结束日期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndDate {
      get { return endDate_; }
      set {
        endDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expressNum" field.</summary>
    public const int ExpressNumFieldNumber = 10;
    private string expressNum_ = "";
    /// <summary>
    ///快递单号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExpressNum {
      get { return expressNum_; }
      set {
        expressNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 11;
    private string sender_ = "";
    /// <summary>
    ///寄件人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sender {
      get { return sender_; }
      set {
        sender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "recipient" field.</summary>
    public const int RecipientFieldNumber = 12;
    private string recipient_ = "";
    /// <summary>
    ///收件人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Recipient {
      get { return recipient_; }
      set {
        recipient_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "recipientUnit" field.</summary>
    public const int RecipientUnitFieldNumber = 13;
    private string recipientUnit_ = "";
    /// <summary>
    ///收件单位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RecipientUnit {
      get { return recipientUnit_; }
      set {
        recipientUnit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hotelId" field.</summary>
    public const int HotelIdFieldNumber = 14;
    private string hotelId_ = "";
    /// <summary>
    ///酒店Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelId {
      get { return hotelId_; }
      set {
        hotelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hotelRoomTypeId" field.</summary>
    public const int HotelRoomTypeIdFieldNumber = 15;
    private string hotelRoomTypeId_ = "";
    /// <summary>
    ///酒店房间类型Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HotelRoomTypeId {
      get { return hotelRoomTypeId_; }
      set {
        hotelRoomTypeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isCanceled" field.</summary>
    public const int IsCanceledFieldNumber = 16;
    private string isCanceled_ = "";
    /// <summary>
    ///是否取消预约
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IsCanceled {
      get { return isCanceled_; }
      set {
        isCanceled_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isChecked" field.</summary>
    public const int IsCheckedFieldNumber = 17;
    private string isChecked_ = "";
    /// <summary>
    ///是否确认 0=>未确认;1=>待确认;2=>最终确认
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IsChecked {
      get { return isChecked_; }
      set {
        isChecked_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isWebsite" field.</summary>
    public const int IsWebsiteFieldNumber = 18;
    private string isWebsite_ = "";
    /// <summary>
    ///是否从网站页面订购
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IsWebsite {
      get { return isWebsite_; }
      set {
        isWebsite_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 19;
    private string type_ = "";
    /// <summary>
    ///会刊订购类型(会刊或是摘要集)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 20;
    private string email_ = "";
    /// <summary>
    ///会刊订购人邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 21;
    private string name_ = "";
    /// <summary>
    ///会刊订购人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CompanyName != other.CompanyName) return false;
      if (ContractNumber != other.ContractNumber) return false;
      if (PavilionNumber != other.PavilionNumber) return false;
      if (BoothNumber != other.BoothNumber) return false;
      if (OwnerId != other.OwnerId) return false;
      if (IsPay != other.IsPay) return false;
      if (IsHaveLogo != other.IsHaveLogo) return false;
      if (BeginDate != other.BeginDate) return false;
      if (EndDate != other.EndDate) return false;
      if (ExpressNum != other.ExpressNum) return false;
      if (Sender != other.Sender) return false;
      if (Recipient != other.Recipient) return false;
      if (RecipientUnit != other.RecipientUnit) return false;
      if (HotelId != other.HotelId) return false;
      if (HotelRoomTypeId != other.HotelRoomTypeId) return false;
      if (IsCanceled != other.IsCanceled) return false;
      if (IsChecked != other.IsChecked) return false;
      if (IsWebsite != other.IsWebsite) return false;
      if (Type != other.Type) return false;
      if (Email != other.Email) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
      if (ContractNumber.Length != 0) hash ^= ContractNumber.GetHashCode();
      if (PavilionNumber.Length != 0) hash ^= PavilionNumber.GetHashCode();
      if (BoothNumber.Length != 0) hash ^= BoothNumber.GetHashCode();
      if (OwnerId.Length != 0) hash ^= OwnerId.GetHashCode();
      if (IsPay.Length != 0) hash ^= IsPay.GetHashCode();
      if (IsHaveLogo.Length != 0) hash ^= IsHaveLogo.GetHashCode();
      if (BeginDate.Length != 0) hash ^= BeginDate.GetHashCode();
      if (EndDate.Length != 0) hash ^= EndDate.GetHashCode();
      if (ExpressNum.Length != 0) hash ^= ExpressNum.GetHashCode();
      if (Sender.Length != 0) hash ^= Sender.GetHashCode();
      if (Recipient.Length != 0) hash ^= Recipient.GetHashCode();
      if (RecipientUnit.Length != 0) hash ^= RecipientUnit.GetHashCode();
      if (HotelId.Length != 0) hash ^= HotelId.GetHashCode();
      if (HotelRoomTypeId.Length != 0) hash ^= HotelRoomTypeId.GetHashCode();
      if (IsCanceled.Length != 0) hash ^= IsCanceled.GetHashCode();
      if (IsChecked.Length != 0) hash ^= IsChecked.GetHashCode();
      if (IsWebsite.Length != 0) hash ^= IsWebsite.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CompanyName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CompanyName);
      }
      if (ContractNumber.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContractNumber);
      }
      if (PavilionNumber.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PavilionNumber);
      }
      if (BoothNumber.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(BoothNumber);
      }
      if (OwnerId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OwnerId);
      }
      if (IsPay.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(IsPay);
      }
      if (IsHaveLogo.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(IsHaveLogo);
      }
      if (BeginDate.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(BeginDate);
      }
      if (EndDate.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(EndDate);
      }
      if (ExpressNum.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ExpressNum);
      }
      if (Sender.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Sender);
      }
      if (Recipient.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Recipient);
      }
      if (RecipientUnit.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(RecipientUnit);
      }
      if (HotelId.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(HotelId);
      }
      if (HotelRoomTypeId.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(HotelRoomTypeId);
      }
      if (IsCanceled.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(IsCanceled);
      }
      if (IsChecked.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(IsChecked);
      }
      if (IsWebsite.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(IsWebsite);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Type);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(Email);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CompanyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
      }
      if (ContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractNumber);
      }
      if (PavilionNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PavilionNumber);
      }
      if (BoothNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BoothNumber);
      }
      if (OwnerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
      }
      if (IsPay.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IsPay);
      }
      if (IsHaveLogo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IsHaveLogo);
      }
      if (BeginDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BeginDate);
      }
      if (EndDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndDate);
      }
      if (ExpressNum.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpressNum);
      }
      if (Sender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sender);
      }
      if (Recipient.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Recipient);
      }
      if (RecipientUnit.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RecipientUnit);
      }
      if (HotelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelId);
      }
      if (HotelRoomTypeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HotelRoomTypeId);
      }
      if (IsCanceled.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(IsCanceled);
      }
      if (IsChecked.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(IsChecked);
      }
      if (IsWebsite.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(IsWebsite);
      }
      if (Type.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Email.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Name.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchStruct other) {
      if (other == null) {
        return;
      }
      if (other.CompanyName.Length != 0) {
        CompanyName = other.CompanyName;
      }
      if (other.ContractNumber.Length != 0) {
        ContractNumber = other.ContractNumber;
      }
      if (other.PavilionNumber.Length != 0) {
        PavilionNumber = other.PavilionNumber;
      }
      if (other.BoothNumber.Length != 0) {
        BoothNumber = other.BoothNumber;
      }
      if (other.OwnerId.Length != 0) {
        OwnerId = other.OwnerId;
      }
      if (other.IsPay.Length != 0) {
        IsPay = other.IsPay;
      }
      if (other.IsHaveLogo.Length != 0) {
        IsHaveLogo = other.IsHaveLogo;
      }
      if (other.BeginDate.Length != 0) {
        BeginDate = other.BeginDate;
      }
      if (other.EndDate.Length != 0) {
        EndDate = other.EndDate;
      }
      if (other.ExpressNum.Length != 0) {
        ExpressNum = other.ExpressNum;
      }
      if (other.Sender.Length != 0) {
        Sender = other.Sender;
      }
      if (other.Recipient.Length != 0) {
        Recipient = other.Recipient;
      }
      if (other.RecipientUnit.Length != 0) {
        RecipientUnit = other.RecipientUnit;
      }
      if (other.HotelId.Length != 0) {
        HotelId = other.HotelId;
      }
      if (other.HotelRoomTypeId.Length != 0) {
        HotelRoomTypeId = other.HotelRoomTypeId;
      }
      if (other.IsCanceled.Length != 0) {
        IsCanceled = other.IsCanceled;
      }
      if (other.IsChecked.Length != 0) {
        IsChecked = other.IsChecked;
      }
      if (other.IsWebsite.Length != 0) {
        IsWebsite = other.IsWebsite;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CompanyName = input.ReadString();
            break;
          }
          case 18: {
            ContractNumber = input.ReadString();
            break;
          }
          case 26: {
            PavilionNumber = input.ReadString();
            break;
          }
          case 34: {
            BoothNumber = input.ReadString();
            break;
          }
          case 42: {
            OwnerId = input.ReadString();
            break;
          }
          case 50: {
            IsPay = input.ReadString();
            break;
          }
          case 58: {
            IsHaveLogo = input.ReadString();
            break;
          }
          case 66: {
            BeginDate = input.ReadString();
            break;
          }
          case 74: {
            EndDate = input.ReadString();
            break;
          }
          case 82: {
            ExpressNum = input.ReadString();
            break;
          }
          case 90: {
            Sender = input.ReadString();
            break;
          }
          case 98: {
            Recipient = input.ReadString();
            break;
          }
          case 106: {
            RecipientUnit = input.ReadString();
            break;
          }
          case 114: {
            HotelId = input.ReadString();
            break;
          }
          case 122: {
            HotelRoomTypeId = input.ReadString();
            break;
          }
          case 130: {
            IsCanceled = input.ReadString();
            break;
          }
          case 138: {
            IsChecked = input.ReadString();
            break;
          }
          case 146: {
            IsWebsite = input.ReadString();
            break;
          }
          case 154: {
            Type = input.ReadString();
            break;
          }
          case 162: {
            Email = input.ReadString();
            break;
          }
          case 170: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
