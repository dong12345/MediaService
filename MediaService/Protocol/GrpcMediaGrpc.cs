// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GrpcMedia.proto
// </auto-generated>
#pragma warning disable 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcMediaService {
  public static partial class MediaServiceToGrpc
  {
    static readonly string __ServiceName = "GrpcMediaService.MediaServiceToGrpc";

    static readonly grpc::Marshaller<global::GrpcMediaService.FormPublicStruct> __Marshaller_FormPublicStruct = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcMediaService.FormPublicStruct.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcMediaService.ModifyReply> __Marshaller_ModifyReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcMediaService.ModifyReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcMediaService.IdRequest> __Marshaller_IdRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcMediaService.IdRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcMediaService.Empty> __Marshaller_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcMediaService.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcMediaService.FormPublicList> __Marshaller_FormPublicList = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcMediaService.FormPublicList.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcMediaService.PaginationRequestSearch> __Marshaller_PaginationRequestSearch = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcMediaService.PaginationRequestSearch.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcMediaService.ExpressStruct> __Marshaller_ExpressStruct = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcMediaService.ExpressStruct.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcMediaService.ExpressList> __Marshaller_ExpressList = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcMediaService.ExpressList.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcMediaService.CatalogueBooksStruct> __Marshaller_CatalogueBooksStruct = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcMediaService.CatalogueBooksStruct.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcMediaService.InterviewStruct> __Marshaller_InterviewStruct = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcMediaService.InterviewStruct.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcMediaService.InterviewList> __Marshaller_InterviewList = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcMediaService.InterviewList.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcMediaService.HighlightsInfoStruct> __Marshaller_HighlightsInfoStruct = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcMediaService.HighlightsInfoStruct.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcMediaService.HighlightsInfoList> __Marshaller_HighlightsInfoList = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcMediaService.HighlightsInfoList.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcMediaService.HotelStruct> __Marshaller_HotelStruct = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcMediaService.HotelStruct.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcMediaService.HotelId> __Marshaller_HotelId = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcMediaService.HotelId.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcMediaService.HotelList> __Marshaller_HotelList = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcMediaService.HotelList.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcMediaService.HotelRoomTypeStruct> __Marshaller_HotelRoomTypeStruct = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcMediaService.HotelRoomTypeStruct.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcMediaService.HotelRoomTypeId> __Marshaller_HotelRoomTypeId = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcMediaService.HotelRoomTypeId.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcMediaService.HotelRoomTypeList> __Marshaller_HotelRoomTypeList = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcMediaService.HotelRoomTypeList.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcMediaService.HotelBookRecordStruct> __Marshaller_HotelBookRecordStruct = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcMediaService.HotelBookRecordStruct.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcMediaService.MemberId> __Marshaller_MemberId = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcMediaService.MemberId.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcMediaService.HotelBookRecordList> __Marshaller_HotelBookRecordList = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcMediaService.HotelBookRecordList.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcMediaService.FormPublicStruct, global::GrpcMediaService.ModifyReply> __Method_CreateFormPublicInfo = new grpc::Method<global::GrpcMediaService.FormPublicStruct, global::GrpcMediaService.ModifyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateFormPublicInfo",
        __Marshaller_FormPublicStruct,
        __Marshaller_ModifyReply);

    static readonly grpc::Method<global::GrpcMediaService.FormPublicStruct, global::GrpcMediaService.ModifyReply> __Method_UpdateFormPublicInfo = new grpc::Method<global::GrpcMediaService.FormPublicStruct, global::GrpcMediaService.ModifyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateFormPublicInfo",
        __Marshaller_FormPublicStruct,
        __Marshaller_ModifyReply);

    static readonly grpc::Method<global::GrpcMediaService.IdRequest, global::GrpcMediaService.ModifyReply> __Method_DeleteFormPublicInfoById = new grpc::Method<global::GrpcMediaService.IdRequest, global::GrpcMediaService.ModifyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteFormPublicInfoById",
        __Marshaller_IdRequest,
        __Marshaller_ModifyReply);

    static readonly grpc::Method<global::GrpcMediaService.Empty, global::GrpcMediaService.FormPublicList> __Method_GetFormPublicInfoList = new grpc::Method<global::GrpcMediaService.Empty, global::GrpcMediaService.FormPublicList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetFormPublicInfoList",
        __Marshaller_Empty,
        __Marshaller_FormPublicList);

    static readonly grpc::Method<global::GrpcMediaService.IdRequest, global::GrpcMediaService.FormPublicStruct> __Method_GetFormPublicInfoById = new grpc::Method<global::GrpcMediaService.IdRequest, global::GrpcMediaService.FormPublicStruct>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetFormPublicInfoById",
        __Marshaller_IdRequest,
        __Marshaller_FormPublicStruct);

    static readonly grpc::Method<global::GrpcMediaService.PaginationRequestSearch, global::GrpcMediaService.FormPublicList> __Method_GetFormPublicListBySearch = new grpc::Method<global::GrpcMediaService.PaginationRequestSearch, global::GrpcMediaService.FormPublicList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetFormPublicListBySearch",
        __Marshaller_PaginationRequestSearch,
        __Marshaller_FormPublicList);

    static readonly grpc::Method<global::GrpcMediaService.ExpressStruct, global::GrpcMediaService.ModifyReply> __Method_CreateExpressInfo = new grpc::Method<global::GrpcMediaService.ExpressStruct, global::GrpcMediaService.ModifyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateExpressInfo",
        __Marshaller_ExpressStruct,
        __Marshaller_ModifyReply);

    static readonly grpc::Method<global::GrpcMediaService.ExpressStruct, global::GrpcMediaService.ModifyReply> __Method_UpdateExpressInfo = new grpc::Method<global::GrpcMediaService.ExpressStruct, global::GrpcMediaService.ModifyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateExpressInfo",
        __Marshaller_ExpressStruct,
        __Marshaller_ModifyReply);

    static readonly grpc::Method<global::GrpcMediaService.IdRequest, global::GrpcMediaService.ModifyReply> __Method_DeleteExpressInfoById = new grpc::Method<global::GrpcMediaService.IdRequest, global::GrpcMediaService.ModifyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteExpressInfoById",
        __Marshaller_IdRequest,
        __Marshaller_ModifyReply);

    static readonly grpc::Method<global::GrpcMediaService.IdRequest, global::GrpcMediaService.ExpressStruct> __Method_GetExpressInfoById = new grpc::Method<global::GrpcMediaService.IdRequest, global::GrpcMediaService.ExpressStruct>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetExpressInfoById",
        __Marshaller_IdRequest,
        __Marshaller_ExpressStruct);

    static readonly grpc::Method<global::GrpcMediaService.PaginationRequestSearch, global::GrpcMediaService.ExpressList> __Method_GetExpressListBySearch = new grpc::Method<global::GrpcMediaService.PaginationRequestSearch, global::GrpcMediaService.ExpressList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetExpressListBySearch",
        __Marshaller_PaginationRequestSearch,
        __Marshaller_ExpressList);

    static readonly grpc::Method<global::GrpcMediaService.CatalogueBooksStruct, global::GrpcMediaService.ModifyReply> __Method_CreateCatalogueBooksInfo = new grpc::Method<global::GrpcMediaService.CatalogueBooksStruct, global::GrpcMediaService.ModifyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCatalogueBooksInfo",
        __Marshaller_CatalogueBooksStruct,
        __Marshaller_ModifyReply);

    static readonly grpc::Method<global::GrpcMediaService.CatalogueBooksStruct, global::GrpcMediaService.ModifyReply> __Method_UpdateCatalogueBooksInfo = new grpc::Method<global::GrpcMediaService.CatalogueBooksStruct, global::GrpcMediaService.ModifyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCatalogueBooksInfo",
        __Marshaller_CatalogueBooksStruct,
        __Marshaller_ModifyReply);

    static readonly grpc::Method<global::GrpcMediaService.IdRequest, global::GrpcMediaService.ModifyReply> __Method_DeleteCatalogueBooksById = new grpc::Method<global::GrpcMediaService.IdRequest, global::GrpcMediaService.ModifyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteCatalogueBooksById",
        __Marshaller_IdRequest,
        __Marshaller_ModifyReply);

    static readonly grpc::Method<global::GrpcMediaService.InterviewStruct, global::GrpcMediaService.ModifyReply> __Method_CreateInterviewInfo = new grpc::Method<global::GrpcMediaService.InterviewStruct, global::GrpcMediaService.ModifyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateInterviewInfo",
        __Marshaller_InterviewStruct,
        __Marshaller_ModifyReply);

    static readonly grpc::Method<global::GrpcMediaService.InterviewStruct, global::GrpcMediaService.ModifyReply> __Method_UpdateInterviewInfo = new grpc::Method<global::GrpcMediaService.InterviewStruct, global::GrpcMediaService.ModifyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateInterviewInfo",
        __Marshaller_InterviewStruct,
        __Marshaller_ModifyReply);

    static readonly grpc::Method<global::GrpcMediaService.IdRequest, global::GrpcMediaService.ModifyReply> __Method_DeleteInterviewById = new grpc::Method<global::GrpcMediaService.IdRequest, global::GrpcMediaService.ModifyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteInterviewById",
        __Marshaller_IdRequest,
        __Marshaller_ModifyReply);

    static readonly grpc::Method<global::GrpcMediaService.IdRequest, global::GrpcMediaService.InterviewStruct> __Method_GetInterviewInfoById = new grpc::Method<global::GrpcMediaService.IdRequest, global::GrpcMediaService.InterviewStruct>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetInterviewInfoById",
        __Marshaller_IdRequest,
        __Marshaller_InterviewStruct);

    static readonly grpc::Method<global::GrpcMediaService.PaginationRequestSearch, global::GrpcMediaService.InterviewList> __Method_GetInterviewListBySearch = new grpc::Method<global::GrpcMediaService.PaginationRequestSearch, global::GrpcMediaService.InterviewList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetInterviewListBySearch",
        __Marshaller_PaginationRequestSearch,
        __Marshaller_InterviewList);

    static readonly grpc::Method<global::GrpcMediaService.HighlightsInfoStruct, global::GrpcMediaService.ModifyReply> __Method_CreateHighlightsInfo = new grpc::Method<global::GrpcMediaService.HighlightsInfoStruct, global::GrpcMediaService.ModifyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateHighlightsInfo",
        __Marshaller_HighlightsInfoStruct,
        __Marshaller_ModifyReply);

    static readonly grpc::Method<global::GrpcMediaService.HighlightsInfoStruct, global::GrpcMediaService.ModifyReply> __Method_UpdateHighlightsInfo = new grpc::Method<global::GrpcMediaService.HighlightsInfoStruct, global::GrpcMediaService.ModifyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateHighlightsInfo",
        __Marshaller_HighlightsInfoStruct,
        __Marshaller_ModifyReply);

    static readonly grpc::Method<global::GrpcMediaService.IdRequest, global::GrpcMediaService.ModifyReply> __Method_DeleteHighlightsInfoById = new grpc::Method<global::GrpcMediaService.IdRequest, global::GrpcMediaService.ModifyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteHighlightsInfoById",
        __Marshaller_IdRequest,
        __Marshaller_ModifyReply);

    static readonly grpc::Method<global::GrpcMediaService.IdRequest, global::GrpcMediaService.HighlightsInfoStruct> __Method_GetHighlightsInfoById = new grpc::Method<global::GrpcMediaService.IdRequest, global::GrpcMediaService.HighlightsInfoStruct>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetHighlightsInfoById",
        __Marshaller_IdRequest,
        __Marshaller_HighlightsInfoStruct);

    static readonly grpc::Method<global::GrpcMediaService.PaginationRequestSearch, global::GrpcMediaService.HighlightsInfoList> __Method_GetHighlightsInfoListBySearch = new grpc::Method<global::GrpcMediaService.PaginationRequestSearch, global::GrpcMediaService.HighlightsInfoList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetHighlightsInfoListBySearch",
        __Marshaller_PaginationRequestSearch,
        __Marshaller_HighlightsInfoList);

    static readonly grpc::Method<global::GrpcMediaService.HotelStruct, global::GrpcMediaService.ModifyReply> __Method_CreateHotelInfo = new grpc::Method<global::GrpcMediaService.HotelStruct, global::GrpcMediaService.ModifyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateHotelInfo",
        __Marshaller_HotelStruct,
        __Marshaller_ModifyReply);

    static readonly grpc::Method<global::GrpcMediaService.HotelStruct, global::GrpcMediaService.ModifyReply> __Method_UpdateHotelInfo = new grpc::Method<global::GrpcMediaService.HotelStruct, global::GrpcMediaService.ModifyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateHotelInfo",
        __Marshaller_HotelStruct,
        __Marshaller_ModifyReply);

    static readonly grpc::Method<global::GrpcMediaService.HotelId, global::GrpcMediaService.ModifyReply> __Method_DeleteHotelInfoById = new grpc::Method<global::GrpcMediaService.HotelId, global::GrpcMediaService.ModifyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteHotelInfoById",
        __Marshaller_HotelId,
        __Marshaller_ModifyReply);

    static readonly grpc::Method<global::GrpcMediaService.HotelId, global::GrpcMediaService.HotelStruct> __Method_GetHotelById = new grpc::Method<global::GrpcMediaService.HotelId, global::GrpcMediaService.HotelStruct>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetHotelById",
        __Marshaller_HotelId,
        __Marshaller_HotelStruct);

    static readonly grpc::Method<global::GrpcMediaService.Empty, global::GrpcMediaService.HotelList> __Method_GetHotelList = new grpc::Method<global::GrpcMediaService.Empty, global::GrpcMediaService.HotelList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetHotelList",
        __Marshaller_Empty,
        __Marshaller_HotelList);

    static readonly grpc::Method<global::GrpcMediaService.HotelRoomTypeStruct, global::GrpcMediaService.ModifyReply> __Method_CreateHotelRoomTypeInfo = new grpc::Method<global::GrpcMediaService.HotelRoomTypeStruct, global::GrpcMediaService.ModifyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateHotelRoomTypeInfo",
        __Marshaller_HotelRoomTypeStruct,
        __Marshaller_ModifyReply);

    static readonly grpc::Method<global::GrpcMediaService.HotelRoomTypeStruct, global::GrpcMediaService.ModifyReply> __Method_UpdateHotelRoomTypeInfo = new grpc::Method<global::GrpcMediaService.HotelRoomTypeStruct, global::GrpcMediaService.ModifyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateHotelRoomTypeInfo",
        __Marshaller_HotelRoomTypeStruct,
        __Marshaller_ModifyReply);

    static readonly grpc::Method<global::GrpcMediaService.HotelRoomTypeId, global::GrpcMediaService.ModifyReply> __Method_DeleteHotelRoomTypeById = new grpc::Method<global::GrpcMediaService.HotelRoomTypeId, global::GrpcMediaService.ModifyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteHotelRoomTypeById",
        __Marshaller_HotelRoomTypeId,
        __Marshaller_ModifyReply);

    static readonly grpc::Method<global::GrpcMediaService.HotelRoomTypeId, global::GrpcMediaService.HotelRoomTypeStruct> __Method_GetHotelRoomTypeInfoById = new grpc::Method<global::GrpcMediaService.HotelRoomTypeId, global::GrpcMediaService.HotelRoomTypeStruct>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetHotelRoomTypeInfoById",
        __Marshaller_HotelRoomTypeId,
        __Marshaller_HotelRoomTypeStruct);

    static readonly grpc::Method<global::GrpcMediaService.HotelId, global::GrpcMediaService.HotelRoomTypeList> __Method_GetHolteRoomTypeListByHotelId = new grpc::Method<global::GrpcMediaService.HotelId, global::GrpcMediaService.HotelRoomTypeList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetHolteRoomTypeListByHotelId",
        __Marshaller_HotelId,
        __Marshaller_HotelRoomTypeList);

    static readonly grpc::Method<global::GrpcMediaService.HotelBookRecordStruct, global::GrpcMediaService.ModifyReply> __Method_CreateHotelBookRecordInfo = new grpc::Method<global::GrpcMediaService.HotelBookRecordStruct, global::GrpcMediaService.ModifyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateHotelBookRecordInfo",
        __Marshaller_HotelBookRecordStruct,
        __Marshaller_ModifyReply);

    static readonly grpc::Method<global::GrpcMediaService.HotelBookRecordStruct, global::GrpcMediaService.ModifyReply> __Method_UpdateHotelBookRecordInfo = new grpc::Method<global::GrpcMediaService.HotelBookRecordStruct, global::GrpcMediaService.ModifyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateHotelBookRecordInfo",
        __Marshaller_HotelBookRecordStruct,
        __Marshaller_ModifyReply);

    static readonly grpc::Method<global::GrpcMediaService.IdRequest, global::GrpcMediaService.ModifyReply> __Method_DeleteHotelBookRecordInfoById = new grpc::Method<global::GrpcMediaService.IdRequest, global::GrpcMediaService.ModifyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteHotelBookRecordInfoById",
        __Marshaller_IdRequest,
        __Marshaller_ModifyReply);

    static readonly grpc::Method<global::GrpcMediaService.MemberId, global::GrpcMediaService.HotelBookRecordStruct> __Method_GetHotelBookRecordByMemberId = new grpc::Method<global::GrpcMediaService.MemberId, global::GrpcMediaService.HotelBookRecordStruct>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetHotelBookRecordByMemberId",
        __Marshaller_MemberId,
        __Marshaller_HotelBookRecordStruct);

    static readonly grpc::Method<global::GrpcMediaService.IdRequest, global::GrpcMediaService.ModifyReply> __Method_CancelHotelBookRecordById = new grpc::Method<global::GrpcMediaService.IdRequest, global::GrpcMediaService.ModifyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CancelHotelBookRecordById",
        __Marshaller_IdRequest,
        __Marshaller_ModifyReply);

    static readonly grpc::Method<global::GrpcMediaService.IdRequest, global::GrpcMediaService.HotelBookRecordStruct> __Method_GetHotelBookRecordById = new grpc::Method<global::GrpcMediaService.IdRequest, global::GrpcMediaService.HotelBookRecordStruct>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetHotelBookRecordById",
        __Marshaller_IdRequest,
        __Marshaller_HotelBookRecordStruct);

    static readonly grpc::Method<global::GrpcMediaService.PaginationRequestSearch, global::GrpcMediaService.HotelBookRecordList> __Method_GetHotelBookRecordListBySearch = new grpc::Method<global::GrpcMediaService.PaginationRequestSearch, global::GrpcMediaService.HotelBookRecordList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetHotelBookRecordListBySearch",
        __Marshaller_PaginationRequestSearch,
        __Marshaller_HotelBookRecordList);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcMediaService.GrpcMediaReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of MediaServiceToGrpc</summary>
    public abstract partial class MediaServiceToGrpcBase
    {
      /// <summary>
      ///创建会刊信息
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ModifyReply> CreateFormPublicInfo(global::GrpcMediaService.FormPublicStruct request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///修改会刊信息
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ModifyReply> UpdateFormPublicInfo(global::GrpcMediaService.FormPublicStruct request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///根据Id删除会刊信息
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ModifyReply> DeleteFormPublicInfoById(global::GrpcMediaService.IdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///获得会刊信息列表
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.FormPublicList> GetFormPublicInfoList(global::GrpcMediaService.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///根据Id获得会刊信息
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.FormPublicStruct> GetFormPublicInfoById(global::GrpcMediaService.IdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///根据条件查询会刊信息列表(带分页)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.FormPublicList> GetFormPublicListBySearch(global::GrpcMediaService.PaginationRequestSearch request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///创建快递单记录
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ModifyReply> CreateExpressInfo(global::GrpcMediaService.ExpressStruct request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///修改快递单记录
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ModifyReply> UpdateExpressInfo(global::GrpcMediaService.ExpressStruct request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///根据Id删除快递单记录
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ModifyReply> DeleteExpressInfoById(global::GrpcMediaService.IdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///根据Id获得快递单信息
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ExpressStruct> GetExpressInfoById(global::GrpcMediaService.IdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///根据条件查询快递单信息列表(带分页)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ExpressList> GetExpressListBySearch(global::GrpcMediaService.PaginationRequestSearch request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///创建会刊订购信息
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ModifyReply> CreateCatalogueBooksInfo(global::GrpcMediaService.CatalogueBooksStruct request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///修改会刊订购信息
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ModifyReply> UpdateCatalogueBooksInfo(global::GrpcMediaService.CatalogueBooksStruct request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///根据Id删除会刊订购信息
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ModifyReply> DeleteCatalogueBooksById(global::GrpcMediaService.IdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///创建专题采访信息
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ModifyReply> CreateInterviewInfo(global::GrpcMediaService.InterviewStruct request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///修改专题采访信息
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ModifyReply> UpdateInterviewInfo(global::GrpcMediaService.InterviewStruct request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///根据Id删除专题采访信息
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ModifyReply> DeleteInterviewById(global::GrpcMediaService.IdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///根据Id获得专题采访信息
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.InterviewStruct> GetInterviewInfoById(global::GrpcMediaService.IdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///根据条件查询专题采访信息列表(带分页)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.InterviewList> GetInterviewListBySearch(global::GrpcMediaService.PaginationRequestSearch request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///创建十大亮点信息
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ModifyReply> CreateHighlightsInfo(global::GrpcMediaService.HighlightsInfoStruct request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///修改十大亮点信息
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ModifyReply> UpdateHighlightsInfo(global::GrpcMediaService.HighlightsInfoStruct request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///根据Id删除十大亮点信息
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ModifyReply> DeleteHighlightsInfoById(global::GrpcMediaService.IdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///根据Id获得十大亮点信息
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.HighlightsInfoStruct> GetHighlightsInfoById(global::GrpcMediaService.IdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///根据条件查询十大亮点信息列表(带分页)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.HighlightsInfoList> GetHighlightsInfoListBySearch(global::GrpcMediaService.PaginationRequestSearch request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///========================酒店=========================
      ///创建酒店信息
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ModifyReply> CreateHotelInfo(global::GrpcMediaService.HotelStruct request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///修改酒店信息
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ModifyReply> UpdateHotelInfo(global::GrpcMediaService.HotelStruct request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///根据HotelId删除酒店信息
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ModifyReply> DeleteHotelInfoById(global::GrpcMediaService.HotelId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///根据HotelId获得酒店信息
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.HotelStruct> GetHotelById(global::GrpcMediaService.HotelId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///获得酒店信息列表
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.HotelList> GetHotelList(global::GrpcMediaService.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///================酒店房间类型=========================
      ///创建酒店房间类型
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ModifyReply> CreateHotelRoomTypeInfo(global::GrpcMediaService.HotelRoomTypeStruct request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///修改酒店房间类型信息
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ModifyReply> UpdateHotelRoomTypeInfo(global::GrpcMediaService.HotelRoomTypeStruct request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///根据HptelRoomTypeId删除酒店房间类型
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ModifyReply> DeleteHotelRoomTypeById(global::GrpcMediaService.HotelRoomTypeId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///根据HotelRoomTypeId获得酒店房间类型信息
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.HotelRoomTypeStruct> GetHotelRoomTypeInfoById(global::GrpcMediaService.HotelRoomTypeId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///根据HotelId获得酒店房间集合
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.HotelRoomTypeList> GetHolteRoomTypeListByHotelId(global::GrpcMediaService.HotelId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///创建酒店预订信息
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ModifyReply> CreateHotelBookRecordInfo(global::GrpcMediaService.HotelBookRecordStruct request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///修改酒店预订信息
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ModifyReply> UpdateHotelBookRecordInfo(global::GrpcMediaService.HotelBookRecordStruct request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///根据Id删除酒店预订记录
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ModifyReply> DeleteHotelBookRecordInfoById(global::GrpcMediaService.IdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///根据MemberId获得酒店预订记录
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.HotelBookRecordStruct> GetHotelBookRecordByMemberId(global::GrpcMediaService.MemberId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///根据Id取消酒店预订
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.ModifyReply> CancelHotelBookRecordById(global::GrpcMediaService.IdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///根据Id获得酒店预订记录
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.HotelBookRecordStruct> GetHotelBookRecordById(global::GrpcMediaService.IdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///根据条件查询酒店预订记录列表(带分页)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcMediaService.HotelBookRecordList> GetHotelBookRecordListBySearch(global::GrpcMediaService.PaginationRequestSearch request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for MediaServiceToGrpc</summary>
    public partial class MediaServiceToGrpcClient : grpc::ClientBase<MediaServiceToGrpcClient>
    {
      /// <summary>Creates a new client for MediaServiceToGrpc</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public MediaServiceToGrpcClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for MediaServiceToGrpc that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public MediaServiceToGrpcClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected MediaServiceToGrpcClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected MediaServiceToGrpcClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///创建会刊信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply CreateFormPublicInfo(global::GrpcMediaService.FormPublicStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateFormPublicInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///创建会刊信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply CreateFormPublicInfo(global::GrpcMediaService.FormPublicStruct request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateFormPublicInfo, null, options, request);
      }
      /// <summary>
      ///创建会刊信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> CreateFormPublicInfoAsync(global::GrpcMediaService.FormPublicStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateFormPublicInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///创建会刊信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> CreateFormPublicInfoAsync(global::GrpcMediaService.FormPublicStruct request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateFormPublicInfo, null, options, request);
      }
      /// <summary>
      ///修改会刊信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply UpdateFormPublicInfo(global::GrpcMediaService.FormPublicStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateFormPublicInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///修改会刊信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply UpdateFormPublicInfo(global::GrpcMediaService.FormPublicStruct request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateFormPublicInfo, null, options, request);
      }
      /// <summary>
      ///修改会刊信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> UpdateFormPublicInfoAsync(global::GrpcMediaService.FormPublicStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateFormPublicInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///修改会刊信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> UpdateFormPublicInfoAsync(global::GrpcMediaService.FormPublicStruct request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateFormPublicInfo, null, options, request);
      }
      /// <summary>
      ///根据Id删除会刊信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply DeleteFormPublicInfoById(global::GrpcMediaService.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteFormPublicInfoById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据Id删除会刊信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply DeleteFormPublicInfoById(global::GrpcMediaService.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteFormPublicInfoById, null, options, request);
      }
      /// <summary>
      ///根据Id删除会刊信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> DeleteFormPublicInfoByIdAsync(global::GrpcMediaService.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteFormPublicInfoByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据Id删除会刊信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> DeleteFormPublicInfoByIdAsync(global::GrpcMediaService.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteFormPublicInfoById, null, options, request);
      }
      /// <summary>
      ///获得会刊信息列表
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.FormPublicList GetFormPublicInfoList(global::GrpcMediaService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFormPublicInfoList(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///获得会刊信息列表
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.FormPublicList GetFormPublicInfoList(global::GrpcMediaService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetFormPublicInfoList, null, options, request);
      }
      /// <summary>
      ///获得会刊信息列表
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.FormPublicList> GetFormPublicInfoListAsync(global::GrpcMediaService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFormPublicInfoListAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///获得会刊信息列表
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.FormPublicList> GetFormPublicInfoListAsync(global::GrpcMediaService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetFormPublicInfoList, null, options, request);
      }
      /// <summary>
      ///根据Id获得会刊信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.FormPublicStruct GetFormPublicInfoById(global::GrpcMediaService.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFormPublicInfoById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据Id获得会刊信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.FormPublicStruct GetFormPublicInfoById(global::GrpcMediaService.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetFormPublicInfoById, null, options, request);
      }
      /// <summary>
      ///根据Id获得会刊信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.FormPublicStruct> GetFormPublicInfoByIdAsync(global::GrpcMediaService.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFormPublicInfoByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据Id获得会刊信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.FormPublicStruct> GetFormPublicInfoByIdAsync(global::GrpcMediaService.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetFormPublicInfoById, null, options, request);
      }
      /// <summary>
      ///根据条件查询会刊信息列表(带分页)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.FormPublicList GetFormPublicListBySearch(global::GrpcMediaService.PaginationRequestSearch request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFormPublicListBySearch(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据条件查询会刊信息列表(带分页)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.FormPublicList GetFormPublicListBySearch(global::GrpcMediaService.PaginationRequestSearch request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetFormPublicListBySearch, null, options, request);
      }
      /// <summary>
      ///根据条件查询会刊信息列表(带分页)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.FormPublicList> GetFormPublicListBySearchAsync(global::GrpcMediaService.PaginationRequestSearch request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFormPublicListBySearchAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据条件查询会刊信息列表(带分页)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.FormPublicList> GetFormPublicListBySearchAsync(global::GrpcMediaService.PaginationRequestSearch request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetFormPublicListBySearch, null, options, request);
      }
      /// <summary>
      ///创建快递单记录
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply CreateExpressInfo(global::GrpcMediaService.ExpressStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateExpressInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///创建快递单记录
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply CreateExpressInfo(global::GrpcMediaService.ExpressStruct request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateExpressInfo, null, options, request);
      }
      /// <summary>
      ///创建快递单记录
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> CreateExpressInfoAsync(global::GrpcMediaService.ExpressStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateExpressInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///创建快递单记录
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> CreateExpressInfoAsync(global::GrpcMediaService.ExpressStruct request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateExpressInfo, null, options, request);
      }
      /// <summary>
      ///修改快递单记录
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply UpdateExpressInfo(global::GrpcMediaService.ExpressStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateExpressInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///修改快递单记录
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply UpdateExpressInfo(global::GrpcMediaService.ExpressStruct request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateExpressInfo, null, options, request);
      }
      /// <summary>
      ///修改快递单记录
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> UpdateExpressInfoAsync(global::GrpcMediaService.ExpressStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateExpressInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///修改快递单记录
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> UpdateExpressInfoAsync(global::GrpcMediaService.ExpressStruct request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateExpressInfo, null, options, request);
      }
      /// <summary>
      ///根据Id删除快递单记录
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply DeleteExpressInfoById(global::GrpcMediaService.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteExpressInfoById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据Id删除快递单记录
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply DeleteExpressInfoById(global::GrpcMediaService.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteExpressInfoById, null, options, request);
      }
      /// <summary>
      ///根据Id删除快递单记录
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> DeleteExpressInfoByIdAsync(global::GrpcMediaService.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteExpressInfoByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据Id删除快递单记录
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> DeleteExpressInfoByIdAsync(global::GrpcMediaService.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteExpressInfoById, null, options, request);
      }
      /// <summary>
      ///根据Id获得快递单信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ExpressStruct GetExpressInfoById(global::GrpcMediaService.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetExpressInfoById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据Id获得快递单信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ExpressStruct GetExpressInfoById(global::GrpcMediaService.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetExpressInfoById, null, options, request);
      }
      /// <summary>
      ///根据Id获得快递单信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ExpressStruct> GetExpressInfoByIdAsync(global::GrpcMediaService.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetExpressInfoByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据Id获得快递单信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ExpressStruct> GetExpressInfoByIdAsync(global::GrpcMediaService.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetExpressInfoById, null, options, request);
      }
      /// <summary>
      ///根据条件查询快递单信息列表(带分页)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ExpressList GetExpressListBySearch(global::GrpcMediaService.PaginationRequestSearch request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetExpressListBySearch(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据条件查询快递单信息列表(带分页)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ExpressList GetExpressListBySearch(global::GrpcMediaService.PaginationRequestSearch request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetExpressListBySearch, null, options, request);
      }
      /// <summary>
      ///根据条件查询快递单信息列表(带分页)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ExpressList> GetExpressListBySearchAsync(global::GrpcMediaService.PaginationRequestSearch request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetExpressListBySearchAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据条件查询快递单信息列表(带分页)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ExpressList> GetExpressListBySearchAsync(global::GrpcMediaService.PaginationRequestSearch request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetExpressListBySearch, null, options, request);
      }
      /// <summary>
      ///创建会刊订购信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply CreateCatalogueBooksInfo(global::GrpcMediaService.CatalogueBooksStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCatalogueBooksInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///创建会刊订购信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply CreateCatalogueBooksInfo(global::GrpcMediaService.CatalogueBooksStruct request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCatalogueBooksInfo, null, options, request);
      }
      /// <summary>
      ///创建会刊订购信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> CreateCatalogueBooksInfoAsync(global::GrpcMediaService.CatalogueBooksStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCatalogueBooksInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///创建会刊订购信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> CreateCatalogueBooksInfoAsync(global::GrpcMediaService.CatalogueBooksStruct request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCatalogueBooksInfo, null, options, request);
      }
      /// <summary>
      ///修改会刊订购信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply UpdateCatalogueBooksInfo(global::GrpcMediaService.CatalogueBooksStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCatalogueBooksInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///修改会刊订购信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply UpdateCatalogueBooksInfo(global::GrpcMediaService.CatalogueBooksStruct request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCatalogueBooksInfo, null, options, request);
      }
      /// <summary>
      ///修改会刊订购信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> UpdateCatalogueBooksInfoAsync(global::GrpcMediaService.CatalogueBooksStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCatalogueBooksInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///修改会刊订购信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> UpdateCatalogueBooksInfoAsync(global::GrpcMediaService.CatalogueBooksStruct request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCatalogueBooksInfo, null, options, request);
      }
      /// <summary>
      ///根据Id删除会刊订购信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply DeleteCatalogueBooksById(global::GrpcMediaService.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCatalogueBooksById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据Id删除会刊订购信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply DeleteCatalogueBooksById(global::GrpcMediaService.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteCatalogueBooksById, null, options, request);
      }
      /// <summary>
      ///根据Id删除会刊订购信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> DeleteCatalogueBooksByIdAsync(global::GrpcMediaService.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCatalogueBooksByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据Id删除会刊订购信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> DeleteCatalogueBooksByIdAsync(global::GrpcMediaService.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteCatalogueBooksById, null, options, request);
      }
      /// <summary>
      ///创建专题采访信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply CreateInterviewInfo(global::GrpcMediaService.InterviewStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateInterviewInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///创建专题采访信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply CreateInterviewInfo(global::GrpcMediaService.InterviewStruct request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateInterviewInfo, null, options, request);
      }
      /// <summary>
      ///创建专题采访信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> CreateInterviewInfoAsync(global::GrpcMediaService.InterviewStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateInterviewInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///创建专题采访信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> CreateInterviewInfoAsync(global::GrpcMediaService.InterviewStruct request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateInterviewInfo, null, options, request);
      }
      /// <summary>
      ///修改专题采访信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply UpdateInterviewInfo(global::GrpcMediaService.InterviewStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateInterviewInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///修改专题采访信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply UpdateInterviewInfo(global::GrpcMediaService.InterviewStruct request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateInterviewInfo, null, options, request);
      }
      /// <summary>
      ///修改专题采访信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> UpdateInterviewInfoAsync(global::GrpcMediaService.InterviewStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateInterviewInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///修改专题采访信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> UpdateInterviewInfoAsync(global::GrpcMediaService.InterviewStruct request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateInterviewInfo, null, options, request);
      }
      /// <summary>
      ///根据Id删除专题采访信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply DeleteInterviewById(global::GrpcMediaService.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteInterviewById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据Id删除专题采访信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply DeleteInterviewById(global::GrpcMediaService.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteInterviewById, null, options, request);
      }
      /// <summary>
      ///根据Id删除专题采访信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> DeleteInterviewByIdAsync(global::GrpcMediaService.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteInterviewByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据Id删除专题采访信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> DeleteInterviewByIdAsync(global::GrpcMediaService.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteInterviewById, null, options, request);
      }
      /// <summary>
      ///根据Id获得专题采访信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.InterviewStruct GetInterviewInfoById(global::GrpcMediaService.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInterviewInfoById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据Id获得专题采访信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.InterviewStruct GetInterviewInfoById(global::GrpcMediaService.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetInterviewInfoById, null, options, request);
      }
      /// <summary>
      ///根据Id获得专题采访信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.InterviewStruct> GetInterviewInfoByIdAsync(global::GrpcMediaService.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInterviewInfoByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据Id获得专题采访信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.InterviewStruct> GetInterviewInfoByIdAsync(global::GrpcMediaService.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetInterviewInfoById, null, options, request);
      }
      /// <summary>
      ///根据条件查询专题采访信息列表(带分页)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.InterviewList GetInterviewListBySearch(global::GrpcMediaService.PaginationRequestSearch request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInterviewListBySearch(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据条件查询专题采访信息列表(带分页)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.InterviewList GetInterviewListBySearch(global::GrpcMediaService.PaginationRequestSearch request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetInterviewListBySearch, null, options, request);
      }
      /// <summary>
      ///根据条件查询专题采访信息列表(带分页)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.InterviewList> GetInterviewListBySearchAsync(global::GrpcMediaService.PaginationRequestSearch request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInterviewListBySearchAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据条件查询专题采访信息列表(带分页)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.InterviewList> GetInterviewListBySearchAsync(global::GrpcMediaService.PaginationRequestSearch request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetInterviewListBySearch, null, options, request);
      }
      /// <summary>
      ///创建十大亮点信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply CreateHighlightsInfo(global::GrpcMediaService.HighlightsInfoStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateHighlightsInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///创建十大亮点信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply CreateHighlightsInfo(global::GrpcMediaService.HighlightsInfoStruct request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateHighlightsInfo, null, options, request);
      }
      /// <summary>
      ///创建十大亮点信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> CreateHighlightsInfoAsync(global::GrpcMediaService.HighlightsInfoStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateHighlightsInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///创建十大亮点信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> CreateHighlightsInfoAsync(global::GrpcMediaService.HighlightsInfoStruct request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateHighlightsInfo, null, options, request);
      }
      /// <summary>
      ///修改十大亮点信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply UpdateHighlightsInfo(global::GrpcMediaService.HighlightsInfoStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateHighlightsInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///修改十大亮点信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply UpdateHighlightsInfo(global::GrpcMediaService.HighlightsInfoStruct request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateHighlightsInfo, null, options, request);
      }
      /// <summary>
      ///修改十大亮点信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> UpdateHighlightsInfoAsync(global::GrpcMediaService.HighlightsInfoStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateHighlightsInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///修改十大亮点信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> UpdateHighlightsInfoAsync(global::GrpcMediaService.HighlightsInfoStruct request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateHighlightsInfo, null, options, request);
      }
      /// <summary>
      ///根据Id删除十大亮点信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply DeleteHighlightsInfoById(global::GrpcMediaService.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteHighlightsInfoById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据Id删除十大亮点信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply DeleteHighlightsInfoById(global::GrpcMediaService.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteHighlightsInfoById, null, options, request);
      }
      /// <summary>
      ///根据Id删除十大亮点信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> DeleteHighlightsInfoByIdAsync(global::GrpcMediaService.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteHighlightsInfoByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据Id删除十大亮点信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> DeleteHighlightsInfoByIdAsync(global::GrpcMediaService.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteHighlightsInfoById, null, options, request);
      }
      /// <summary>
      ///根据Id获得十大亮点信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.HighlightsInfoStruct GetHighlightsInfoById(global::GrpcMediaService.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHighlightsInfoById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据Id获得十大亮点信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.HighlightsInfoStruct GetHighlightsInfoById(global::GrpcMediaService.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetHighlightsInfoById, null, options, request);
      }
      /// <summary>
      ///根据Id获得十大亮点信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.HighlightsInfoStruct> GetHighlightsInfoByIdAsync(global::GrpcMediaService.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHighlightsInfoByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据Id获得十大亮点信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.HighlightsInfoStruct> GetHighlightsInfoByIdAsync(global::GrpcMediaService.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetHighlightsInfoById, null, options, request);
      }
      /// <summary>
      ///根据条件查询十大亮点信息列表(带分页)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.HighlightsInfoList GetHighlightsInfoListBySearch(global::GrpcMediaService.PaginationRequestSearch request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHighlightsInfoListBySearch(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据条件查询十大亮点信息列表(带分页)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.HighlightsInfoList GetHighlightsInfoListBySearch(global::GrpcMediaService.PaginationRequestSearch request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetHighlightsInfoListBySearch, null, options, request);
      }
      /// <summary>
      ///根据条件查询十大亮点信息列表(带分页)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.HighlightsInfoList> GetHighlightsInfoListBySearchAsync(global::GrpcMediaService.PaginationRequestSearch request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHighlightsInfoListBySearchAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据条件查询十大亮点信息列表(带分页)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.HighlightsInfoList> GetHighlightsInfoListBySearchAsync(global::GrpcMediaService.PaginationRequestSearch request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetHighlightsInfoListBySearch, null, options, request);
      }
      /// <summary>
      ///========================酒店=========================
      ///创建酒店信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply CreateHotelInfo(global::GrpcMediaService.HotelStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateHotelInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///========================酒店=========================
      ///创建酒店信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply CreateHotelInfo(global::GrpcMediaService.HotelStruct request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateHotelInfo, null, options, request);
      }
      /// <summary>
      ///========================酒店=========================
      ///创建酒店信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> CreateHotelInfoAsync(global::GrpcMediaService.HotelStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateHotelInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///========================酒店=========================
      ///创建酒店信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> CreateHotelInfoAsync(global::GrpcMediaService.HotelStruct request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateHotelInfo, null, options, request);
      }
      /// <summary>
      ///修改酒店信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply UpdateHotelInfo(global::GrpcMediaService.HotelStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateHotelInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///修改酒店信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply UpdateHotelInfo(global::GrpcMediaService.HotelStruct request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateHotelInfo, null, options, request);
      }
      /// <summary>
      ///修改酒店信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> UpdateHotelInfoAsync(global::GrpcMediaService.HotelStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateHotelInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///修改酒店信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> UpdateHotelInfoAsync(global::GrpcMediaService.HotelStruct request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateHotelInfo, null, options, request);
      }
      /// <summary>
      ///根据HotelId删除酒店信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply DeleteHotelInfoById(global::GrpcMediaService.HotelId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteHotelInfoById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据HotelId删除酒店信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply DeleteHotelInfoById(global::GrpcMediaService.HotelId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteHotelInfoById, null, options, request);
      }
      /// <summary>
      ///根据HotelId删除酒店信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> DeleteHotelInfoByIdAsync(global::GrpcMediaService.HotelId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteHotelInfoByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据HotelId删除酒店信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> DeleteHotelInfoByIdAsync(global::GrpcMediaService.HotelId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteHotelInfoById, null, options, request);
      }
      /// <summary>
      ///根据HotelId获得酒店信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.HotelStruct GetHotelById(global::GrpcMediaService.HotelId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHotelById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据HotelId获得酒店信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.HotelStruct GetHotelById(global::GrpcMediaService.HotelId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetHotelById, null, options, request);
      }
      /// <summary>
      ///根据HotelId获得酒店信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.HotelStruct> GetHotelByIdAsync(global::GrpcMediaService.HotelId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHotelByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据HotelId获得酒店信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.HotelStruct> GetHotelByIdAsync(global::GrpcMediaService.HotelId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetHotelById, null, options, request);
      }
      /// <summary>
      ///获得酒店信息列表
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.HotelList GetHotelList(global::GrpcMediaService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHotelList(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///获得酒店信息列表
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.HotelList GetHotelList(global::GrpcMediaService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetHotelList, null, options, request);
      }
      /// <summary>
      ///获得酒店信息列表
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.HotelList> GetHotelListAsync(global::GrpcMediaService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHotelListAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///获得酒店信息列表
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.HotelList> GetHotelListAsync(global::GrpcMediaService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetHotelList, null, options, request);
      }
      /// <summary>
      ///================酒店房间类型=========================
      ///创建酒店房间类型
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply CreateHotelRoomTypeInfo(global::GrpcMediaService.HotelRoomTypeStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateHotelRoomTypeInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///================酒店房间类型=========================
      ///创建酒店房间类型
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply CreateHotelRoomTypeInfo(global::GrpcMediaService.HotelRoomTypeStruct request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateHotelRoomTypeInfo, null, options, request);
      }
      /// <summary>
      ///================酒店房间类型=========================
      ///创建酒店房间类型
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> CreateHotelRoomTypeInfoAsync(global::GrpcMediaService.HotelRoomTypeStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateHotelRoomTypeInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///================酒店房间类型=========================
      ///创建酒店房间类型
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> CreateHotelRoomTypeInfoAsync(global::GrpcMediaService.HotelRoomTypeStruct request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateHotelRoomTypeInfo, null, options, request);
      }
      /// <summary>
      ///修改酒店房间类型信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply UpdateHotelRoomTypeInfo(global::GrpcMediaService.HotelRoomTypeStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateHotelRoomTypeInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///修改酒店房间类型信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply UpdateHotelRoomTypeInfo(global::GrpcMediaService.HotelRoomTypeStruct request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateHotelRoomTypeInfo, null, options, request);
      }
      /// <summary>
      ///修改酒店房间类型信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> UpdateHotelRoomTypeInfoAsync(global::GrpcMediaService.HotelRoomTypeStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateHotelRoomTypeInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///修改酒店房间类型信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> UpdateHotelRoomTypeInfoAsync(global::GrpcMediaService.HotelRoomTypeStruct request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateHotelRoomTypeInfo, null, options, request);
      }
      /// <summary>
      ///根据HptelRoomTypeId删除酒店房间类型
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply DeleteHotelRoomTypeById(global::GrpcMediaService.HotelRoomTypeId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteHotelRoomTypeById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据HptelRoomTypeId删除酒店房间类型
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply DeleteHotelRoomTypeById(global::GrpcMediaService.HotelRoomTypeId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteHotelRoomTypeById, null, options, request);
      }
      /// <summary>
      ///根据HptelRoomTypeId删除酒店房间类型
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> DeleteHotelRoomTypeByIdAsync(global::GrpcMediaService.HotelRoomTypeId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteHotelRoomTypeByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据HptelRoomTypeId删除酒店房间类型
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> DeleteHotelRoomTypeByIdAsync(global::GrpcMediaService.HotelRoomTypeId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteHotelRoomTypeById, null, options, request);
      }
      /// <summary>
      ///根据HotelRoomTypeId获得酒店房间类型信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.HotelRoomTypeStruct GetHotelRoomTypeInfoById(global::GrpcMediaService.HotelRoomTypeId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHotelRoomTypeInfoById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据HotelRoomTypeId获得酒店房间类型信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.HotelRoomTypeStruct GetHotelRoomTypeInfoById(global::GrpcMediaService.HotelRoomTypeId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetHotelRoomTypeInfoById, null, options, request);
      }
      /// <summary>
      ///根据HotelRoomTypeId获得酒店房间类型信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.HotelRoomTypeStruct> GetHotelRoomTypeInfoByIdAsync(global::GrpcMediaService.HotelRoomTypeId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHotelRoomTypeInfoByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据HotelRoomTypeId获得酒店房间类型信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.HotelRoomTypeStruct> GetHotelRoomTypeInfoByIdAsync(global::GrpcMediaService.HotelRoomTypeId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetHotelRoomTypeInfoById, null, options, request);
      }
      /// <summary>
      ///根据HotelId获得酒店房间集合
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.HotelRoomTypeList GetHolteRoomTypeListByHotelId(global::GrpcMediaService.HotelId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHolteRoomTypeListByHotelId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据HotelId获得酒店房间集合
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.HotelRoomTypeList GetHolteRoomTypeListByHotelId(global::GrpcMediaService.HotelId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetHolteRoomTypeListByHotelId, null, options, request);
      }
      /// <summary>
      ///根据HotelId获得酒店房间集合
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.HotelRoomTypeList> GetHolteRoomTypeListByHotelIdAsync(global::GrpcMediaService.HotelId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHolteRoomTypeListByHotelIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据HotelId获得酒店房间集合
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.HotelRoomTypeList> GetHolteRoomTypeListByHotelIdAsync(global::GrpcMediaService.HotelId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetHolteRoomTypeListByHotelId, null, options, request);
      }
      /// <summary>
      ///创建酒店预订信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply CreateHotelBookRecordInfo(global::GrpcMediaService.HotelBookRecordStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateHotelBookRecordInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///创建酒店预订信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply CreateHotelBookRecordInfo(global::GrpcMediaService.HotelBookRecordStruct request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateHotelBookRecordInfo, null, options, request);
      }
      /// <summary>
      ///创建酒店预订信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> CreateHotelBookRecordInfoAsync(global::GrpcMediaService.HotelBookRecordStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateHotelBookRecordInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///创建酒店预订信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> CreateHotelBookRecordInfoAsync(global::GrpcMediaService.HotelBookRecordStruct request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateHotelBookRecordInfo, null, options, request);
      }
      /// <summary>
      ///修改酒店预订信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply UpdateHotelBookRecordInfo(global::GrpcMediaService.HotelBookRecordStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateHotelBookRecordInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///修改酒店预订信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply UpdateHotelBookRecordInfo(global::GrpcMediaService.HotelBookRecordStruct request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateHotelBookRecordInfo, null, options, request);
      }
      /// <summary>
      ///修改酒店预订信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> UpdateHotelBookRecordInfoAsync(global::GrpcMediaService.HotelBookRecordStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateHotelBookRecordInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///修改酒店预订信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> UpdateHotelBookRecordInfoAsync(global::GrpcMediaService.HotelBookRecordStruct request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateHotelBookRecordInfo, null, options, request);
      }
      /// <summary>
      ///根据Id删除酒店预订记录
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply DeleteHotelBookRecordInfoById(global::GrpcMediaService.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteHotelBookRecordInfoById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据Id删除酒店预订记录
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply DeleteHotelBookRecordInfoById(global::GrpcMediaService.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteHotelBookRecordInfoById, null, options, request);
      }
      /// <summary>
      ///根据Id删除酒店预订记录
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> DeleteHotelBookRecordInfoByIdAsync(global::GrpcMediaService.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteHotelBookRecordInfoByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据Id删除酒店预订记录
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> DeleteHotelBookRecordInfoByIdAsync(global::GrpcMediaService.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteHotelBookRecordInfoById, null, options, request);
      }
      /// <summary>
      ///根据MemberId获得酒店预订记录
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.HotelBookRecordStruct GetHotelBookRecordByMemberId(global::GrpcMediaService.MemberId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHotelBookRecordByMemberId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据MemberId获得酒店预订记录
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.HotelBookRecordStruct GetHotelBookRecordByMemberId(global::GrpcMediaService.MemberId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetHotelBookRecordByMemberId, null, options, request);
      }
      /// <summary>
      ///根据MemberId获得酒店预订记录
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.HotelBookRecordStruct> GetHotelBookRecordByMemberIdAsync(global::GrpcMediaService.MemberId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHotelBookRecordByMemberIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据MemberId获得酒店预订记录
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.HotelBookRecordStruct> GetHotelBookRecordByMemberIdAsync(global::GrpcMediaService.MemberId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetHotelBookRecordByMemberId, null, options, request);
      }
      /// <summary>
      ///根据Id取消酒店预订
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply CancelHotelBookRecordById(global::GrpcMediaService.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelHotelBookRecordById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据Id取消酒店预订
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.ModifyReply CancelHotelBookRecordById(global::GrpcMediaService.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CancelHotelBookRecordById, null, options, request);
      }
      /// <summary>
      ///根据Id取消酒店预订
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> CancelHotelBookRecordByIdAsync(global::GrpcMediaService.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelHotelBookRecordByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据Id取消酒店预订
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.ModifyReply> CancelHotelBookRecordByIdAsync(global::GrpcMediaService.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CancelHotelBookRecordById, null, options, request);
      }
      /// <summary>
      ///根据Id获得酒店预订记录
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.HotelBookRecordStruct GetHotelBookRecordById(global::GrpcMediaService.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHotelBookRecordById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据Id获得酒店预订记录
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.HotelBookRecordStruct GetHotelBookRecordById(global::GrpcMediaService.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetHotelBookRecordById, null, options, request);
      }
      /// <summary>
      ///根据Id获得酒店预订记录
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.HotelBookRecordStruct> GetHotelBookRecordByIdAsync(global::GrpcMediaService.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHotelBookRecordByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据Id获得酒店预订记录
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.HotelBookRecordStruct> GetHotelBookRecordByIdAsync(global::GrpcMediaService.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetHotelBookRecordById, null, options, request);
      }
      /// <summary>
      ///根据条件查询酒店预订记录列表(带分页)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.HotelBookRecordList GetHotelBookRecordListBySearch(global::GrpcMediaService.PaginationRequestSearch request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHotelBookRecordListBySearch(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据条件查询酒店预订记录列表(带分页)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcMediaService.HotelBookRecordList GetHotelBookRecordListBySearch(global::GrpcMediaService.PaginationRequestSearch request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetHotelBookRecordListBySearch, null, options, request);
      }
      /// <summary>
      ///根据条件查询酒店预订记录列表(带分页)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.HotelBookRecordList> GetHotelBookRecordListBySearchAsync(global::GrpcMediaService.PaginationRequestSearch request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHotelBookRecordListBySearchAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///根据条件查询酒店预订记录列表(带分页)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcMediaService.HotelBookRecordList> GetHotelBookRecordListBySearchAsync(global::GrpcMediaService.PaginationRequestSearch request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetHotelBookRecordListBySearch, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override MediaServiceToGrpcClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new MediaServiceToGrpcClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(MediaServiceToGrpcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateFormPublicInfo, serviceImpl.CreateFormPublicInfo)
          .AddMethod(__Method_UpdateFormPublicInfo, serviceImpl.UpdateFormPublicInfo)
          .AddMethod(__Method_DeleteFormPublicInfoById, serviceImpl.DeleteFormPublicInfoById)
          .AddMethod(__Method_GetFormPublicInfoList, serviceImpl.GetFormPublicInfoList)
          .AddMethod(__Method_GetFormPublicInfoById, serviceImpl.GetFormPublicInfoById)
          .AddMethod(__Method_GetFormPublicListBySearch, serviceImpl.GetFormPublicListBySearch)
          .AddMethod(__Method_CreateExpressInfo, serviceImpl.CreateExpressInfo)
          .AddMethod(__Method_UpdateExpressInfo, serviceImpl.UpdateExpressInfo)
          .AddMethod(__Method_DeleteExpressInfoById, serviceImpl.DeleteExpressInfoById)
          .AddMethod(__Method_GetExpressInfoById, serviceImpl.GetExpressInfoById)
          .AddMethod(__Method_GetExpressListBySearch, serviceImpl.GetExpressListBySearch)
          .AddMethod(__Method_CreateCatalogueBooksInfo, serviceImpl.CreateCatalogueBooksInfo)
          .AddMethod(__Method_UpdateCatalogueBooksInfo, serviceImpl.UpdateCatalogueBooksInfo)
          .AddMethod(__Method_DeleteCatalogueBooksById, serviceImpl.DeleteCatalogueBooksById)
          .AddMethod(__Method_CreateInterviewInfo, serviceImpl.CreateInterviewInfo)
          .AddMethod(__Method_UpdateInterviewInfo, serviceImpl.UpdateInterviewInfo)
          .AddMethod(__Method_DeleteInterviewById, serviceImpl.DeleteInterviewById)
          .AddMethod(__Method_GetInterviewInfoById, serviceImpl.GetInterviewInfoById)
          .AddMethod(__Method_GetInterviewListBySearch, serviceImpl.GetInterviewListBySearch)
          .AddMethod(__Method_CreateHighlightsInfo, serviceImpl.CreateHighlightsInfo)
          .AddMethod(__Method_UpdateHighlightsInfo, serviceImpl.UpdateHighlightsInfo)
          .AddMethod(__Method_DeleteHighlightsInfoById, serviceImpl.DeleteHighlightsInfoById)
          .AddMethod(__Method_GetHighlightsInfoById, serviceImpl.GetHighlightsInfoById)
          .AddMethod(__Method_GetHighlightsInfoListBySearch, serviceImpl.GetHighlightsInfoListBySearch)
          .AddMethod(__Method_CreateHotelInfo, serviceImpl.CreateHotelInfo)
          .AddMethod(__Method_UpdateHotelInfo, serviceImpl.UpdateHotelInfo)
          .AddMethod(__Method_DeleteHotelInfoById, serviceImpl.DeleteHotelInfoById)
          .AddMethod(__Method_GetHotelById, serviceImpl.GetHotelById)
          .AddMethod(__Method_GetHotelList, serviceImpl.GetHotelList)
          .AddMethod(__Method_CreateHotelRoomTypeInfo, serviceImpl.CreateHotelRoomTypeInfo)
          .AddMethod(__Method_UpdateHotelRoomTypeInfo, serviceImpl.UpdateHotelRoomTypeInfo)
          .AddMethod(__Method_DeleteHotelRoomTypeById, serviceImpl.DeleteHotelRoomTypeById)
          .AddMethod(__Method_GetHotelRoomTypeInfoById, serviceImpl.GetHotelRoomTypeInfoById)
          .AddMethod(__Method_GetHolteRoomTypeListByHotelId, serviceImpl.GetHolteRoomTypeListByHotelId)
          .AddMethod(__Method_CreateHotelBookRecordInfo, serviceImpl.CreateHotelBookRecordInfo)
          .AddMethod(__Method_UpdateHotelBookRecordInfo, serviceImpl.UpdateHotelBookRecordInfo)
          .AddMethod(__Method_DeleteHotelBookRecordInfoById, serviceImpl.DeleteHotelBookRecordInfoById)
          .AddMethod(__Method_GetHotelBookRecordByMemberId, serviceImpl.GetHotelBookRecordByMemberId)
          .AddMethod(__Method_CancelHotelBookRecordById, serviceImpl.CancelHotelBookRecordById)
          .AddMethod(__Method_GetHotelBookRecordById, serviceImpl.GetHotelBookRecordById)
          .AddMethod(__Method_GetHotelBookRecordListBySearch, serviceImpl.GetHotelBookRecordListBySearch).Build();
    }

  }
}
#endregion
